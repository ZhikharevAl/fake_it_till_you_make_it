{"uid":"190da8f6cb6726bb","name":"Тест успешного получения данных пользователя","fullName":"tests.user.test_user_api.TestUserAPI#test_get_user_info_success","historyId":"ce00374a95389d718a8d728c79e283b3","time":{"start":1745180424713,"stop":1745180424756,"duration":43},"description":"Проверяем получение данных профиля для аутентифицированного пользователя.","descriptionHtml":"<p>Проверяем получение данных профиля для аутентифицированного пользователя.</p>\n","status":"failed","statusMessage":"AssertionError: assert 'Региональный логистический архитектор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Региональный логистический архитектор","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f42bb000e10>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f42b9999490>\n\n    @allure.feature(\"Профиль пользователя (GET /api/user)\")\n    @allure.story(\"Получение профиля\")\n    @allure.title(\"Тест успешного получения данных пользователя\")\n    @allure.description(\"Проверяем получение данных профиля для аутентифицированного пользователя.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    def test_get_user_info_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного получения информации o текущем пользователе.\n    \n        Ожидаемый результат: статус 200 и валидные данные пользователя.\n        \"\"\"\n        logger.info(\"Тест: Успешное получение данных пользователя (GET /api/user)\")\n        response = authenticated_user_client.get_user_info(expected_status=200)  # type: ignore\n    \n        with allure.step(\"Проверка данных пользователя\"):  # type: ignore\n            assert isinstance(response, UserDataResponse), \"Ответ должен быть типа UserDataResponse\"\n            assert response.id is not None, \"Поле 'id' пользователя не должно быть пустым\"\n            assert isinstance(response.id, str), \"Поле 'id' пользователя должно быть типа str\"\n            assert len(response.base_locations) == 2\n    \n            education = response.educations[0]\n            assert education is not None\n            assert education.model_dump(by_alias=True)[\"organizationName\"] == \"НПГУ ДПИ\"\n            assert education.model_dump(by_alias=True)[\"level\"] == \"Высшее\"\n>           assert (\n                education.model_dump(by_alias=True)[\"specialization\"]\n                == \"Районный маркетинговый администратор\"\n            )\nE           AssertionError: assert 'Региональный логистический архитектор' == 'Районный маркетинговый администратор'\nE             \nE             - Районный маркетинговый администратор\nE             + Региональный логистический архитектор\n\ntests/user/test_user_api.py:48: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1745180421355,"stop":1745180421355,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1745180421356,"stop":1745180421356,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1745180421357,"stop":1745180421357,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1745180421357,"stop":1745180421805,"duration":448},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1745180421357,"stop":1745180421357,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1745180421805,"stop":1745180421833,"duration":28},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1745180421834,"stop":1745180421834,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_client","time":{"start":1745180421834,"stop":1745180421835,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_token","time":{"start":1745180423956,"stop":1745180424067,"duration":111},"status":"passed","steps":[],"attachments":[{"uid":"67fafcdb101c69f9","name":"Status Code: 200","source":"67fafcdb101c69f9.txt","type":"text/plain","size":3},{"uid":"fd4579a460366882","name":"Request URL","source":"fd4579a460366882.uri","type":"text/uri-list","size":30},{"uid":"a904d52857164847","name":"Response Headers (JSON)","source":"a904d52857164847.json","type":"application/json","size":317},{"uid":"ef4a6bef4bee762","name":"Response Body (JSON)","source":"ef4a6bef4bee762.json","type":"application/json","size":224},{"uid":"2785d60b21c5477b","name":"Status response code: 200 (Expected: 200)","source":"2785d60b21c5477b.txt","type":"text/plain","size":3},{"uid":"39da9e3b60c9a1ce","name":"Body of the answer (failed by AuthSuccessResponse)","source":"39da9e3b60c9a1ce.json","type":"application/json","size":220}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"authenticated_api_req_context","time":{"start":1745180424694,"stop":1745180424711,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_http_client","time":{"start":1745180424711,"stop":1745180424712,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_user_client","time":{"start":1745180424712,"stop":1745180424712,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем получение данных профиля для аутентифицированного пользователя.","status":"failed","statusMessage":"AssertionError: assert 'Региональный логистический архитектор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Региональный логистический архитектор","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f42bb000e10>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f42b9999490>\n\n    @allure.feature(\"Профиль пользователя (GET /api/user)\")\n    @allure.story(\"Получение профиля\")\n    @allure.title(\"Тест успешного получения данных пользователя\")\n    @allure.description(\"Проверяем получение данных профиля для аутентифицированного пользователя.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    def test_get_user_info_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного получения информации o текущем пользователе.\n    \n        Ожидаемый результат: статус 200 и валидные данные пользователя.\n        \"\"\"\n        logger.info(\"Тест: Успешное получение данных пользователя (GET /api/user)\")\n        response = authenticated_user_client.get_user_info(expected_status=200)  # type: ignore\n    \n        with allure.step(\"Проверка данных пользователя\"):  # type: ignore\n            assert isinstance(response, UserDataResponse), \"Ответ должен быть типа UserDataResponse\"\n            assert response.id is not None, \"Поле 'id' пользователя не должно быть пустым\"\n            assert isinstance(response.id, str), \"Поле 'id' пользователя должно быть типа str\"\n            assert len(response.base_locations) == 2\n    \n            education = response.educations[0]\n            assert education is not None\n            assert education.model_dump(by_alias=True)[\"organizationName\"] == \"НПГУ ДПИ\"\n            assert education.model_dump(by_alias=True)[\"level\"] == \"Высшее\"\n>           assert (\n                education.model_dump(by_alias=True)[\"specialization\"]\n                == \"Районный маркетинговый администратор\"\n            )\nE           AssertionError: assert 'Региональный логистический архитектор' == 'Районный маркетинговый администратор'\nE             \nE             - Районный маркетинговый администратор\nE             + Региональный логистический архитектор\n\ntests/user/test_user_api.py:48: AssertionError","steps":[{"name":"Получение данных текущего пользователя","time":{"start":1745180424713,"stop":1745180424755,"duration":42},"status":"passed","steps":[],"attachments":[{"uid":"7c64c7de0b21b787","name":"Status Code: 200","source":"7c64c7de0b21b787.txt","type":"text/plain","size":3},{"uid":"57ed845652219fa9","name":"Request URL","source":"57ed845652219fa9.uri","type":"text/uri-list","size":30},{"uid":"c0145d49d17b2dad","name":"Response Headers (JSON)","source":"c0145d49d17b2dad.json","type":"application/json","size":318},{"uid":"159bdea3e846c76b","name":"Response Body (JSON)","source":"159bdea3e846c76b.json","type":"application/json","size":1360},{"uid":"b42f3539d0b56543","name":"Status response code: 200 (Expected: 200)","source":"b42f3539d0b56543.txt","type":"text/plain","size":3},{"uid":"c949759b69790da5","name":"Body of the answer (failed by UserDataResponse)","source":"c949759b69790da5.json","type":"application/json","size":1213}],"parameters":[{"name":"expected_status","value":"200"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"Проверка данных пользователя","time":{"start":1745180424755,"stop":1745180424755,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 'Региональный логистический архитектор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Региональный логистический архитектор\n","statusTrace":"  File \"/app/tests/user/test_user_api.py\", line 48, in test_get_user_info_success\n    assert (\n    ...<2 lines>...\n    )\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"468cb32ee0a5f925","name":"log","source":"468cb32ee0a5f925.txt","type":"text/plain","size":4811},{"uid":"6029e9032b7f3611","name":"stderr","source":"6029e9032b7f3611.txt","type":"text/plain","size":5700}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":8,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"authenticated_api_req_context::0","time":{"start":1745180424764,"stop":1745180424773,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context::0","time":{"start":1745180425285,"stop":1745180425293,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1745180425294,"stop":1745180425301,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"Получение профиля"},{"name":"severity","value":"critical"},{"name":"feature","value":"Профиль пользователя (GET /api/user)"},{"name":"epic","value":"Управление пользователем"},{"name":"tag","value":"positive"},{"name":"tag","value":"smoke"},{"name":"tag","value":"user"},{"name":"parentSuite","value":"tests.user"},{"name":"suite","value":"test_user_api"},{"name":"subSuite","value":"TestUserAPI"},{"name":"host","value":"fv-az885-917"},{"name":"thread","value":"12-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.user.test_user_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[{"uid":"df2d61a54cb8b9fa","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745180424569,"stop":1745180424639,"duration":70}},{"uid":"f537a3e88008de8d","status":"failed","statusDetails":"AssertionError: assert 'Региональный логистический архитектор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Региональный логистический архитектор","time":{"start":1745180424453,"stop":1745180424507,"duration":54}},{"uid":"860ffb01f1c05f8f","status":"failed","statusDetails":"AssertionError: assert 'Региональный логистический архитектор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Региональный логистический архитектор","time":{"start":1745180424333,"stop":1745180424394,"duration":61}},{"uid":"12c8dc91886f1373","status":"failed","statusDetails":"AssertionError: assert 'Региональный логистический архитектор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Региональный логистический архитектор","time":{"start":1745180424226,"stop":1745180424288,"duration":62}},{"uid":"639a56964ff470c9","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745180424086,"stop":1745180424155,"duration":69}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":26,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":26},"items":[{"uid":"25c1106c441350f2","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/53//#testresult/25c1106c441350f2","status":"failed","statusDetails":"AssertionError: assert 'Международный страховой техник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Международный страховой техник","time":{"start":1745180152746,"stop":1745180152778,"duration":32}},{"uid":"41375595d18bbc79","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/52//#testresult/41375595d18bbc79","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745173182239,"stop":1745173182270,"duration":31}},{"uid":"5979f9a406c717c5","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/51//#testresult/5979f9a406c717c5","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745173153266,"stop":1745173153296,"duration":30}},{"uid":"451d14c176dcc08e","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/50//#testresult/451d14c176dcc08e","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745171169026,"stop":1745171169057,"duration":31}},{"uid":"ecddb86a18fcf278","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/49//#testresult/ecddb86a18fcf278","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745016104490,"stop":1745016104520,"duration":30}},{"uid":"5cfb73d241e2334d","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/48//#testresult/5cfb73d241e2334d","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745015892294,"stop":1745015892324,"duration":30}},{"uid":"b35d3ffec593ed1f","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/47//#testresult/b35d3ffec593ed1f","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745014809916,"stop":1745014809949,"duration":33}},{"uid":"b2a0fbe5ed17a33","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/46//#testresult/b2a0fbe5ed17a33","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745014788037,"stop":1745014788068,"duration":31}},{"uid":"dbbb71de7b4d4353","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/45//#testresult/dbbb71de7b4d4353","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745013912910,"stop":1745013912940,"duration":30}},{"uid":"4754413a390ef0ac","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/44//#testresult/4754413a390ef0ac","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745013767629,"stop":1745013767659,"duration":30}},{"uid":"c16e8e787bade7c7","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/43//#testresult/c16e8e787bade7c7","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745007984188,"stop":1745007984219,"duration":31}},{"uid":"4497c205a02f76e5","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/42//#testresult/4497c205a02f76e5","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745007718062,"stop":1745007718093,"duration":31}},{"uid":"2ad275bfd6044f56","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/40//#testresult/2ad275bfd6044f56","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745007086920,"stop":1745007086950,"duration":30}},{"uid":"7a1d8b2beefc8b0c","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/39//#testresult/7a1d8b2beefc8b0c","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745006983096,"stop":1745006983128,"duration":32}},{"uid":"c21c2f659552df50","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/38//#testresult/c21c2f659552df50","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745006650417,"stop":1745006650447,"duration":30}},{"uid":"1b7a965fd9e6ed9d","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/37//#testresult/1b7a965fd9e6ed9d","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745006447908,"stop":1745006447939,"duration":31}},{"uid":"55199893bddc6f9f","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/36//#testresult/55199893bddc6f9f","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745006158525,"stop":1745006158555,"duration":30}},{"uid":"ec5c72e3549776c5","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/35//#testresult/ec5c72e3549776c5","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745005971572,"stop":1745005971603,"duration":31}},{"uid":"60b7bda8e087a02d","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/34//#testresult/60b7bda8e087a02d","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745005663264,"stop":1745005663295,"duration":31}},{"uid":"71cd1951663eac41","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/33//#testresult/71cd1951663eac41","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745005090050,"stop":1745005090083,"duration":33}}]},"tags":["smoke","positive","user"]},"source":"190da8f6cb6726bb.json","parameterValues":[]}