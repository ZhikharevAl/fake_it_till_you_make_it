{"uid":"cccdd094c9277dde","name":"Тест успешного добавления запроса в избранное","fullName":"tests.user.test_user_favourites_api.TestUserFavouritesAPI#test_add_to_favourites_success","historyId":"cbd3f6f5fb77de4b542b6f9736702f53","time":{"start":1745173182584,"stop":1745173182621,"duration":37},"description":"Проверяем добавление запроса в избранное и  появление в списке.","descriptionHtml":"<p>Проверяем добавление запроса в избранное и  появление в списке.</p>\n","status":"failed","statusMessage":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","statusTrace":"self = <tests.user.test_user_favourites_api.TestUserFavouritesAPI object at 0x7fb1a1322190>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7fb19fb96f90>\n\n    @allure.story(\"Добавление в избранное\")\n    @allure.title(\"Тест успешного добавления запроса в избранное\")\n    @allure.description(\"Проверяем добавление запроса в избранное и  появление в списке.\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    @pytest.mark.dependency(name=\"add_favourite_success\")\n    def test_add_to_favourites_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного добавления запроса в избранное.\n    \n        Ожидаемый результат: статус 200 и текстовое сообщение o успехе.\n        \"\"\"\n        logger.info(\n            \"Тест: Успешное добавление в избранное (POST /api/user/favourites), ID: %s\",\n            TEST_REQUEST_ID,\n        )\n    \n        payload = AddToFavouritesPayload(requestId=TEST_REQUEST_ID)\n>       response = authenticated_user_client.add_to_favourites(payload=payload, expected_status=200)  # type: ignore\n\ntests/user/test_user_favourites_api.py:80: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/user/client.py:63: in add_to_favourites\n    processed_response = self._handle_response(response, expected_status)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.user.client.UserClient object at 0x7fb19fb96f90>\nresponse = <APIResponse url='http://localhost:4040/api/user/favourites' status=400 status_text='Bad Request'>\nexpected_status = 200, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nE       Body of the answer:\nE       Failed to add request to favourites\n\napi/base_api.py:69: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1745173181135,"stop":1745173181136,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1745173181136,"stop":1745173181136,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1745173181136,"stop":1745173181390,"duration":254},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1745173181136,"stop":1745173181136,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1745173181136,"stop":1745173181136,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1745173181391,"stop":1745173181411,"duration":20},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1745173181411,"stop":1745173181412,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_client","time":{"start":1745173181412,"stop":1745173181412,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_token","time":{"start":1745173182160,"stop":1745173182230,"duration":70},"status":"passed","steps":[],"attachments":[{"uid":"8c70bca3406f8655","name":"Status Code: 200","source":"8c70bca3406f8655.txt","type":"text/plain","size":3},{"uid":"c62c6117eefcf9a0","name":"Request URL","source":"c62c6117eefcf9a0.uri","type":"text/uri-list","size":30},{"uid":"935f9a07254637a5","name":"Response Headers (JSON)","source":"935f9a07254637a5.json","type":"application/json","size":317},{"uid":"7763de22d6c5981a","name":"Response Body (JSON)","source":"7763de22d6c5981a.json","type":"application/json","size":224},{"uid":"b1614bdf1e10a3bd","name":"Status response code: 200 (Expected: 200)","source":"b1614bdf1e10a3bd.txt","type":"text/plain","size":3},{"uid":"599abfc21a4663bc","name":"Body of the answer (failed by AuthSuccessResponse)","source":"599abfc21a4663bc.json","type":"application/json","size":220}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"authenticated_api_req_context","time":{"start":1745173182570,"stop":1745173182582,"duration":12},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_http_client","time":{"start":1745173182582,"stop":1745173182582,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_user_client","time":{"start":1745173182582,"stop":1745173182582,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем добавление запроса в избранное и  появление в списке.","status":"failed","statusMessage":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","statusTrace":"self = <tests.user.test_user_favourites_api.TestUserFavouritesAPI object at 0x7fb1a1322190>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7fb19fb96f90>\n\n    @allure.story(\"Добавление в избранное\")\n    @allure.title(\"Тест успешного добавления запроса в избранное\")\n    @allure.description(\"Проверяем добавление запроса в избранное и  появление в списке.\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    @pytest.mark.dependency(name=\"add_favourite_success\")\n    def test_add_to_favourites_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного добавления запроса в избранное.\n    \n        Ожидаемый результат: статус 200 и текстовое сообщение o успехе.\n        \"\"\"\n        logger.info(\n            \"Тест: Успешное добавление в избранное (POST /api/user/favourites), ID: %s\",\n            TEST_REQUEST_ID,\n        )\n    \n        payload = AddToFavouritesPayload(requestId=TEST_REQUEST_ID)\n>       response = authenticated_user_client.add_to_favourites(payload=payload, expected_status=200)  # type: ignore\n\ntests/user/test_user_favourites_api.py:80: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/user/client.py:63: in add_to_favourites\n    processed_response = self._handle_response(response, expected_status)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.user.client.UserClient object at 0x7fb19fb96f90>\nresponse = <APIResponse url='http://localhost:4040/api/user/favourites' status=400 status_text='Bad Request'>\nexpected_status = 200, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nE       Body of the answer:\nE       Failed to add request to favourites\n\napi/base_api.py:69: AssertionError","steps":[{"name":"Добавление запроса в избранное","time":{"start":1745173182585,"stop":1745173182620,"duration":35},"status":"failed","statusMessage":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites\n","statusTrace":"  File \"/app/.venv/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/app/api/user/client.py\", line 63, in add_to_favourites\n    processed_response = self._handle_response(response, expected_status)\n  File \"/app/api/base_api.py\", line 69, in _handle_response\n    assert response.status == expected_status, (\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[{"uid":"4736d5d12f607d3e","name":"Status Code: 400","source":"4736d5d12f607d3e.txt","type":"text/plain","size":3},{"uid":"4e682f821f572047","name":"Request URL","source":"4e682f821f572047.uri","type":"text/uri-list","size":41},{"uid":"17dc93f84acdc5e8","name":"Response Headers (JSON)","source":"17dc93f84acdc5e8.json","type":"application/json","size":309},{"uid":"345892886d850864","name":"Response Body (Text)","source":"345892886d850864.txt","type":"text/plain","size":35},{"uid":"e13ae592a9aa0e59","name":"Status response code: 400 (Expected: 200)","source":"e13ae592a9aa0e59.txt","type":"text/plain","size":3}],"parameters":[{"name":"payload","value":"AddToFavouritesPayload(request_id='request-id-for-test-123')"},{"name":"expected_status","value":"200"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":5,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"85615ccd13572d12","name":"log","source":"85615ccd13572d12.txt","type":"text/plain","size":1087},{"uid":"479a4ff06c527230","name":"stderr","source":"479a4ff06c527230.txt","type":"text/plain","size":1280}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":7,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"authenticated_api_req_context::0","time":{"start":1745173182632,"stop":1745173182639,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context::0","time":{"start":1745173182641,"stop":1745173182648,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1745173182648,"stop":1745173182655,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"normal"},{"name":"story","value":"Добавление в избранное"},{"name":"tag","value":"dependency(name='add_favourite_success')"},{"name":"tag","value":"positive"},{"name":"tag","value":"smoke"},{"name":"tag","value":"favourites"},{"name":"tag","value":"user"},{"name":"parentSuite","value":"tests.user"},{"name":"suite","value":"test_user_favourites_api"},{"name":"subSuite","value":"TestUserFavouritesAPI"},{"name":"host","value":"fv-az1110-105"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.user.test_user_favourites_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":26,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":26},"items":[{"uid":"1af11ec7a50bb267","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/51//#testresult/1af11ec7a50bb267","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1745173153591,"stop":1745173153621,"duration":30}},{"uid":"d49248b51f1722af","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/50//#testresult/d49248b51f1722af","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1745171169382,"stop":1745171169415,"duration":33}},{"uid":"92b74cff5c3647c1","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/49//#testresult/92b74cff5c3647c1","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1745016104832,"stop":1745016104865,"duration":33}},{"uid":"98fcd5e269648942","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/48//#testresult/98fcd5e269648942","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1745015892621,"stop":1745015892657,"duration":36}},{"uid":"52699e2fa5120f73","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/47//#testresult/52699e2fa5120f73","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1745014810280,"stop":1745014810313,"duration":33}},{"uid":"f410ed5e70e24b01","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/46//#testresult/f410ed5e70e24b01","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1745014788370,"stop":1745014788410,"duration":40}},{"uid":"233950dec13bbae0","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/45//#testresult/233950dec13bbae0","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1745013913235,"stop":1745013913266,"duration":31}},{"uid":"15fae20a0ec687d7","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/44//#testresult/15fae20a0ec687d7","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1745013767962,"stop":1745013767994,"duration":32}},{"uid":"2baf87b803464adc","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/43//#testresult/2baf87b803464adc","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1745007984542,"stop":1745007984573,"duration":31}},{"uid":"4a3d917c872c52b3","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/42//#testresult/4a3d917c872c52b3","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1745007718394,"stop":1745007718436,"duration":42}},{"uid":"ef8eccfb83c8a204","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/40//#testresult/ef8eccfb83c8a204","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1745007087278,"stop":1745007087311,"duration":33}},{"uid":"a7549d6f12827154","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/39//#testresult/a7549d6f12827154","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1745006983456,"stop":1745006983489,"duration":33}},{"uid":"c2c4713d372a905d","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/38//#testresult/c2c4713d372a905d","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1745006650754,"stop":1745006650786,"duration":32}},{"uid":"1625cf0c15481ebb","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/37//#testresult/1625cf0c15481ebb","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1745006448275,"stop":1745006448310,"duration":35}},{"uid":"1dcfe9dd20d1af49","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/36//#testresult/1dcfe9dd20d1af49","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1745006158857,"stop":1745006158888,"duration":31}},{"uid":"c4a9e7dde71192b0","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/35//#testresult/c4a9e7dde71192b0","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1745005971929,"stop":1745005971961,"duration":32}},{"uid":"9f279568aaeccfbc","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/34//#testresult/9f279568aaeccfbc","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1745005663600,"stop":1745005663639,"duration":39}},{"uid":"841fa9f3e5f3d067","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/33//#testresult/841fa9f3e5f3d067","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1745005090426,"stop":1745005090463,"duration":37}},{"uid":"24ecf73916fe14bb","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/32//#testresult/24ecf73916fe14bb","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1744923399559,"stop":1744923399592,"duration":33}},{"uid":"38f5c5979134c5fd","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/31//#testresult/38f5c5979134c5fd","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1744850340679,"stop":1744850340713,"duration":34}}]},"tags":["favourites","smoke","dependency(name='add_favourite_success')","positive","user"]},"source":"cccdd094c9277dde.json","parameterValues":[]}