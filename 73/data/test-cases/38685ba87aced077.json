{"uid":"38685ba87aced077","name":"Тест успешного добавления запроса в избранное","fullName":"tests.user.test_user_favourites_api.TestUserFavouritesAPI#test_add_to_favourites_success","historyId":"cbd3f6f5fb77de4b542b6f9736702f53","time":{"start":1745297612165,"stop":1745297612202,"duration":37},"description":"Проверяем добавление запроса в избранное и  появление в списке.","descriptionHtml":"<p>Проверяем добавление запроса в избранное и  появление в списке.</p>\n","status":"failed","statusMessage":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","statusTrace":"self = <tests.user.test_user_favourites_api.TestUserFavouritesAPI object at 0x7f44b39195b0>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f44b24119a0>\n\n    @allure.story(\"Добавление в избранное\")\n    @allure.title(\"Тест успешного добавления запроса в избранное\")\n    @allure.description(\"Проверяем добавление запроса в избранное и  появление в списке.\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    @pytest.mark.dependency(name=\"add_favourite_success\")\n    def test_add_to_favourites_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного добавления запроса в избранное.\n    \n        Ожидаемый результат: статус 200 и текстовое сообщение o успехе.\n        \"\"\"\n        logger.info(\n            \"Тест: Успешное добавление в избранное (POST /api/user/favourites), ID: %s\",\n            TEST_REQUEST_ID,\n        )\n    \n        payload = AddToFavouritesPayload(requestId=TEST_REQUEST_ID)\n>       response = authenticated_user_client.add_to_favourites(payload=payload, expected_status=200)  # type: ignore\n\ntests/user/test_user_favourites_api.py:80: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/user/client.py:63: in add_to_favourites\n    processed_response = self._handle_response(response, expected_status)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.user.client.UserClient object at 0x7f44b24119a0>\nresponse = <APIResponse url='http://localhost:4040/api/user/favourites' status=400 status_text='Bad Request'>\nexpected_status = 200, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nE       Body of the answer:\nE       Failed to add request to favourites\n\napi/base_api.py:69: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1745297607779,"stop":1745297607779,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1745297607780,"stop":1745297607780,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1745297607781,"stop":1745297607781,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1745297607781,"stop":1745297607781,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1745297607782,"stop":1745297608232,"duration":450},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1745297608232,"stop":1745297608262,"duration":30},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1745297608262,"stop":1745297608263,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_client","time":{"start":1745297608263,"stop":1745297608263,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_token","time":{"start":1745297611037,"stop":1745297611148,"duration":111},"status":"passed","steps":[],"attachments":[{"uid":"d6bc5772329d7e9f","name":"Status Code: 200","source":"d6bc5772329d7e9f.txt","type":"text/plain","size":3},{"uid":"c845841461f1314","name":"Request URL","source":"c845841461f1314.uri","type":"text/uri-list","size":30},{"uid":"37a9d3e6012d052a","name":"Response Headers (JSON)","source":"37a9d3e6012d052a.json","type":"application/json","size":317},{"uid":"2d0f1f440a01ed68","name":"Response Body (JSON)","source":"2d0f1f440a01ed68.json","type":"application/json","size":224},{"uid":"1348379236a467e2","name":"Status response code: 200 (Expected: 200)","source":"1348379236a467e2.txt","type":"text/plain","size":3},{"uid":"afcdbb2ae37e1e78","name":"Body of the answer (failed by AuthSuccessResponse)","source":"afcdbb2ae37e1e78.json","type":"application/json","size":220}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"authenticated_api_req_context","time":{"start":1745297612154,"stop":1745297612164,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_http_client","time":{"start":1745297612164,"stop":1745297612164,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_user_client","time":{"start":1745297612164,"stop":1745297612164,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем добавление запроса в избранное и  появление в списке.","status":"failed","statusMessage":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","statusTrace":"self = <tests.user.test_user_favourites_api.TestUserFavouritesAPI object at 0x7f44b39195b0>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f44b24119a0>\n\n    @allure.story(\"Добавление в избранное\")\n    @allure.title(\"Тест успешного добавления запроса в избранное\")\n    @allure.description(\"Проверяем добавление запроса в избранное и  появление в списке.\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    @pytest.mark.dependency(name=\"add_favourite_success\")\n    def test_add_to_favourites_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного добавления запроса в избранное.\n    \n        Ожидаемый результат: статус 200 и текстовое сообщение o успехе.\n        \"\"\"\n        logger.info(\n            \"Тест: Успешное добавление в избранное (POST /api/user/favourites), ID: %s\",\n            TEST_REQUEST_ID,\n        )\n    \n        payload = AddToFavouritesPayload(requestId=TEST_REQUEST_ID)\n>       response = authenticated_user_client.add_to_favourites(payload=payload, expected_status=200)  # type: ignore\n\ntests/user/test_user_favourites_api.py:80: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/user/client.py:63: in add_to_favourites\n    processed_response = self._handle_response(response, expected_status)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.user.client.UserClient object at 0x7f44b24119a0>\nresponse = <APIResponse url='http://localhost:4040/api/user/favourites' status=400 status_text='Bad Request'>\nexpected_status = 200, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nE       Body of the answer:\nE       Failed to add request to favourites\n\napi/base_api.py:69: AssertionError","steps":[{"name":"Добавление запроса в избранное","time":{"start":1745297612165,"stop":1745297612201,"duration":36},"status":"failed","statusMessage":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites\n","statusTrace":"  File \"/app/.venv/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/app/api/user/client.py\", line 63, in add_to_favourites\n    processed_response = self._handle_response(response, expected_status)\n  File \"/app/api/base_api.py\", line 69, in _handle_response\n    assert response.status == expected_status, (\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[{"uid":"9a7f15a530f09403","name":"Status Code: 400","source":"9a7f15a530f09403.txt","type":"text/plain","size":3},{"uid":"95874a62976dfd56","name":"Request URL","source":"95874a62976dfd56.uri","type":"text/uri-list","size":41},{"uid":"53c89f3d3c43b344","name":"Response Headers (JSON)","source":"53c89f3d3c43b344.json","type":"application/json","size":309},{"uid":"3497918170915aa1","name":"Response Body (Text)","source":"3497918170915aa1.txt","type":"text/plain","size":35},{"uid":"3dd161dda03984ca","name":"Status response code: 400 (Expected: 200)","source":"3dd161dda03984ca.txt","type":"text/plain","size":3}],"parameters":[{"name":"payload","value":"AddToFavouritesPayload(request_id='request-id-1')"},{"name":"expected_status","value":"200"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":5,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"b02d957860d67deb","name":"log","source":"b02d957860d67deb.txt","type":"text/plain","size":5620},{"uid":"e965404f6edb7ce1","name":"stderr","source":"e965404f6edb7ce1.txt","type":"text/plain","size":6563}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":7,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"authenticated_api_req_context::0","time":{"start":1745297612213,"stop":1745297612221,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context::0","time":{"start":1745297612224,"stop":1745297612232,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1745297612232,"stop":1745297612240,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"normal"},{"name":"story","value":"Добавление в избранное"},{"name":"tag","value":"dependency(name='add_favourite_success')"},{"name":"tag","value":"positive"},{"name":"tag","value":"smoke"},{"name":"tag","value":"favourites"},{"name":"tag","value":"user"},{"name":"parentSuite","value":"tests.user"},{"name":"suite","value":"test_user_favourites_api"},{"name":"subSuite","value":"TestUserFavouritesAPI"},{"name":"host","value":"fv-az888-937"},{"name":"thread","value":"12-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.user.test_user_favourites_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"404266fdc3ff1ffe","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1745297612090,"stop":1745297612128,"duration":38}},{"uid":"3a201cbb2057e17b","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1745297612012,"stop":1745297612051,"duration":39}},{"uid":"cff55c92586ef909","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nPlanned Server Error","time":{"start":1745297611938,"stop":1745297611975,"duration":37}},{"uid":"53d64425c825bf8c","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1745297611863,"stop":1745297611902,"duration":39}},{"uid":"e50b4d7229195d65","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1745297611786,"stop":1745297611827,"duration":41}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"deb847427cc157b6","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/72//#testresult/deb847427cc157b6","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1745297413034,"stop":1745297413079,"duration":45}},{"uid":"d246dd41c4e2d01e","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/71//#testresult/d246dd41c4e2d01e","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nPlanned Server Error","time":{"start":1745297306825,"stop":1745297306861,"duration":36}}]},"tags":["favourites","smoke","dependency(name='add_favourite_success')","positive","user"]},"source":"38685ba87aced077.json","parameterValues":[]}