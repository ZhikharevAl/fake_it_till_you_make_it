{"uid":"955da4bbb8c3af78","name":"Тест удаления несуществующего ID из избранного","fullName":"tests.user.test_user_api.TestUserAPI#test_remove_from_favourites_not_found","historyId":"a824f132e0d4f3dbee701c192815afe3","time":{"start":1745288429477,"stop":1745288429517,"duration":40},"description":"Проверяем, что при попытке удалить несуществующий ID возвращается ошибка 400.","descriptionHtml":"<p>Проверяем, что при попытке удалить несуществующий ID возвращается ошибка 400.</p>\n","status":"failed","statusMessage":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-6b473d9e-42a6-4107-a4df-7ac8320b8ba8\nBody of the answer:\nRequest is removed form Favourites successfully.","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f0c1a7dd7f0>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f0c19018aa0>\n\n    @allure.feature(\"Избранное пользователя (DELETE /api/user/favourites/{id})\")\n    @allure.story(\"Удаление из избранного\")\n    @allure.title(\"Тест удаления несуществующего ID из избранного\")\n    @allure.description(\n        \"Проверяем, что при попытке удалить несуществующий ID возвращается ошибка 400.\"\n    )\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.negative\n    def test_remove_from_favourites_not_found(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка удаления несуществующего запроса из избранного.\n    \n        Ожидаемый результат: статус 400 Bad Request .\n        \"\"\"\n        logger.info(\n            \"Тест: Удаление несуществующего ID из избранного (DELETE .../%s)\", NON_EXISTENT_ID\n        )\n>       response = authenticated_user_client.remove_from_favourites(\n            request_id=NON_EXISTENT_ID, expected_status=400\n        )  # type: ignore\n\ntests/user/test_user_api.py:156: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/user/client.py:82: in remove_from_favourites\n    processed_response = self._handle_response(response, expected_status)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.user.client.UserClient object at 0x7f0c19018aa0>\nresponse = <APIResponse url='http://localhost:4040/api/user/favourites/non-existent-6b473d9e-42a6-4107-a4df-7ac8320b8ba8' status=200 status_text='OK'>\nexpected_status = 400, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-6b473d9e-42a6-4107-a4df-7ac8320b8ba8\nE       Body of the answer:\nE       Request is removed form Favourites successfully.\n\napi/base_api.py:69: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1745288425503,"stop":1745288425503,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1745288425503,"stop":1745288425503,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1745288425504,"stop":1745288425926,"duration":422},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1745288425504,"stop":1745288425504,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1745288425504,"stop":1745288425504,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1745288425926,"stop":1745288425955,"duration":29},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1745288425955,"stop":1745288425956,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_client","time":{"start":1745288425956,"stop":1745288425956,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_token","time":{"start":1745288428182,"stop":1745288428288,"duration":106},"status":"passed","steps":[],"attachments":[{"uid":"c58fb6e122150baf","name":"Status Code: 200","source":"c58fb6e122150baf.txt","type":"text/plain","size":3},{"uid":"f741dd9b4c37f242","name":"Request URL","source":"f741dd9b4c37f242.uri","type":"text/uri-list","size":30},{"uid":"d71ff1beab1031bb","name":"Response Headers (JSON)","source":"d71ff1beab1031bb.json","type":"application/json","size":317},{"uid":"a257b098f0f48be3","name":"Response Body (JSON)","source":"a257b098f0f48be3.json","type":"application/json","size":224},{"uid":"885f359f8271270","name":"Status response code: 200 (Expected: 200)","source":"885f359f8271270.txt","type":"text/plain","size":3},{"uid":"ae209a8aa7f81e32","name":"Body of the answer (failed by AuthSuccessResponse)","source":"ae209a8aa7f81e32.json","type":"application/json","size":220}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"authenticated_api_req_context","time":{"start":1745288429467,"stop":1745288429476,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_user_client","time":{"start":1745288429477,"stop":1745288429477,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_http_client","time":{"start":1745288429477,"stop":1745288429477,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем, что при попытке удалить несуществующий ID возвращается ошибка 400.","status":"failed","statusMessage":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-6b473d9e-42a6-4107-a4df-7ac8320b8ba8\nBody of the answer:\nRequest is removed form Favourites successfully.","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f0c1a7dd7f0>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f0c19018aa0>\n\n    @allure.feature(\"Избранное пользователя (DELETE /api/user/favourites/{id})\")\n    @allure.story(\"Удаление из избранного\")\n    @allure.title(\"Тест удаления несуществующего ID из избранного\")\n    @allure.description(\n        \"Проверяем, что при попытке удалить несуществующий ID возвращается ошибка 400.\"\n    )\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.negative\n    def test_remove_from_favourites_not_found(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка удаления несуществующего запроса из избранного.\n    \n        Ожидаемый результат: статус 400 Bad Request .\n        \"\"\"\n        logger.info(\n            \"Тест: Удаление несуществующего ID из избранного (DELETE .../%s)\", NON_EXISTENT_ID\n        )\n>       response = authenticated_user_client.remove_from_favourites(\n            request_id=NON_EXISTENT_ID, expected_status=400\n        )  # type: ignore\n\ntests/user/test_user_api.py:156: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/user/client.py:82: in remove_from_favourites\n    processed_response = self._handle_response(response, expected_status)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.user.client.UserClient object at 0x7f0c19018aa0>\nresponse = <APIResponse url='http://localhost:4040/api/user/favourites/non-existent-6b473d9e-42a6-4107-a4df-7ac8320b8ba8' status=200 status_text='OK'>\nexpected_status = 400, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-6b473d9e-42a6-4107-a4df-7ac8320b8ba8\nE       Body of the answer:\nE       Request is removed form Favourites successfully.\n\napi/base_api.py:69: AssertionError","steps":[{"name":"Удаление запроса из избранного","time":{"start":1745288429478,"stop":1745288429516,"duration":38},"status":"failed","statusMessage":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-6b473d9e-42a6-4107-a4df-7ac8320b8ba8\nBody of the answer:\nRequest is removed form Favourites successfully.\n","statusTrace":"  File \"/app/.venv/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/app/api/user/client.py\", line 82, in remove_from_favourites\n    processed_response = self._handle_response(response, expected_status)\n  File \"/app/api/base_api.py\", line 69, in _handle_response\n    assert response.status == expected_status, (\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[{"uid":"4d465d4776efa939","name":"Status Code: 200","source":"4d465d4776efa939.txt","type":"text/plain","size":3},{"uid":"92797c098f03d213","name":"Request URL","source":"92797c098f03d213.uri","type":"text/uri-list","size":91},{"uid":"8c546068a61308c9","name":"Response Headers (JSON)","source":"8c546068a61308c9.json","type":"application/json","size":309},{"uid":"9114b57433653895","name":"Response Body (Text)","source":"9114b57433653895.txt","type":"text/plain","size":48},{"uid":"7b30bb549a8d12c5","name":"Status response code: 200 (Expected: 400)","source":"7b30bb549a8d12c5.txt","type":"text/plain","size":3}],"parameters":[{"name":"request_id","value":"'non-existent-6b473d9e-42a6-4107-a4df-7ac8320b8ba8'"},{"name":"expected_status","value":"400"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":5,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"e35f07a7e3c2bfae","name":"log","source":"e35f07a7e3c2bfae.txt","type":"text/plain","size":6412},{"uid":"d841acd69572c0cf","name":"stderr","source":"d841acd69572c0cf.txt","type":"text/plain","size":7355}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":7,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"authenticated_api_req_context::0","time":{"start":1745288429529,"stop":1745288429538,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context::0","time":{"start":1745288429540,"stop":1745288429549,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1745288429550,"stop":1745288429557,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Избранное пользователя (DELETE /api/user/favourites/{id})"},{"name":"epic","value":"Управление пользователем"},{"name":"story","value":"Удаление из избранного"},{"name":"tag","value":"negative"},{"name":"tag","value":"user"},{"name":"parentSuite","value":"tests.user"},{"name":"suite","value":"test_user_api"},{"name":"subSuite","value":"TestUserAPI"},{"name":"host","value":"fv-az1153-204"},{"name":"thread","value":"12-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.user.test_user_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"76876be26d8a14e9","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-6b473d9e-42a6-4107-a4df-7ac8320b8ba8\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1745288429397,"stop":1745288429436,"duration":39}},{"uid":"4796f7269875f9d9","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 500. URL: http://localhost:4040/api/user/favourites/non-existent-6b473d9e-42a6-4107-a4df-7ac8320b8ba8\nBody of the answer:\nPlanned Server Error","time":{"start":1745288429311,"stop":1745288429349,"duration":38}},{"uid":"d30fb18f7aaff046","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-6b473d9e-42a6-4107-a4df-7ac8320b8ba8\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1745288429231,"stop":1745288429270,"duration":39}},{"uid":"947a5f7befc4ed3d","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-6b473d9e-42a6-4107-a4df-7ac8320b8ba8\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1745288429148,"stop":1745288429190,"duration":42}},{"uid":"46a56252e3b7ea49","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-6b473d9e-42a6-4107-a4df-7ac8320b8ba8\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1745288429036,"stop":1745288429103,"duration":67}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":29,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":29},"items":[{"uid":"2661a578bf9a11bd","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/56//#testresult/2661a578bf9a11bd","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-93b6d9d9-1fa5-4e42-afb8-f6de88da8709\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1745264284930,"stop":1745264284969,"duration":39}},{"uid":"d211b87430ca547","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/55//#testresult/d211b87430ca547","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-6686ba67-99ed-4b47-93c6-9a7b638d3dfe\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1745263984424,"stop":1745263984455,"duration":31}},{"uid":"820ddc2609e05b8a","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/54//#testresult/820ddc2609e05b8a","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-02bf3ec1-4271-45b4-8103-795581ad590d\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1745180425208,"stop":1745180425261,"duration":53}},{"uid":"39f94f8e088f3cc0","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/53//#testresult/39f94f8e088f3cc0","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-218ecc41-2def-4bd9-86e8-12d7bed03e4d\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1745180153259,"stop":1745180153299,"duration":40}},{"uid":"a69f34caec949ebd","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/52//#testresult/a69f34caec949ebd","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-9e494be0-adc0-4591-ba6d-d2c9396d29b2\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1745173182438,"stop":1745173182469,"duration":31}},{"uid":"979c0b81fa41d0d1","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/51//#testresult/979c0b81fa41d0d1","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-ec65d30c-05e7-4e72-9591-9e900765f87d\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1745173153457,"stop":1745173153487,"duration":30}},{"uid":"4a4e9a224eb5cfd9","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/50//#testresult/4a4e9a224eb5cfd9","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-cf8759ae-f512-4504-9c95-2129857f3c34\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1745171169231,"stop":1745171169262,"duration":31}},{"uid":"403db579bb03ebc1","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/49//#testresult/403db579bb03ebc1","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-f8cf56fe-5c28-478d-8512-f7b6f72b76a6\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1745016104691,"stop":1745016104722,"duration":31}},{"uid":"470ae413a75b30a0","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/48//#testresult/470ae413a75b30a0","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-a900a882-c0f2-459f-8309-c046c6c4e554\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1745015892485,"stop":1745015892515,"duration":30}},{"uid":"9b95a7008ece33e7","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/47//#testresult/9b95a7008ece33e7","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-3fa2f710-52af-40bc-935e-76d4b4352b1b\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1745014810123,"stop":1745014810156,"duration":33}},{"uid":"f28b6f2a1686bf2a","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/46//#testresult/f28b6f2a1686bf2a","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-027e94ec-8fc6-4c8c-82d8-95cd011d5ca0\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1745014788231,"stop":1745014788262,"duration":31}},{"uid":"8e5450a5285dbb","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/45//#testresult/8e5450a5285dbb","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-277e09db-d6d8-415e-87dc-a885d2c63883\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1745013913101,"stop":1745013913131,"duration":30}},{"uid":"bbee28c72893b5d4","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/44//#testresult/bbee28c72893b5d4","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-a81a1c37-041b-40d7-8941-5e964a4f448b\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1745013767823,"stop":1745013767854,"duration":31}},{"uid":"a021f88a812458fb","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/43//#testresult/a021f88a812458fb","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-40254b16-aed9-4442-98a6-69d5f572b6bc\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1745007984392,"stop":1745007984423,"duration":31}},{"uid":"47feb43d33c513a9","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/42//#testresult/47feb43d33c513a9","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-7fefc0ef-221b-421f-a994-a83ff3854087\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1745007718257,"stop":1745007718287,"duration":30}},{"uid":"7c8211861f1e67ac","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/40//#testresult/7c8211861f1e67ac","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-ed09fe29-58a3-4f10-906b-680c2bc03786\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1745007087122,"stop":1745007087154,"duration":32}},{"uid":"25430bfb90768789","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/39//#testresult/25430bfb90768789","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-e610df47-01c6-4671-8d27-689065e8dfd6\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1745006983301,"stop":1745006983332,"duration":31}},{"uid":"b869416bcaed342c","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/38//#testresult/b869416bcaed342c","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-8618fea1-718a-49f3-bc13-a0194df8e013\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1745006650615,"stop":1745006650645,"duration":30}},{"uid":"36b257f58175e409","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/37//#testresult/36b257f58175e409","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-646dc571-f280-4670-b2e4-2ba37a8be8a1\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1745006448126,"stop":1745006448159,"duration":33}},{"uid":"2f2956914cc62139","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/36//#testresult/2f2956914cc62139","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-ada53b40-cada-46df-87c7-3a3d92b295fc\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1745006158720,"stop":1745006158750,"duration":30}}]},"tags":["negative","user"]},"source":"955da4bbb8c3af78.json","parameterValues":[]}