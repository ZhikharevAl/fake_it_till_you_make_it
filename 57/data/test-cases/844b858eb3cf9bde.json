{"uid":"844b858eb3cf9bde","name":"Тест получения данных пользователя без аутентификации","fullName":"tests.user.test_user_api.TestUserAPI#test_get_user_info_unauthorized","historyId":"ac47ae78c55f9b4383c56514db258fb5","time":{"start":1745288428772,"stop":1745288428827,"duration":55},"description":"Проверяем, что неавторизованный пользователь получает ошибку 401.","descriptionHtml":"<p>Проверяем, что неавторизованный пользователь получает ошибку 401.</p>\n","status":"failed","statusMessage":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7fb890fb4f50>\nuser_client = <api.user.client.UserClient object at 0x7fb890e31e80>\n\n    @allure.feature(\"Профиль пользователя (GET /api/user)\")\n    @allure.story(\"Получение профиля\")\n    @allure.title(\"Тест получения данных пользователя без аутентификации\")\n    @allure.description(\"Проверяем, что неавторизованный пользователь получает ошибку 401.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.negative\n    def test_get_user_info_unauthorized(self, user_client: UserClient) -> None:\n        \"\"\"\n        Проверка получения информации o пользователе без аутентификации.\n    \n        Ожидаемый результат: статус 401 Unauthorized.\n        \"\"\"\n        logger.info(\"Тест: Получение данных пользователя без авторизации (GET /api/user)\")\n>       response = user_client.get_user_info(expected_status=401)  # type: ignore\n\ntests/user/test_user_api.py:86: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/user/client.py:101: in get_user_info\n    return self._handle_response(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.user.client.UserClient object at 0x7fb890e31e80>\nresponse = <APIResponse url='http://localhost:4040/api/user' status=403 status_text='Forbidden'>\nexpected_status = 401, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nE       Body of the answer:\nE       {\"message\":\"No token provided.\"}\n\napi/base_api.py:69: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1745288425504,"stop":1745288425505,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1745288425505,"stop":1745288425505,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1745288425505,"stop":1745288425505,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1745288425506,"stop":1745288425506,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1745288425506,"stop":1745288425924,"duration":418},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1745288425924,"stop":1745288425952,"duration":28},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1745288425955,"stop":1745288425955,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_client","time":{"start":1745288428329,"stop":1745288428329,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем, что неавторизованный пользователь получает ошибку 401.","status":"failed","statusMessage":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7fb890fb4f50>\nuser_client = <api.user.client.UserClient object at 0x7fb890e31e80>\n\n    @allure.feature(\"Профиль пользователя (GET /api/user)\")\n    @allure.story(\"Получение профиля\")\n    @allure.title(\"Тест получения данных пользователя без аутентификации\")\n    @allure.description(\"Проверяем, что неавторизованный пользователь получает ошибку 401.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.negative\n    def test_get_user_info_unauthorized(self, user_client: UserClient) -> None:\n        \"\"\"\n        Проверка получения информации o пользователе без аутентификации.\n    \n        Ожидаемый результат: статус 401 Unauthorized.\n        \"\"\"\n        logger.info(\"Тест: Получение данных пользователя без авторизации (GET /api/user)\")\n>       response = user_client.get_user_info(expected_status=401)  # type: ignore\n\ntests/user/test_user_api.py:86: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/user/client.py:101: in get_user_info\n    return self._handle_response(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.user.client.UserClient object at 0x7fb890e31e80>\nresponse = <APIResponse url='http://localhost:4040/api/user' status=403 status_text='Forbidden'>\nexpected_status = 401, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nE       Body of the answer:\nE       {\"message\":\"No token provided.\"}\n\napi/base_api.py:69: AssertionError","steps":[{"name":"Получение данных текущего пользователя","time":{"start":1745288428773,"stop":1745288428826,"duration":53},"status":"failed","statusMessage":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}\n","statusTrace":"  File \"/app/.venv/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/app/api/user/client.py\", line 101, in get_user_info\n    return self._handle_response(\n           ~~~~~~~~~~~~~~~~~~~~~^\n        response,\n        ^^^^^^^^^\n        expected_status,\n        ^^^^^^^^^^^^^^^^\n        response_model=UserDataResponse if expected_status == 200 else None,\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/app/api/base_api.py\", line 69, in _handle_response\n    assert response.status == expected_status, (\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[{"uid":"f2f2e841f29a62e4","name":"Status Code: 403","source":"f2f2e841f29a62e4.txt","type":"text/plain","size":3},{"uid":"2a38f3241d6f8408","name":"Request URL","source":"2a38f3241d6f8408.uri","type":"text/uri-list","size":30},{"uid":"2955d6238cf1b609","name":"Response Headers (JSON)","source":"2955d6238cf1b609.json","type":"application/json","size":316},{"uid":"ac4cc55194fdba8f","name":"Response Body (JSON)","source":"ac4cc55194fdba8f.json","type":"application/json","size":39},{"uid":"4881b41fd389cec4","name":"Status response code: 403 (Expected: 401)","source":"4881b41fd389cec4.txt","type":"text/plain","size":3}],"parameters":[{"name":"expected_status","value":"401"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":5,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"61d0b2c70613080f","name":"log","source":"61d0b2c70613080f.txt","type":"text/plain","size":2631},{"uid":"523de57f3ac1d292","name":"stderr","source":"523de57f3ac1d292.txt","type":"text/plain","size":3157}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":7,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"api_request_context::0","time":{"start":1745288429056,"stop":1745288429065,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1745288429065,"stop":1745288429072,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"critical"},{"name":"story","value":"Получение профиля"},{"name":"epic","value":"Управление пользователем"},{"name":"feature","value":"Профиль пользователя (GET /api/user)"},{"name":"tag","value":"negative"},{"name":"tag","value":"user"},{"name":"parentSuite","value":"tests.user"},{"name":"suite","value":"test_user_api"},{"name":"subSuite","value":"TestUserAPI"},{"name":"host","value":"fv-az1153-204"},{"name":"thread","value":"6-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.user.test_user_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[{"uid":"19c7970eeaeb0263","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745288428686,"stop":1745288428738,"duration":52}},{"uid":"197b1391869aea8b","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745288428600,"stop":1745288428651,"duration":51}},{"uid":"7b3cc75365ff8a4b","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745288428508,"stop":1745288428562,"duration":54}},{"uid":"5bb9839d0e300194","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745288428419,"stop":1745288428474,"duration":55}},{"uid":"650830dcf4c5c53a","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745288428330,"stop":1745288428383,"duration":53}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":29,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":29},"items":[{"uid":"ea675b21b9115568","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/56//#testresult/ea675b21b9115568","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745264284137,"stop":1745264284211,"duration":74}},{"uid":"394896bcfd2776f5","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/55//#testresult/394896bcfd2776f5","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745263984282,"stop":1745263984305,"duration":23}},{"uid":"3066c57135df4a00","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/54//#testresult/3066c57135df4a00","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745180424432,"stop":1745180424487,"duration":55}},{"uid":"457917cc1d6ad980","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/53//#testresult/457917cc1d6ad980","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745180152565,"stop":1745180152617,"duration":52}},{"uid":"db8c8a0604d3151b","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/52//#testresult/db8c8a0604d3151b","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745173182293,"stop":1745173182317,"duration":24}},{"uid":"29b0d8e4039a24dc","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/51//#testresult/29b0d8e4039a24dc","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745173153319,"stop":1745173153341,"duration":22}},{"uid":"d2698a8191501ac0","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/50//#testresult/d2698a8191501ac0","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745171169081,"stop":1745171169106,"duration":25}},{"uid":"f5a1e97ee9c6250a","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/49//#testresult/f5a1e97ee9c6250a","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745016104545,"stop":1745016104569,"duration":24}},{"uid":"5e30ba89f7826106","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/48//#testresult/5e30ba89f7826106","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745015892347,"stop":1745015892369,"duration":22}},{"uid":"ea4e903698091d67","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/47//#testresult/ea4e903698091d67","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745014809974,"stop":1745014809999,"duration":25}},{"uid":"88b9c254ed82e126","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/46//#testresult/88b9c254ed82e126","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745014788091,"stop":1745014788114,"duration":23}},{"uid":"717f1e02c8d716be","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/45//#testresult/717f1e02c8d716be","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745013912963,"stop":1745013912985,"duration":22}},{"uid":"8e76da7c6a0aa85d","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/44//#testresult/8e76da7c6a0aa85d","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745013767683,"stop":1745013767705,"duration":22}},{"uid":"cecfca88ffb9e96d","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/43//#testresult/cecfca88ffb9e96d","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745007984244,"stop":1745007984269,"duration":25}},{"uid":"b7df318d0f6ba103","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/42//#testresult/b7df318d0f6ba103","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745007718116,"stop":1745007718139,"duration":23}},{"uid":"4dc5d4af09853f8b","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/40//#testresult/4dc5d4af09853f8b","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745007086974,"stop":1745007086998,"duration":24}},{"uid":"da0cd12126d9846d","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/39//#testresult/da0cd12126d9846d","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745006983154,"stop":1745006983178,"duration":24}},{"uid":"8e0ed109b73cc10f","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/38//#testresult/8e0ed109b73cc10f","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745006650471,"stop":1745006650494,"duration":23}},{"uid":"2f76c7742b5f9812","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/37//#testresult/2f76c7742b5f9812","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745006447965,"stop":1745006447989,"duration":24}},{"uid":"7c927d2911bf25d8","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/36//#testresult/7c927d2911bf25d8","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745006158579,"stop":1745006158602,"duration":23}}]},"tags":["negative","user"]},"source":"844b858eb3cf9bde.json","parameterValues":[]}