{"uid":"961e81ba648ceb4f","name":"Тест получения деталей запроса c некорректным ID","fullName":"tests.request.test_request_api.TestRequestAPI#test_get_request_details_bad_request","historyId":"227b8792dcbc8996c1da6f6bff256a46","time":{"start":1746143189975,"stop":1746143190033,"duration":58},"description":"Проверяем получение ошибки 400 при запросе деталей c ID, должен быть отклонен сервером.","descriptionHtml":"<p>Проверяем получение ошибки 400 при запросе деталей c ID, должен быть отклонен сервером.</p>\n","status":"failed","statusMessage":"AssertionError: The status was pending 400, but received 403. URL: http://localhost:4040/api/request/invalid-id-format\nBody of the answer:\n{\"message\":\"No token provided.\"}","statusTrace":"self = <tests.request.test_request_api.TestRequestAPI object at 0x7fb217b12ea0>\nrequest_client = <api.request.client.RequestClient object at 0x7fb2179c2270>\n\n    @allure.feature(\"Детали запроса (GET /api/request/{id})\")\n    @allure.story(\"Получение деталей\")\n    @allure.title(\"Тест получения деталей запроса c некорректным ID\")\n    @allure.description(\n        \"Проверяем получение ошибки 400 при запросе деталей c ID, должен быть отклонен сервером.\"\n    )\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.negative\n    def test_get_request_details_bad_request(self, request_client: RequestClient) -> None:\n        \"\"\"\n        Проверка получения деталей запроса c некорректным ID (если сервер должен возвращать 400).\n    \n        Ожидаемый результат: статус 400 Bad Request.\n        \"\"\"\n        invalid_id = \"invalid-id-format\"\n        logger.info(\n            \"Тест: Получение деталей запроса c невалидным ID (GET /api/request/%s)\", invalid_id\n        )\n>       response = request_client.get_request_details(request_id=invalid_id, expected_status=400)  # type: ignore\n\ntests/request/test_request_api.py:175: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/request/client.py:65: in get_request_details\n    return self._handle_response(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.request.client.RequestClient object at 0x7fb2179c2270>\nresponse = <APIResponse url='http://localhost:4040/api/request/invalid-id-format' status=403 status_text='Forbidden'>\nexpected_status = 400, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 400, but received 403. URL: http://localhost:4040/api/request/invalid-id-format\nE       Body of the answer:\nE       {\"message\":\"No token provided.\"}\n\napi/base_api.py:69: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1746143187892,"stop":1746143187892,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1746143187893,"stop":1746143187893,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1746143187893,"stop":1746143188394,"duration":501},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1746143187893,"stop":1746143187893,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1746143187893,"stop":1746143187893,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1746143188395,"stop":1746143188426,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1746143188427,"stop":1746143188427,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"request_client","time":{"start":1746143189528,"stop":1746143189529,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем получение ошибки 400 при запросе деталей c ID, должен быть отклонен сервером.","status":"failed","statusMessage":"AssertionError: The status was pending 400, but received 403. URL: http://localhost:4040/api/request/invalid-id-format\nBody of the answer:\n{\"message\":\"No token provided.\"}","statusTrace":"self = <tests.request.test_request_api.TestRequestAPI object at 0x7fb217b12ea0>\nrequest_client = <api.request.client.RequestClient object at 0x7fb2179c2270>\n\n    @allure.feature(\"Детали запроса (GET /api/request/{id})\")\n    @allure.story(\"Получение деталей\")\n    @allure.title(\"Тест получения деталей запроса c некорректным ID\")\n    @allure.description(\n        \"Проверяем получение ошибки 400 при запросе деталей c ID, должен быть отклонен сервером.\"\n    )\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.negative\n    def test_get_request_details_bad_request(self, request_client: RequestClient) -> None:\n        \"\"\"\n        Проверка получения деталей запроса c некорректным ID (если сервер должен возвращать 400).\n    \n        Ожидаемый результат: статус 400 Bad Request.\n        \"\"\"\n        invalid_id = \"invalid-id-format\"\n        logger.info(\n            \"Тест: Получение деталей запроса c невалидным ID (GET /api/request/%s)\", invalid_id\n        )\n>       response = request_client.get_request_details(request_id=invalid_id, expected_status=400)  # type: ignore\n\ntests/request/test_request_api.py:175: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/request/client.py:65: in get_request_details\n    return self._handle_response(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.request.client.RequestClient object at 0x7fb2179c2270>\nresponse = <APIResponse url='http://localhost:4040/api/request/invalid-id-format' status=403 status_text='Forbidden'>\nexpected_status = 400, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 400, but received 403. URL: http://localhost:4040/api/request/invalid-id-format\nE       Body of the answer:\nE       {\"message\":\"No token provided.\"}\n\napi/base_api.py:69: AssertionError","steps":[{"name":"Получение деталей запроса помощи: id='invalid-id-format'","time":{"start":1746143189976,"stop":1746143190032,"duration":56},"status":"failed","statusMessage":"AssertionError: The status was pending 400, but received 403. URL: http://localhost:4040/api/request/invalid-id-format\nBody of the answer:\n{\"message\":\"No token provided.\"}\n","statusTrace":"  File \"/app/.venv/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/app/api/request/client.py\", line 65, in get_request_details\n    return self._handle_response(\n           ~~~~~~~~~~~~~~~~~~~~~^\n        response,\n        ^^^^^^^^^\n        expected_status,\n        ^^^^^^^^^^^^^^^^\n        response_model=HelpRequestData if expected_status == 200 else None,\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/app/api/base_api.py\", line 69, in _handle_response\n    assert response.status == expected_status, (\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[{"uid":"a5ffc106fca93556","name":"Status Code: 403","source":"a5ffc106fca93556.txt","type":"text/plain","size":3},{"uid":"69523d05a189d4c8","name":"Request URL","source":"69523d05a189d4c8.uri","type":"text/uri-list","size":51},{"uid":"8ad272bb96c96f6e","name":"Response Headers (JSON)","source":"8ad272bb96c96f6e.json","type":"application/json","size":316},{"uid":"a991630025ed949","name":"Response Body (JSON)","source":"a991630025ed949.json","type":"application/json","size":39},{"uid":"467207ce71654f95","name":"Status response code: 403 (Expected: 400)","source":"467207ce71654f95.txt","type":"text/plain","size":3}],"parameters":[{"name":"request_id","value":"'invalid-id-format'"},{"name":"expected_status","value":"400"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":5,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"ca523924687be66e","name":"log","source":"ca523924687be66e.txt","type":"text/plain","size":3149},{"uid":"9dd3bc000ebe66c5","name":"stderr","source":"9dd3bc000ebe66c5.txt","type":"text/plain","size":3675}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":7,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"api_request_context::0","time":{"start":1746143191431,"stop":1746143191440,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1746143191440,"stop":1746143191448,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Детали запроса (GET /api/request/{id})"},{"name":"story","value":"Получение деталей"},{"name":"epic","value":"Запросы помощи"},{"name":"tag","value":"negative"},{"name":"tag","value":"request"},{"name":"parentSuite","value":"tests.request"},{"name":"suite","value":"test_request_api"},{"name":"subSuite","value":"TestRequestAPI"},{"name":"host","value":"fv-az1778-850"},{"name":"thread","value":"6-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.request.test_request_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"fa36a3433fab3968","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 403. URL: http://localhost:4040/api/request/invalid-id-format\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746143189884,"stop":1746143189937,"duration":53}},{"uid":"ac50eece5b5fcf00","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 403. URL: http://localhost:4040/api/request/invalid-id-format\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746143189791,"stop":1746143189844,"duration":53}},{"uid":"dcb2658eddc6ae34","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 403. URL: http://localhost:4040/api/request/invalid-id-format\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746143189702,"stop":1746143189756,"duration":54}},{"uid":"8d68b8e25074935e","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 403. URL: http://localhost:4040/api/request/invalid-id-format\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746143189614,"stop":1746143189667,"duration":53}},{"uid":"cfab9f54bda6cc8","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 403. URL: http://localhost:4040/api/request/invalid-id-format\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746143189530,"stop":1746143189582,"duration":52}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":16,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":16},"items":[{"uid":"7d956fb5703be0c0","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/85//#testresult/7d956fb5703be0c0","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 403. URL: http://localhost:4040/api/request/invalid-id-format\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746142753426,"stop":1746142753481,"duration":55}},{"uid":"e15e3924d736f27a","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/84//#testresult/e15e3924d736f27a","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 403. URL: http://localhost:4040/api/request/invalid-id-format\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746055011197,"stop":1746055011249,"duration":52}},{"uid":"f0807aabab016f7a","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/83//#testresult/f0807aabab016f7a","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 403. URL: http://localhost:4040/api/request/invalid-id-format\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746054724819,"stop":1746054724875,"duration":56}},{"uid":"e0c7365855d70ba0","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/82//#testresult/e0c7365855d70ba0","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 403. URL: http://localhost:4040/api/request/invalid-id-format\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746054187413,"stop":1746054187467,"duration":54}},{"uid":"79346b08d43f03de","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/81//#testresult/79346b08d43f03de","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 403. URL: http://localhost:4040/api/request/invalid-id-format\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745969592417,"stop":1745969592471,"duration":54}},{"uid":"fc3ff29024540233","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/80//#testresult/fc3ff29024540233","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 403. URL: http://localhost:4040/api/request/invalid-id-format\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745946046026,"stop":1745946046078,"duration":52}},{"uid":"38b8fd6db35ac3a7","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/79//#testresult/38b8fd6db35ac3a7","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 403. URL: http://localhost:4040/api/request/invalid-id-format\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745348185729,"stop":1745348185781,"duration":52}},{"uid":"cd2a0bcf29edf924","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/78//#testresult/cd2a0bcf29edf924","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 500. URL: http://localhost:4040/api/request/invalid-id-format\nBody of the answer:\nPlanned Server Error","time":{"start":1745347897038,"stop":1745347897104,"duration":66}},{"uid":"5e69311c368508de","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/77//#testresult/5e69311c368508de","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 403. URL: http://localhost:4040/api/request/invalid-id-format\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745347099225,"stop":1745347099283,"duration":58}},{"uid":"4c0b39535f6cd041","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/76//#testresult/4c0b39535f6cd041","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 500. URL: http://localhost:4040/api/request/invalid-id-format\nBody of the answer:\nPlanned Server Error","time":{"start":1745331969572,"stop":1745331969661,"duration":89}},{"uid":"b8bdf20c636e0565","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/75//#testresult/b8bdf20c636e0565","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 403. URL: http://localhost:4040/api/request/invalid-id-format\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745298266917,"stop":1745298266969,"duration":52}},{"uid":"8ceed75068548508","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/74//#testresult/8ceed75068548508","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 403. URL: http://localhost:4040/api/request/invalid-id-format\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745297840983,"stop":1745297841039,"duration":56}},{"uid":"1e15a8e40536a593","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/73//#testresult/1e15a8e40536a593","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 403. URL: http://localhost:4040/api/request/invalid-id-format\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745297610340,"stop":1745297610394,"duration":54}},{"uid":"9fce640dacacba67","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/72//#testresult/9fce640dacacba67","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 403. URL: http://localhost:4040/api/request/invalid-id-format\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745297411535,"stop":1745297411588,"duration":53}},{"uid":"24219fbc692a700f","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/71//#testresult/24219fbc692a700f","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 500. URL: http://localhost:4040/api/request/invalid-id-format\nBody of the answer:\nPlanned Server Error","time":{"start":1745297305105,"stop":1745297305181,"duration":76}}]},"tags":["request","negative"]},"source":"961e81ba648ceb4f.json","parameterValues":[]}