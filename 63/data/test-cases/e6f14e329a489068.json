{"uid":"e6f14e329a489068","name":"Тест успешного получения данных пользователя","fullName":"tests.user.test_user_api.TestUserAPI#test_get_user_info_success","historyId":"ce00374a95389d718a8d728c79e283b3","time":{"start":1745291452805,"stop":1745291452861,"duration":56},"description":"Проверяем получение данных профиля для аутентифицированного пользователя.","descriptionHtml":"<p>Проверяем получение данных профиля для аутентифицированного пользователя.</p>\n","status":"failed","statusMessage":"AssertionError: assert 'Областной операционный техник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Областной операционный техник","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f92f3410e10>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f92f1f2ba80>\n\n    @allure.feature(\"Профиль пользователя (GET /api/user)\")\n    @allure.story(\"Получение профиля\")\n    @allure.title(\"Тест успешного получения данных пользователя\")\n    @allure.description(\"Проверяем получение данных профиля для аутентифицированного пользователя.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    def test_get_user_info_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного получения информации o текущем пользователе.\n    \n        Ожидаемый результат: статус 200 и валидные данные пользователя.\n        \"\"\"\n        logger.info(\"Тест: Успешное получение данных пользователя (GET /api/user)\")\n        response = authenticated_user_client.get_user_info(expected_status=200)  # type: ignore\n    \n        with allure.step(\"Проверка данных пользователя\"):  # type: ignore\n            assert isinstance(response, UserDataResponse), \"Ответ должен быть типа UserDataResponse\"\n            assert response.id is not None, \"Поле 'id' пользователя не должно быть пустым\"\n            assert isinstance(response.id, str), \"Поле 'id' пользователя должно быть типа str\"\n            assert len(response.base_locations) == 2\n    \n            education = response.educations[0]\n            assert education is not None\n            assert education.model_dump(by_alias=True)[\"organizationName\"] == \"НПГУ ДПИ\"\n            assert education.model_dump(by_alias=True)[\"level\"] == \"Высшее\"\n>           assert (\n                education.model_dump(by_alias=True)[\"specialization\"]\n                == \"Районный маркетинговый администратор\"\n            )\nE           AssertionError: assert 'Областной операционный техник' == 'Районный маркетинговый администратор'\nE             \nE             - Районный маркетинговый администратор\nE             + Областной операционный техник\n\ntests/user/test_user_api.py:48: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1745291449404,"stop":1745291449404,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1745291449405,"stop":1745291449405,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1745291449405,"stop":1745291449405,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1745291449405,"stop":1745291449405,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1745291449406,"stop":1745291449846,"duration":440},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1745291449846,"stop":1745291449874,"duration":28},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1745291449874,"stop":1745291449875,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_client","time":{"start":1745291449875,"stop":1745291449875,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_token","time":{"start":1745291452042,"stop":1745291452110,"duration":68},"status":"failed","statusMessage":"Failed: КРИТИЧЕСКАЯ ОШИБКА: He удалось выполнить сессионный логин для пользователя testUser4@test.com. Ошибка: The status was pending 200, but received 500. URL: http://localhost:4040/api/auth\nBody of the answer:\nPlanned Server Error\n","statusTrace":"  File \"/app/.venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^\n  File \"/app/.venv/lib/python3.13/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/app/.venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n  File \"/app/.venv/lib/python3.13/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/app/.venv/lib/python3.13/site-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/app/tests/conftest.py\", line 109, in auth_token_fixture\n    pytest.fail(\n    ~~~~~~~~~~~^\n        f\"КРИТИЧЕСКАЯ ОШИБКА: He удалось выполнить сессионный логин для пользователя \"\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        f\"{TEST_USER_LOGIN}. Ошибка: {e}\",\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        pytrace=False,\n        ^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/app/.venv/lib/python3.13/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[{"uid":"ebcc1a93c88ebe89","name":"Status Code: 500","source":"ebcc1a93c88ebe89.txt","type":"text/plain","size":3},{"uid":"b9146d86b63a71ba","name":"Request URL","source":"b9146d86b63a71ba.uri","type":"text/uri-list","size":30},{"uid":"8e74d5e6cf59238b","name":"Response Headers (JSON)","source":"8e74d5e6cf59238b.json","type":"application/json","size":309},{"uid":"92ba4d281bc891e0","name":"Response Body (Text)","source":"92ba4d281bc891e0.txt","type":"text/plain","size":20},{"uid":"3263e2b7c9086dbd","name":"Status response code: 500 (Expected: 200)","source":"3263e2b7c9086dbd.txt","type":"text/plain","size":3}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},{"name":"auth_token","time":{"start":1745291452133,"stop":1745291452252,"duration":119},"status":"passed","steps":[],"attachments":[{"uid":"3845e5fe0eaf8702","name":"Status Code: 200","source":"3845e5fe0eaf8702.txt","type":"text/plain","size":3},{"uid":"cc295b2c924adb53","name":"Request URL","source":"cc295b2c924adb53.uri","type":"text/uri-list","size":30},{"uid":"94d5f1f77870430f","name":"Response Headers (JSON)","source":"94d5f1f77870430f.json","type":"application/json","size":317},{"uid":"8638bd01635a918","name":"Response Body (JSON)","source":"8638bd01635a918.json","type":"application/json","size":224},{"uid":"35614b56603e82f1","name":"Status response code: 200 (Expected: 200)","source":"35614b56603e82f1.txt","type":"text/plain","size":3},{"uid":"553264fb6f7494be","name":"Body of the answer (failed by AuthSuccessResponse)","source":"553264fb6f7494be.json","type":"application/json","size":220}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"authenticated_api_req_context","time":{"start":1745291452788,"stop":1745291452804,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_http_client","time":{"start":1745291452804,"stop":1745291452804,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_user_client","time":{"start":1745291452804,"stop":1745291452804,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем получение данных профиля для аутентифицированного пользователя.","status":"failed","statusMessage":"AssertionError: assert 'Областной операционный техник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Областной операционный техник","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f92f3410e10>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f92f1f2ba80>\n\n    @allure.feature(\"Профиль пользователя (GET /api/user)\")\n    @allure.story(\"Получение профиля\")\n    @allure.title(\"Тест успешного получения данных пользователя\")\n    @allure.description(\"Проверяем получение данных профиля для аутентифицированного пользователя.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    def test_get_user_info_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного получения информации o текущем пользователе.\n    \n        Ожидаемый результат: статус 200 и валидные данные пользователя.\n        \"\"\"\n        logger.info(\"Тест: Успешное получение данных пользователя (GET /api/user)\")\n        response = authenticated_user_client.get_user_info(expected_status=200)  # type: ignore\n    \n        with allure.step(\"Проверка данных пользователя\"):  # type: ignore\n            assert isinstance(response, UserDataResponse), \"Ответ должен быть типа UserDataResponse\"\n            assert response.id is not None, \"Поле 'id' пользователя не должно быть пустым\"\n            assert isinstance(response.id, str), \"Поле 'id' пользователя должно быть типа str\"\n            assert len(response.base_locations) == 2\n    \n            education = response.educations[0]\n            assert education is not None\n            assert education.model_dump(by_alias=True)[\"organizationName\"] == \"НПГУ ДПИ\"\n            assert education.model_dump(by_alias=True)[\"level\"] == \"Высшее\"\n>           assert (\n                education.model_dump(by_alias=True)[\"specialization\"]\n                == \"Районный маркетинговый администратор\"\n            )\nE           AssertionError: assert 'Областной операционный техник' == 'Районный маркетинговый администратор'\nE             \nE             - Районный маркетинговый администратор\nE             + Областной операционный техник\n\ntests/user/test_user_api.py:48: AssertionError","steps":[{"name":"Получение данных текущего пользователя","time":{"start":1745291452806,"stop":1745291452859,"duration":53},"status":"passed","steps":[],"attachments":[{"uid":"749b3c2aa3048868","name":"Status Code: 200","source":"749b3c2aa3048868.txt","type":"text/plain","size":3},{"uid":"e6b699536b1feb81","name":"Request URL","source":"e6b699536b1feb81.uri","type":"text/uri-list","size":30},{"uid":"f515a226612444fa","name":"Response Headers (JSON)","source":"f515a226612444fa.json","type":"application/json","size":318},{"uid":"72f5d3a9a599f25b","name":"Response Body (JSON)","source":"72f5d3a9a599f25b.json","type":"application/json","size":1258},{"uid":"ceb9333dd5a068b","name":"Status response code: 200 (Expected: 200)","source":"ceb9333dd5a068b.txt","type":"text/plain","size":3},{"uid":"6227ba6802fb7a53","name":"Body of the answer (failed by UserDataResponse)","source":"6227ba6802fb7a53.json","type":"application/json","size":1111}],"parameters":[{"name":"expected_status","value":"200"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"Проверка данных пользователя","time":{"start":1745291452859,"stop":1745291452860,"duration":1},"status":"failed","statusMessage":"AssertionError: assert 'Областной операционный техник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Областной операционный техник\n","statusTrace":"  File \"/app/tests/user/test_user_api.py\", line 48, in test_get_user_info_success\n    assert (\n    ...<2 lines>...\n    )\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"6505db1accfcdb49","name":"log","source":"6505db1accfcdb49.txt","type":"text/plain","size":4488},{"uid":"377799057bb82fdb","name":"stderr","source":"377799057bb82fdb.txt","type":"text/plain","size":5314}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":8,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"authenticated_api_req_context::0","time":{"start":1745291452876,"stop":1745291452892,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context::0","time":{"start":1745291453441,"stop":1745291453450,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1745291453451,"stop":1745291453459,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Профиль пользователя (GET /api/user)"},{"name":"epic","value":"Управление пользователем"},{"name":"severity","value":"critical"},{"name":"story","value":"Получение профиля"},{"name":"tag","value":"positive"},{"name":"tag","value":"smoke"},{"name":"tag","value":"user"},{"name":"parentSuite","value":"tests.user"},{"name":"suite","value":"test_user_api"},{"name":"subSuite","value":"TestUserAPI"},{"name":"host","value":"fv-az566-783"},{"name":"thread","value":"9-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.user.test_user_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[{"uid":"667caa059e7a4974","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745291452669,"stop":1745291452735,"duration":66}},{"uid":"56626dfabefd3571","status":"failed","statusDetails":"AssertionError: assert 'Областной операционный техник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Областной операционный техник","time":{"start":1745291452514,"stop":1745291452612,"duration":98}},{"uid":"5d318fc4fa6f4163","status":"failed","statusDetails":"AssertionError: assert 'Областной операционный техник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Областной операционный техник","time":{"start":1745291452395,"stop":1745291452450,"duration":55}},{"uid":"aa0b71e5ec42038b","status":"failed","statusDetails":"AssertionError: assert 'Областной операционный техник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Областной операционный техник","time":{"start":1745291452270,"stop":1745291452335,"duration":65}},{"uid":"feda4e9325d463fe","status":"failed","statusDetails":"Failed: КРИТИЧЕСКАЯ ОШИБКА: He удалось выполнить сессионный логин для пользователя testUser4@test.com. Ошибка: The status was pending 200, but received 500. URL: http://localhost:4040/api/auth\nBody of the answer:\nPlanned Server Error","time":{"start":1745291452040,"stop":1745291452040,"duration":0}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"a5631235b0f8678c","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/62//#testresult/a5631235b0f8678c","status":"failed","statusDetails":"AssertionError: assert 'Национальный коммуникационный сотрудник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Национальный коммуникационный сотрудник","time":{"start":1745290947059,"stop":1745290947126,"duration":67}}]},"tags":["smoke","positive","user"]},"source":"e6f14e329a489068.json","parameterValues":[]}