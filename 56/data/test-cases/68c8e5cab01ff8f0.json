{"uid":"68c8e5cab01ff8f0","name":"Тест неуспешного входа: Пустое тело запроса","fullName":"tests.auth.test_auth_api.TestAuthenticationAPI#test_login_malformed_payload","historyId":"eb7958bd4321194f1284512d6ef1aa81","time":{"start":1745264282326,"stop":1745264282407,"duration":81},"description":"Проверяем, что API возвращает 400 при отправке некорректного тела: Пустое тело запроса","descriptionHtml":"<p>Проверяем, что API возвращает 400 при отправке некорректного тела: Пустое тело запроса</p>\n","status":"failed","statusMessage":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","statusTrace":"self = <tests.auth.test_auth_api.TestAuthenticationAPI object at 0x7f60120b8270>\nauth_client = <api.auth.client.AuthClient object at 0x7f6011e2c980>\npayload_dict = {}, expected_status = 400, description = 'Пустое тело запроса'\n\n    @allure.story(\"Неуспешный вход - Некорректное тело запроса\")\n    @allure.title(\"Тест неуспешного входа: {description}\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.negative\n    @pytest.mark.parametrize(\n        (\"payload_dict\", \"expected_status\", \"description\"),\n        [\n            pytest.param(\n                {\"login\": TEST_USER_LOGIN},\n                400,\n                \"Отсутствует поле password\",\n                id=\"missing_password\",\n            ),\n            pytest.param(\n                {\"password\": TEST_USER_PASSWORD},\n                400,\n                \"Отсутствует поле login\",\n                id=\"missing_login\",\n            ),\n            pytest.param({}, 400, \"Пустое тело запроса\", id=\"empty_payload_400\"),\n            pytest.param(\n                {\"login\": \"\", \"password\": TEST_USER_PASSWORD},\n                400,\n                \"Пустая строка в поле login\",\n                id=\"empty_login_str_400\",\n            ),\n            pytest.param(\n                {\"login\": TEST_USER_LOGIN, \"password\": \"\"},\n                400,\n                \"Пустая строка в поле password\",\n                id=\"empty_pass_str\",\n            ),\n            pytest.param(\n                {\"login\": \"не email\", \"password\": TEST_USER_PASSWORD},\n                400,\n                \"Некорректный формат login (не email)\",\n                id=\"bad_login_format\",\n            ),\n        ],\n    )\n    def test_login_malformed_payload(\n        self,\n        auth_client: AuthClient,\n        payload_dict: dict[str, str | None],\n        expected_status: int,\n        description: str,\n    ) -> None:\n        \"\"\"\n        Проверка реакции API на некорректно сформированное тело запроса.\n    \n        Ожидаемый результат: код состояния 400 Bad Request.\n        \"\"\"\n        allure.dynamic.description(\n            f\"Проверяем, что API возвращает {expected_status} при отправке некорректного тела: \"\n            f\"{description}\"\n        )\n        logger.info(\"Тест: %s\", description)\n        endpoint = APIEndpoints.AUTH\n        response = auth_client.http.post(endpoint=str(endpoint), json=payload_dict)\n>       assert response.status == expected_status, (\n            f\"Ожидался статус {expected_status}, но получен {response.status}. \"\n            f\"Тело: {response.text()}\"\n        )\nE       AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nE       assert 403 == 400\nE        +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status\n\ntests/auth/test_auth_api.py:137: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1745264280840,"stop":1745264280840,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1745264280841,"stop":1745264280841,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1745264280841,"stop":1745264280841,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1745264280841,"stop":1745264280841,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1745264280842,"stop":1745264281270,"duration":428},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1745264281271,"stop":1745264281297,"duration":26},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_client","time":{"start":1745264281298,"stop":1745264281299,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1745264281298,"stop":1745264281298,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем, что API возвращает 400 при отправке некорректного тела: Пустое тело запроса","status":"failed","statusMessage":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","statusTrace":"self = <tests.auth.test_auth_api.TestAuthenticationAPI object at 0x7f60120b8270>\nauth_client = <api.auth.client.AuthClient object at 0x7f6011e2c980>\npayload_dict = {}, expected_status = 400, description = 'Пустое тело запроса'\n\n    @allure.story(\"Неуспешный вход - Некорректное тело запроса\")\n    @allure.title(\"Тест неуспешного входа: {description}\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.negative\n    @pytest.mark.parametrize(\n        (\"payload_dict\", \"expected_status\", \"description\"),\n        [\n            pytest.param(\n                {\"login\": TEST_USER_LOGIN},\n                400,\n                \"Отсутствует поле password\",\n                id=\"missing_password\",\n            ),\n            pytest.param(\n                {\"password\": TEST_USER_PASSWORD},\n                400,\n                \"Отсутствует поле login\",\n                id=\"missing_login\",\n            ),\n            pytest.param({}, 400, \"Пустое тело запроса\", id=\"empty_payload_400\"),\n            pytest.param(\n                {\"login\": \"\", \"password\": TEST_USER_PASSWORD},\n                400,\n                \"Пустая строка в поле login\",\n                id=\"empty_login_str_400\",\n            ),\n            pytest.param(\n                {\"login\": TEST_USER_LOGIN, \"password\": \"\"},\n                400,\n                \"Пустая строка в поле password\",\n                id=\"empty_pass_str\",\n            ),\n            pytest.param(\n                {\"login\": \"не email\", \"password\": TEST_USER_PASSWORD},\n                400,\n                \"Некорректный формат login (не email)\",\n                id=\"bad_login_format\",\n            ),\n        ],\n    )\n    def test_login_malformed_payload(\n        self,\n        auth_client: AuthClient,\n        payload_dict: dict[str, str | None],\n        expected_status: int,\n        description: str,\n    ) -> None:\n        \"\"\"\n        Проверка реакции API на некорректно сформированное тело запроса.\n    \n        Ожидаемый результат: код состояния 400 Bad Request.\n        \"\"\"\n        allure.dynamic.description(\n            f\"Проверяем, что API возвращает {expected_status} при отправке некорректного тела: \"\n            f\"{description}\"\n        )\n        logger.info(\"Тест: %s\", description)\n        endpoint = APIEndpoints.AUTH\n        response = auth_client.http.post(endpoint=str(endpoint), json=payload_dict)\n>       assert response.status == expected_status, (\n            f\"Ожидался статус {expected_status}, но получен {response.status}. \"\n            f\"Тело: {response.text()}\"\n        )\nE       AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nE       assert 403 == 400\nE        +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status\n\ntests/auth/test_auth_api.py:137: AssertionError","steps":[],"attachments":[{"uid":"8d94db0364a5051","name":"Status Code: 403","source":"8d94db0364a5051.txt","type":"text/plain","size":3},{"uid":"1a67f1b710b4357e","name":"Request URL","source":"1a67f1b710b4357e.uri","type":"text/uri-list","size":39},{"uid":"370fac3dc32d39a9","name":"Response Headers (JSON)","source":"370fac3dc32d39a9.json","type":"application/json","size":316},{"uid":"ccc30fed9eef23a9","name":"Response Body (JSON)","source":"ccc30fed9eef23a9.json","type":"application/json","size":39},{"uid":"5e8888bab32a9486","name":"log","source":"5e8888bab32a9486.txt","type":"text/plain","size":1793},{"uid":"feecd55aad763117","name":"stderr","source":"feecd55aad763117.txt","type":"text/plain","size":2172}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"api_request_context::0","time":{"start":1745264284731,"stop":1745264284741,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1745264284742,"stop":1745264284751,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Вход пользователя (POST /api/auth)"},{"name":"story","value":"Неуспешный вход - Некорректное тело запроса"},{"name":"epic","value":"Аутентификация"},{"name":"tag","value":"negative"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests.auth"},{"name":"suite","value":"test_auth_api"},{"name":"subSuite","value":"TestAuthenticationAPI"},{"name":"host","value":"fv-az1382-590"},{"name":"thread","value":"9-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.auth.test_auth_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"description","value":"'Пустое тело запроса'"},{"name":"expected_status","value":"400"},{"name":"payload_dict","value":"{}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"43adece391af362","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1745264282215,"stop":1745264282293,"duration":78}},{"uid":"aa5af650dcdc9b34","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1745264282116,"stop":1745264282188,"duration":72}},{"uid":"2329e3eae1e638b7","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1745264282028,"stop":1745264282084,"duration":56}},{"uid":"d70ceb10b3fec8f7","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1745264281949,"stop":1745264282003,"duration":54}},{"uid":"c7fcfb429395bf9a","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1745264281865,"stop":1745264281920,"duration":55}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":30,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":30},"items":[{"uid":"d3d4467c11f9e607","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/55//#testresult/d3d4467c11f9e607","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1745263983676,"stop":1745263983698,"duration":22}},{"uid":"12b173e43afb0183","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/54//#testresult/12b173e43afb0183","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1745180422941,"stop":1745180422992,"duration":51}},{"uid":"be65572d557744d7","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/53//#testresult/be65572d557744d7","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 500. Тело: Planned Server Error\nassert 500 == 400\n +  where 500 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=500 status_text='Internal Server Error'>.status","time":{"start":1745180150921,"stop":1745180151004,"duration":83}},{"uid":"fb3ec520f986c4ca","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/52//#testresult/fb3ec520f986c4ca","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1745173181681,"stop":1745173181706,"duration":25}},{"uid":"f97713bcea6efa4f","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/51//#testresult/f97713bcea6efa4f","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1745173152743,"stop":1745173152765,"duration":22}},{"uid":"6e7aa7bfffc987d5","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/50//#testresult/6e7aa7bfffc987d5","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1745171168470,"stop":1745171168493,"duration":23}},{"uid":"2782f268c3541632","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/49//#testresult/2782f268c3541632","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1745016103924,"stop":1745016103946,"duration":22}},{"uid":"1e580c5a8bd8a6fd","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/48//#testresult/1e580c5a8bd8a6fd","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1745015891758,"stop":1745015891781,"duration":23}},{"uid":"cf28507c6d2f2ab7","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/47//#testresult/cf28507c6d2f2ab7","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1745014809331,"stop":1745014809356,"duration":25}},{"uid":"f5fa82b9df8aed0f","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/46//#testresult/f5fa82b9df8aed0f","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1745014787497,"stop":1745014787519,"duration":22}},{"uid":"39b76c4676b4fb74","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/45//#testresult/39b76c4676b4fb74","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1745013912379,"stop":1745013912401,"duration":22}},{"uid":"361d5bdc421e9cbb","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/44//#testresult/361d5bdc421e9cbb","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1745013767096,"stop":1745013767118,"duration":22}},{"uid":"59c297c260a57ebc","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/43//#testresult/59c297c260a57ebc","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1745007983625,"stop":1745007983648,"duration":23}},{"uid":"c20d5a2785cacb13","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/42//#testresult/c20d5a2785cacb13","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1745007717525,"stop":1745007717547,"duration":22}},{"uid":"dce125ab401bfced","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/40//#testresult/dce125ab401bfced","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1745007086364,"stop":1745007086387,"duration":23}},{"uid":"d06a1a20c072cf15","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/39//#testresult/d06a1a20c072cf15","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1745006982533,"stop":1745006982557,"duration":24}},{"uid":"2a98bf24f0f5f787","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/38//#testresult/2a98bf24f0f5f787","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1745006649874,"stop":1745006649896,"duration":22}},{"uid":"a3c57c191eb11c41","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/37//#testresult/a3c57c191eb11c41","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1745006447334,"stop":1745006447358,"duration":24}},{"uid":"61e219991a07a6d9","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/36//#testresult/61e219991a07a6d9","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1745006158000,"stop":1745006158023,"duration":23}},{"uid":"f444faa5672f6334","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/35//#testresult/f444faa5672f6334","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1745005971009,"stop":1745005971033,"duration":24}}]},"tags":["negative","auth"]},"source":"68c8e5cab01ff8f0.json","parameterValues":["'Пустое тело запроса'","400","{}"]}