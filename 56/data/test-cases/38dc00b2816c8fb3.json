{"uid":"38dc00b2816c8fb3","name":"Тест успешного получения данных пользователя","fullName":"tests.user.test_user_api.TestUserAPI#test_get_user_info_success","historyId":"ce00374a95389d718a8d728c79e283b3","time":{"start":1745264284272,"stop":1745264284352,"duration":80},"description":"Проверяем получение данных профиля для аутентифицированного пользователя.","descriptionHtml":"<p>Проверяем получение данных профиля для аутентифицированного пользователя.</p>\n","status":"failed","statusMessage":"AssertionError: assert 'Международный функциональный помощник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Международный функциональный помощник","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f55e45ace10>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f55e414ed70>\n\n    @allure.feature(\"Профиль пользователя (GET /api/user)\")\n    @allure.story(\"Получение профиля\")\n    @allure.title(\"Тест успешного получения данных пользователя\")\n    @allure.description(\"Проверяем получение данных профиля для аутентифицированного пользователя.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    def test_get_user_info_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного получения информации o текущем пользователе.\n    \n        Ожидаемый результат: статус 200 и валидные данные пользователя.\n        \"\"\"\n        logger.info(\"Тест: Успешное получение данных пользователя (GET /api/user)\")\n        response = authenticated_user_client.get_user_info(expected_status=200)  # type: ignore\n    \n        with allure.step(\"Проверка данных пользователя\"):  # type: ignore\n            assert isinstance(response, UserDataResponse), \"Ответ должен быть типа UserDataResponse\"\n            assert response.id is not None, \"Поле 'id' пользователя не должно быть пустым\"\n            assert isinstance(response.id, str), \"Поле 'id' пользователя должно быть типа str\"\n            assert len(response.base_locations) == 2\n    \n            education = response.educations[0]\n            assert education is not None\n            assert education.model_dump(by_alias=True)[\"organizationName\"] == \"НПГУ ДПИ\"\n            assert education.model_dump(by_alias=True)[\"level\"] == \"Высшее\"\n>           assert (\n                education.model_dump(by_alias=True)[\"specialization\"]\n                == \"Районный маркетинговый администратор\"\n            )\nE           AssertionError: assert 'Международный функциональный помощник' == 'Районный маркетинговый администратор'\nE             \nE             - Районный маркетинговый администратор\nE             + Международный функциональный помощник\n\ntests/user/test_user_api.py:48: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"delete_output_dir","time":{"start":1745264280841,"stop":1745264280842,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1745264280841,"stop":1745264280841,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1745264280842,"stop":1745264280842,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1745264280842,"stop":1745264281274,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1745264280842,"stop":1745264280842,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1745264281274,"stop":1745264281300,"duration":26},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_client","time":{"start":1745264281301,"stop":1745264281302,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1745264281301,"stop":1745264281301,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_token","time":{"start":1745264283537,"stop":1745264283609,"duration":72},"status":"failed","statusMessage":"Failed: КРИТИЧЕСКАЯ ОШИБКА: He удалось выполнить сессионный логин для пользователя testUser4@test.com. Ошибка: The status was pending 200, but received 500. URL: http://localhost:4040/api/auth\nBody of the answer:\nPlanned Server Error\n","statusTrace":"  File \"/app/.venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^\n  File \"/app/.venv/lib/python3.13/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/app/.venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n  File \"/app/.venv/lib/python3.13/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/app/.venv/lib/python3.13/site-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/app/tests/conftest.py\", line 109, in auth_token_fixture\n    pytest.fail(\n    ~~~~~~~~~~~^\n        f\"КРИТИЧЕСКАЯ ОШИБКА: He удалось выполнить сессионный логин для пользователя \"\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        f\"{TEST_USER_LOGIN}. Ошибка: {e}\",\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        pytrace=False,\n        ^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/app/.venv/lib/python3.13/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[{"uid":"834af592921e8cb","name":"Status Code: 500","source":"834af592921e8cb.txt","type":"text/plain","size":3},{"uid":"ca812e0d17b419f0","name":"Request URL","source":"ca812e0d17b419f0.uri","type":"text/uri-list","size":30},{"uid":"2d85a9757bc401ba","name":"Response Headers (JSON)","source":"2d85a9757bc401ba.json","type":"application/json","size":309},{"uid":"ec17ff4680f52137","name":"Response Body (Text)","source":"ec17ff4680f52137.txt","type":"text/plain","size":20},{"uid":"6c97b6e843545cee","name":"Status response code: 500 (Expected: 200)","source":"6c97b6e843545cee.txt","type":"text/plain","size":3}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},{"name":"auth_token","time":{"start":1745264283634,"stop":1745264283741,"duration":107},"status":"passed","steps":[],"attachments":[{"uid":"1a1d1ad8fe62383f","name":"Status Code: 200","source":"1a1d1ad8fe62383f.txt","type":"text/plain","size":3},{"uid":"213ede35a24c48a2","name":"Request URL","source":"213ede35a24c48a2.uri","type":"text/uri-list","size":30},{"uid":"c794785800f88f5","name":"Response Headers (JSON)","source":"c794785800f88f5.json","type":"application/json","size":317},{"uid":"8b91f8bd312958c","name":"Response Body (JSON)","source":"8b91f8bd312958c.json","type":"application/json","size":224},{"uid":"9958c98c5d1d89f9","name":"Status response code: 200 (Expected: 200)","source":"9958c98c5d1d89f9.txt","type":"text/plain","size":3},{"uid":"3ec8579d5ede31a5","name":"Body of the answer (failed by AuthSuccessResponse)","source":"3ec8579d5ede31a5.json","type":"application/json","size":220}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"authenticated_api_req_context","time":{"start":1745264284251,"stop":1745264284270,"duration":19},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_http_client","time":{"start":1745264284270,"stop":1745264284270,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_user_client","time":{"start":1745264284271,"stop":1745264284271,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем получение данных профиля для аутентифицированного пользователя.","status":"failed","statusMessage":"AssertionError: assert 'Международный функциональный помощник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Международный функциональный помощник","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f55e45ace10>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f55e414ed70>\n\n    @allure.feature(\"Профиль пользователя (GET /api/user)\")\n    @allure.story(\"Получение профиля\")\n    @allure.title(\"Тест успешного получения данных пользователя\")\n    @allure.description(\"Проверяем получение данных профиля для аутентифицированного пользователя.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    def test_get_user_info_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного получения информации o текущем пользователе.\n    \n        Ожидаемый результат: статус 200 и валидные данные пользователя.\n        \"\"\"\n        logger.info(\"Тест: Успешное получение данных пользователя (GET /api/user)\")\n        response = authenticated_user_client.get_user_info(expected_status=200)  # type: ignore\n    \n        with allure.step(\"Проверка данных пользователя\"):  # type: ignore\n            assert isinstance(response, UserDataResponse), \"Ответ должен быть типа UserDataResponse\"\n            assert response.id is not None, \"Поле 'id' пользователя не должно быть пустым\"\n            assert isinstance(response.id, str), \"Поле 'id' пользователя должно быть типа str\"\n            assert len(response.base_locations) == 2\n    \n            education = response.educations[0]\n            assert education is not None\n            assert education.model_dump(by_alias=True)[\"organizationName\"] == \"НПГУ ДПИ\"\n            assert education.model_dump(by_alias=True)[\"level\"] == \"Высшее\"\n>           assert (\n                education.model_dump(by_alias=True)[\"specialization\"]\n                == \"Районный маркетинговый администратор\"\n            )\nE           AssertionError: assert 'Международный функциональный помощник' == 'Районный маркетинговый администратор'\nE             \nE             - Районный маркетинговый администратор\nE             + Международный функциональный помощник\n\ntests/user/test_user_api.py:48: AssertionError","steps":[{"name":"Получение данных текущего пользователя","time":{"start":1745264284272,"stop":1745264284350,"duration":78},"status":"passed","steps":[],"attachments":[{"uid":"2ef9e467d717ab8","name":"Status Code: 200","source":"2ef9e467d717ab8.txt","type":"text/plain","size":3},{"uid":"b9e212e9fc3bc81e","name":"Request URL","source":"b9e212e9fc3bc81e.uri","type":"text/uri-list","size":30},{"uid":"b279e8f561d454df","name":"Response Headers (JSON)","source":"b279e8f561d454df.json","type":"application/json","size":318},{"uid":"d2c985f62e8d1a18","name":"Response Body (JSON)","source":"d2c985f62e8d1a18.json","type":"application/json","size":1279},{"uid":"ce8275ab7270fc1c","name":"Status response code: 200 (Expected: 200)","source":"ce8275ab7270fc1c.txt","type":"text/plain","size":3},{"uid":"6ca19571c0a2585","name":"Body of the answer (failed by UserDataResponse)","source":"6ca19571c0a2585.json","type":"application/json","size":1132}],"parameters":[{"name":"expected_status","value":"200"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"Проверка данных пользователя","time":{"start":1745264284350,"stop":1745264284351,"duration":1},"status":"failed","statusMessage":"AssertionError: assert 'Международный функциональный помощник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Международный функциональный помощник\n","statusTrace":"  File \"/app/tests/user/test_user_api.py\", line 48, in test_get_user_info_success\n    assert (\n    ...<2 lines>...\n    )\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"d6fff42ab01d85a6","name":"log","source":"d6fff42ab01d85a6.txt","type":"text/plain","size":4351},{"uid":"31baba61a3b1a74","name":"stderr","source":"31baba61a3b1a74.txt","type":"text/plain","size":5153}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":8,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"authenticated_api_req_context::0","time":{"start":1745264284366,"stop":1745264284382,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context::0","time":{"start":1745264284995,"stop":1745264285006,"duration":11},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1745264285007,"stop":1745264285016,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"Получение профиля"},{"name":"severity","value":"critical"},{"name":"feature","value":"Профиль пользователя (GET /api/user)"},{"name":"epic","value":"Управление пользователем"},{"name":"tag","value":"positive"},{"name":"tag","value":"smoke"},{"name":"tag","value":"user"},{"name":"parentSuite","value":"tests.user"},{"name":"suite","value":"test_user_api"},{"name":"subSuite","value":"TestUserAPI"},{"name":"host","value":"fv-az1382-590"},{"name":"thread","value":"12-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.user.test_user_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[{"uid":"24552a16be47fd38","status":"failed","statusDetails":"AssertionError: assert 'Международный функциональный помощник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Международный функциональный помощник","time":{"start":1745264284120,"stop":1745264284209,"duration":89}},{"uid":"da843eaaeeaba959","status":"failed","statusDetails":"AssertionError: assert 'Международный функциональный помощник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Международный функциональный помощник","time":{"start":1745264284008,"stop":1745264284061,"duration":53}},{"uid":"a73164d57f6841e","status":"failed","statusDetails":"AssertionError: assert 'Международный функциональный помощник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Международный функциональный помощник","time":{"start":1745264283890,"stop":1745264283950,"duration":60}},{"uid":"ab1431dbac8e2050","status":"failed","statusDetails":"AssertionError: assert 'Международный функциональный помощник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Международный функциональный помощник","time":{"start":1745264283760,"stop":1745264283826,"duration":66}},{"uid":"cce0f61b4cbc257c","status":"failed","statusDetails":"Failed: КРИТИЧЕСКАЯ ОШИБКА: He удалось выполнить сессионный логин для пользователя testUser4@test.com. Ошибка: The status was pending 200, but received 500. URL: http://localhost:4040/api/auth\nBody of the answer:\nPlanned Server Error","time":{"start":1745264283534,"stop":1745264283534,"duration":0}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":28,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":28},"items":[{"uid":"53317b5bd9e5a278","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/55//#testresult/53317b5bd9e5a278","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745263984226,"stop":1745263984257,"duration":31}},{"uid":"190da8f6cb6726bb","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/54//#testresult/190da8f6cb6726bb","status":"failed","statusDetails":"AssertionError: assert 'Региональный логистический архитектор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Региональный логистический архитектор","time":{"start":1745180424713,"stop":1745180424756,"duration":43}},{"uid":"25c1106c441350f2","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/53//#testresult/25c1106c441350f2","status":"failed","statusDetails":"AssertionError: assert 'Международный страховой техник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Международный страховой техник","time":{"start":1745180152746,"stop":1745180152778,"duration":32}},{"uid":"41375595d18bbc79","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/52//#testresult/41375595d18bbc79","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745173182239,"stop":1745173182270,"duration":31}},{"uid":"5979f9a406c717c5","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/51//#testresult/5979f9a406c717c5","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745173153266,"stop":1745173153296,"duration":30}},{"uid":"451d14c176dcc08e","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/50//#testresult/451d14c176dcc08e","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745171169026,"stop":1745171169057,"duration":31}},{"uid":"ecddb86a18fcf278","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/49//#testresult/ecddb86a18fcf278","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745016104490,"stop":1745016104520,"duration":30}},{"uid":"5cfb73d241e2334d","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/48//#testresult/5cfb73d241e2334d","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745015892294,"stop":1745015892324,"duration":30}},{"uid":"b35d3ffec593ed1f","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/47//#testresult/b35d3ffec593ed1f","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745014809916,"stop":1745014809949,"duration":33}},{"uid":"b2a0fbe5ed17a33","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/46//#testresult/b2a0fbe5ed17a33","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745014788037,"stop":1745014788068,"duration":31}},{"uid":"dbbb71de7b4d4353","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/45//#testresult/dbbb71de7b4d4353","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745013912910,"stop":1745013912940,"duration":30}},{"uid":"4754413a390ef0ac","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/44//#testresult/4754413a390ef0ac","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745013767629,"stop":1745013767659,"duration":30}},{"uid":"c16e8e787bade7c7","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/43//#testresult/c16e8e787bade7c7","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745007984188,"stop":1745007984219,"duration":31}},{"uid":"4497c205a02f76e5","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/42//#testresult/4497c205a02f76e5","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745007718062,"stop":1745007718093,"duration":31}},{"uid":"2ad275bfd6044f56","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/40//#testresult/2ad275bfd6044f56","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745007086920,"stop":1745007086950,"duration":30}},{"uid":"7a1d8b2beefc8b0c","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/39//#testresult/7a1d8b2beefc8b0c","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745006983096,"stop":1745006983128,"duration":32}},{"uid":"c21c2f659552df50","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/38//#testresult/c21c2f659552df50","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745006650417,"stop":1745006650447,"duration":30}},{"uid":"1b7a965fd9e6ed9d","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/37//#testresult/1b7a965fd9e6ed9d","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745006447908,"stop":1745006447939,"duration":31}},{"uid":"55199893bddc6f9f","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/36//#testresult/55199893bddc6f9f","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745006158525,"stop":1745006158555,"duration":30}},{"uid":"ec5c72e3549776c5","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/35//#testresult/ec5c72e3549776c5","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745005971572,"stop":1745005971603,"duration":31}}]},"tags":["smoke","positive","user"]},"source":"38dc00b2816c8fb3.json","parameterValues":[]}