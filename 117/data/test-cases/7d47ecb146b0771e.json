{"uid":"7d47ecb146b0771e","name":"Тест удаления несуществующего ID из избранного","fullName":"tests.user.test_user_api.TestUserAPI#test_remove_from_favourites_not_found","historyId":"a824f132e0d4f3dbee701c192815afe3","time":{"start":1755507066083,"stop":1755507066106,"duration":23},"description":"Проверяем, что при попытке удалить несуществующий ID возвращается ошибка 400.","descriptionHtml":"<p>Проверяем, что при попытке удалить несуществующий ID возвращается ошибка 400.</p>\n","status":"failed","statusMessage":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-efc5b119-5f1d-42c4-b5c2-ed83f8d069ca\nBody of the answer:\nRequest is removed form Favourites successfully.","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f50f2703e30>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f50f1018b90>\n\n    @allure.feature(\"Избранное пользователя (DELETE /api/user/favourites/{id})\")\n    @allure.story(\"Удаление из избранного\")\n    @allure.title(\"Тест удаления несуществующего ID из избранного\")\n    @allure.description(\n        \"Проверяем, что при попытке удалить несуществующий ID возвращается ошибка 400.\"\n    )\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.negative\n    def test_remove_from_favourites_not_found(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка удаления несуществующего запроса из избранного.\n    \n        Ожидаемый результат: статус 400 Bad Request .\n        \"\"\"\n        logger.info(\n            \"Тест: Удаление несуществующего ID из избранного (DELETE .../%s)\", NON_EXISTENT_ID\n        )\n>       response = authenticated_user_client.remove_from_favourites(\n            request_id=NON_EXISTENT_ID, expected_status=400\n        )  # type: ignore\n\ntests/user/test_user_api.py:156: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/user/client.py:82: in remove_from_favourites\n    processed_response = self._handle_response(response, expected_status)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.user.client.UserClient object at 0x7f50f1018b90>\nresponse = <APIResponse url='http://localhost:4040/api/user/favourites/non-existent-efc5b119-5f1d-42c4-b5c2-ed83f8d069ca' status=200 status_text='OK'>\nexpected_status = 400, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-efc5b119-5f1d-42c4-b5c2-ed83f8d069ca\nE       Body of the answer:\nE       Request is removed form Favourites successfully.\n\napi/base_api.py:69: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1755507063873,"stop":1755507063873,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1755507063873,"stop":1755507063873,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1755507063875,"stop":1755507063875,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1755507063876,"stop":1755507063876,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1755507063876,"stop":1755507064353,"duration":477},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1755507064353,"stop":1755507064379,"duration":26},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_client","time":{"start":1755507064379,"stop":1755507064380,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1755507064379,"stop":1755507064379,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_token","time":{"start":1755507065708,"stop":1755507065733,"duration":25},"status":"failed","statusMessage":"Failed: КРИТИЧЕСКАЯ ОШИБКА: He удалось выполнить сессионный логин для пользователя testUser4@test.com. Ошибка: The status was pending 200, but received 500. URL: http://localhost:4040/api/auth\nBody of the answer:\nPlanned Server Error\n","statusTrace":"  File \"/app/.venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/app/.venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/app/.venv/lib/python3.13/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/app/.venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"/app/.venv/lib/python3.13/site-packages/_pytest/fixtures.py\", line 1195, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/app/.venv/lib/python3.13/site-packages/_pytest/fixtures.py\", line 929, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/app/tests/conftest.py\", line 109, in auth_token_fixture\n    pytest.fail(\n    ~~~~~~~~~~~^\n        f\"КРИТИЧЕСКАЯ ОШИБКА: He удалось выполнить сессионный логин для пользователя \"\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        f\"{TEST_USER_LOGIN}. Ошибка: {e}\",\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        pytrace=False,\n        ^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/app/.venv/lib/python3.13/site-packages/_pytest/outcomes.py\", line 177, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[{"uid":"5fcfce5063b48924","name":"Status Code: 500","source":"5fcfce5063b48924.txt","type":"text/plain","size":3},{"uid":"1a211f47b90bfcb6","name":"Request URL","source":"1a211f47b90bfcb6.uri","type":"text/uri-list","size":30},{"uid":"dcf539feba72f631","name":"Response Headers (JSON)","source":"dcf539feba72f631.json","type":"application/json","size":309},{"uid":"2b590b1fd252e41a","name":"Response Body (Text)","source":"2b590b1fd252e41a.txt","type":"text/plain","size":20},{"uid":"1fc87e8443905a52","name":"Status response code: 500 (Expected: 200)","source":"1fc87e8443905a52.txt","type":"text/plain","size":3}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},{"name":"auth_token","time":{"start":1755507065751,"stop":1755507065816,"duration":65},"status":"passed","steps":[],"attachments":[{"uid":"88ce14c6416d13cc","name":"Status Code: 200","source":"88ce14c6416d13cc.txt","type":"text/plain","size":3},{"uid":"aa6c5d0f46a4621c","name":"Request URL","source":"aa6c5d0f46a4621c.uri","type":"text/uri-list","size":30},{"uid":"94e87aafd90b3304","name":"Response Headers (JSON)","source":"94e87aafd90b3304.json","type":"application/json","size":317},{"uid":"308902121f51feda","name":"Response Body (JSON)","source":"308902121f51feda.json","type":"application/json","size":224},{"uid":"7618fcb082cef079","name":"Status response code: 200 (Expected: 200)","source":"7618fcb082cef079.txt","type":"text/plain","size":3},{"uid":"bec754c9cb92c17f","name":"Body of the answer (failed by AuthSuccessResponse)","source":"bec754c9cb92c17f.json","type":"application/json","size":220}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"authenticated_api_req_context","time":{"start":1755507066076,"stop":1755507066082,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_http_client","time":{"start":1755507066082,"stop":1755507066082,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_user_client","time":{"start":1755507066082,"stop":1755507066082,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем, что при попытке удалить несуществующий ID возвращается ошибка 400.","status":"failed","statusMessage":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-efc5b119-5f1d-42c4-b5c2-ed83f8d069ca\nBody of the answer:\nRequest is removed form Favourites successfully.","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f50f2703e30>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f50f1018b90>\n\n    @allure.feature(\"Избранное пользователя (DELETE /api/user/favourites/{id})\")\n    @allure.story(\"Удаление из избранного\")\n    @allure.title(\"Тест удаления несуществующего ID из избранного\")\n    @allure.description(\n        \"Проверяем, что при попытке удалить несуществующий ID возвращается ошибка 400.\"\n    )\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.negative\n    def test_remove_from_favourites_not_found(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка удаления несуществующего запроса из избранного.\n    \n        Ожидаемый результат: статус 400 Bad Request .\n        \"\"\"\n        logger.info(\n            \"Тест: Удаление несуществующего ID из избранного (DELETE .../%s)\", NON_EXISTENT_ID\n        )\n>       response = authenticated_user_client.remove_from_favourites(\n            request_id=NON_EXISTENT_ID, expected_status=400\n        )  # type: ignore\n\ntests/user/test_user_api.py:156: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/user/client.py:82: in remove_from_favourites\n    processed_response = self._handle_response(response, expected_status)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.user.client.UserClient object at 0x7f50f1018b90>\nresponse = <APIResponse url='http://localhost:4040/api/user/favourites/non-existent-efc5b119-5f1d-42c4-b5c2-ed83f8d069ca' status=200 status_text='OK'>\nexpected_status = 400, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-efc5b119-5f1d-42c4-b5c2-ed83f8d069ca\nE       Body of the answer:\nE       Request is removed form Favourites successfully.\n\napi/base_api.py:69: AssertionError","steps":[{"name":"Удаление запроса из избранного","time":{"start":1755507066083,"stop":1755507066105,"duration":22},"status":"failed","statusMessage":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-efc5b119-5f1d-42c4-b5c2-ed83f8d069ca\nBody of the answer:\nRequest is removed form Favourites successfully.\n","statusTrace":"  File \"/app/.venv/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/app/api/user/client.py\", line 82, in remove_from_favourites\n    processed_response = self._handle_response(response, expected_status)\n  File \"/app/api/base_api.py\", line 69, in _handle_response\n    assert response.status == expected_status, (\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[{"uid":"4942e01ded84cdcb","name":"Status Code: 200","source":"4942e01ded84cdcb.txt","type":"text/plain","size":3},{"uid":"d56af68e4ccad715","name":"Request URL","source":"d56af68e4ccad715.uri","type":"text/uri-list","size":91},{"uid":"3f9cc0ff7353b768","name":"Response Headers (JSON)","source":"3f9cc0ff7353b768.json","type":"application/json","size":309},{"uid":"81dbdecdce4682cc","name":"Response Body (Text)","source":"81dbdecdce4682cc.txt","type":"text/plain","size":48},{"uid":"ce9dc9dc2d73489d","name":"Status response code: 200 (Expected: 400)","source":"ce9dc9dc2d73489d.txt","type":"text/plain","size":3}],"parameters":[{"name":"request_id","value":"'non-existent-efc5b119-5f1d-42c4-b5c2-ed83f8d069ca'"},{"name":"expected_status","value":"400"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":5,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"a908bd0369b42092","name":"log","source":"a908bd0369b42092.txt","type":"text/plain","size":6156},{"uid":"207dba60236f96ff","name":"stderr","source":"207dba60236f96ff.txt","type":"text/plain","size":7078}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":7,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"authenticated_api_req_context::0","time":{"start":1755507066125,"stop":1755507066131,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context::0","time":{"start":1755507066155,"stop":1755507066162,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1755507066164,"stop":1755507066173,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Избранное пользователя (DELETE /api/user/favourites/{id})"},{"name":"story","value":"Удаление из избранного"},{"name":"epic","value":"Управление пользователем"},{"name":"severity","value":"normal"},{"name":"tag","value":"negative"},{"name":"tag","value":"user"},{"name":"parentSuite","value":"tests.user"},{"name":"suite","value":"test_user_api"},{"name":"subSuite","value":"TestUserAPI"},{"name":"host","value":"pkrvmdgpy2b27sr"},{"name":"thread","value":"3-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.user.test_user_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"a6f172f1120d8421","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-efc5b119-5f1d-42c4-b5c2-ed83f8d069ca\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1755507066016,"stop":1755507066040,"duration":24}},{"uid":"c9905cf2a930769b","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-efc5b119-5f1d-42c4-b5c2-ed83f8d069ca\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1755507065960,"stop":1755507065984,"duration":24}},{"uid":"3748d29a81767d73","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-efc5b119-5f1d-42c4-b5c2-ed83f8d069ca\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1755507065887,"stop":1755507065914,"duration":27}},{"uid":"2c2f161a691fe9af","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 500. URL: http://localhost:4040/api/user/favourites/non-existent-efc5b119-5f1d-42c4-b5c2-ed83f8d069ca\nBody of the answer:\nPlanned Server Error","time":{"start":1755507065825,"stop":1755507065850,"duration":25}},{"uid":"1d1444d4bc10cfbe","status":"failed","statusDetails":"Failed: КРИТИЧЕСКАЯ ОШИБКА: He удалось выполнить сессионный логин для пользователя testUser4@test.com. Ошибка: The status was pending 200, but received 500. URL: http://localhost:4040/api/auth\nBody of the answer:\nPlanned Server Error","time":{"start":1755507065707,"stop":1755507065707,"duration":0}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":28,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":28},"items":[{"uid":"ea22e09e6673824f","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/116//#testresult/ea22e09e6673824f","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-61579e09-2078-42db-825e-3d01d4e5610a\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1755422410862,"stop":1755422410885,"duration":23}},{"uid":"6558e3d852343a2c","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/115//#testresult/6558e3d852343a2c","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-061de607-7241-4ee3-958b-ba131b6a63b0\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1755373121502,"stop":1755373121518,"duration":16}},{"uid":"2178dc78265c5af9","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/114//#testresult/2178dc78265c5af9","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-9de5c24c-0ed9-4a09-8d15-699c8f6d0801\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1751392822768,"stop":1751392822793,"duration":25}},{"uid":"ac7bbcc9dd3d532d","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/113//#testresult/ac7bbcc9dd3d532d","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-8f0c2a69-0230-43ef-97eb-33bd8ced84da\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1751391609996,"stop":1751391610021,"duration":25}},{"uid":"5c040bccb9ffd695","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/112//#testresult/5c040bccb9ffd695","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-f822d39f-7a51-4f90-8932-13446a71d621\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1750873350505,"stop":1750873350546,"duration":41}},{"uid":"c16b13c566a1e00a","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/111//#testresult/c16b13c566a1e00a","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-c6bc2882-8ea9-4069-bd68-e91900840764\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1750872840479,"stop":1750872840514,"duration":35}},{"uid":"3a58aa7423ceb373","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/110//#testresult/3a58aa7423ceb373","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-c05a705f-7df5-45a0-a970-62bedd5163f3\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746737425444,"stop":1746737425489,"duration":45}},{"uid":"27351a8d3ada49ba","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/109//#testresult/27351a8d3ada49ba","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-686f4f69-732f-4831-a46b-9fbef682f206\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746737207878,"stop":1746737207927,"duration":49}},{"uid":"ed7f3b5a1615b0fc","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/108//#testresult/ed7f3b5a1615b0fc","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-b8c7baf6-49e4-4676-8bbe-03153cf92ee9\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746559315650,"stop":1746559315688,"duration":38}},{"uid":"c2a9c7c81b013579","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/107//#testresult/c2a9c7c81b013579","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 500. URL: http://localhost:4040/api/user/favourites/non-existent-a3ccbe10-fd9d-4638-b1c2-9ce3a9b61218\nBody of the answer:\nPlanned Server Error","time":{"start":1746559024337,"stop":1746559024376,"duration":39}},{"uid":"acb99f2ea936815e","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/106//#testresult/acb99f2ea936815e","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-b59df773-e6a0-414b-982a-a08afde8264e\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746525759971,"stop":1746525760022,"duration":51}},{"uid":"a95fca99251eb046","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/105//#testresult/a95fca99251eb046","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-7725f22b-b182-4b14-ab06-b1aac038b755\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746525195347,"stop":1746525195418,"duration":71}},{"uid":"783890792e70716b","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/104//#testresult/783890792e70716b","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-63c39c6d-cb8c-46c0-b657-f9e1c7120829\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746488406418,"stop":1746488406456,"duration":38}},{"uid":"25910f4e438b6cf1","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/103//#testresult/25910f4e438b6cf1","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-952d5d02-3f55-418d-b19a-16a085d4733d\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746488160827,"stop":1746488160877,"duration":50}},{"uid":"2723d6a8b001468f","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/102//#testresult/2723d6a8b001468f","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 500. URL: http://localhost:4040/api/user/favourites/non-existent-084a014d-2ffc-4f04-93c8-10197ce3f8ed\nBody of the answer:\nPlanned Server Error","time":{"start":1746487132246,"stop":1746487132290,"duration":44}},{"uid":"e71430775ca7f1a1","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/101//#testresult/e71430775ca7f1a1","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-94e29d06-1c22-455d-9e09-960283c7e6e6\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746486679360,"stop":1746486679402,"duration":42}},{"uid":"96c98fb2ffbbbde9","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/100//#testresult/96c98fb2ffbbbde9","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-889ca45e-dfdf-4c53-adeb-e7659861c34a\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746483621088,"stop":1746483621139,"duration":51}},{"uid":"2632d23e1e6124fa","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/99//#testresult/2632d23e1e6124fa","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-466296bd-6d44-4540-91f9-42184e2aef81\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746483424709,"stop":1746483424743,"duration":34}},{"uid":"ed85e8a88a9235d6","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/98//#testresult/ed85e8a88a9235d6","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-9c5886e2-ce5b-4fd6-99d4-deb92b415b6c\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746482682127,"stop":1746482682162,"duration":35}},{"uid":"8c169e944077177","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/97//#testresult/8c169e944077177","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-0c38e5d7-398f-4029-b89a-31c1d6376928\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746481276073,"stop":1746481276112,"duration":39}}]},"tags":["negative","user"]},"source":"7d47ecb146b0771e.json","parameterValues":[]}