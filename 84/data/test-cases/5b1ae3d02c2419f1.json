{"uid":"5b1ae3d02c2419f1","name":"Тест внесения вклада в несуществующий запрос","fullName":"tests.request.test_request_api.TestRequestAPI#test_contribute_not_found","historyId":"f35ec1402f8fdf4c2858bcd70942d7cb","time":{"start":1746055011709,"stop":1746055011766,"duration":57},"description":"Проверяем получение ошибки 404 при попытке внести вклад в несуществующий запрос.","descriptionHtml":"<p>Проверяем получение ошибки 404 при попытке внести вклад в несуществующий запрос.</p>\n","status":"failed","statusMessage":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-aae13286-df50-47de-ac20-b4014202b984/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","statusTrace":"self = <tests.request.test_request_api.TestRequestAPI object at 0x7f2e5505c7c0>\nrequest_client = <api.request.client.RequestClient object at 0x7f2e54e578c0>\n\n    @allure.feature(\"Вклад в запрос (POST /api/request/{id}/contribution)\")\n    @allure.story(\"Внесение вклада\")\n    @allure.title(\"Тест внесения вклада в несуществующий запрос\")\n    @allure.description(\n        \"Проверяем получение ошибки 404 при попытке внести вклад в несуществующий запрос.\"\n    )\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.negative\n    def test_contribute_not_found(self, request_client: RequestClient) -> None:\n        \"\"\"\n        Проверка внесения вклада для несуществующего запроса.\n    \n        Ожидаемый результат: статус 404 Not Found.\n        \"\"\"\n        logger.info(\n            \"Тест: Внесение вклада в несуществующий запрос (POST /api/request/%s/contribution)\",\n            NON_EXISTENT_REQUEST_ID,\n        )\n>       response = request_client.contribute_to_request(\n            request_id=NON_EXISTENT_REQUEST_ID, expected_status=404\n        )  # type: ignore\n\ntests/request/test_request_api.py:224: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/request/client.py:81: in contribute_to_request\n    processed_response = self._handle_response(response, expected_status)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.request.client.RequestClient object at 0x7f2e54e578c0>\nresponse = <APIResponse url='http://localhost:4040/api/request/non-existent-aae13286-df50-47de-ac20-b4014202b984/contribution' status=403 status_text='Forbidden'>\nexpected_status = 404, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-aae13286-df50-47de-ac20-b4014202b984/contribution\nE       Body of the answer:\nE       {\"message\":\"No token provided.\"}\n\napi/base_api.py:69: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1746055009107,"stop":1746055009108,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1746055009108,"stop":1746055009108,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1746055009108,"stop":1746055009109,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1746055009109,"stop":1746055009109,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1746055009110,"stop":1746055009640,"duration":530},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1746055009640,"stop":1746055009667,"duration":27},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1746055009668,"stop":1746055009668,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"request_client","time":{"start":1746055010091,"stop":1746055010093,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем получение ошибки 404 при попытке внести вклад в несуществующий запрос.","status":"failed","statusMessage":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-aae13286-df50-47de-ac20-b4014202b984/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","statusTrace":"self = <tests.request.test_request_api.TestRequestAPI object at 0x7f2e5505c7c0>\nrequest_client = <api.request.client.RequestClient object at 0x7f2e54e578c0>\n\n    @allure.feature(\"Вклад в запрос (POST /api/request/{id}/contribution)\")\n    @allure.story(\"Внесение вклада\")\n    @allure.title(\"Тест внесения вклада в несуществующий запрос\")\n    @allure.description(\n        \"Проверяем получение ошибки 404 при попытке внести вклад в несуществующий запрос.\"\n    )\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.negative\n    def test_contribute_not_found(self, request_client: RequestClient) -> None:\n        \"\"\"\n        Проверка внесения вклада для несуществующего запроса.\n    \n        Ожидаемый результат: статус 404 Not Found.\n        \"\"\"\n        logger.info(\n            \"Тест: Внесение вклада в несуществующий запрос (POST /api/request/%s/contribution)\",\n            NON_EXISTENT_REQUEST_ID,\n        )\n>       response = request_client.contribute_to_request(\n            request_id=NON_EXISTENT_REQUEST_ID, expected_status=404\n        )  # type: ignore\n\ntests/request/test_request_api.py:224: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/request/client.py:81: in contribute_to_request\n    processed_response = self._handle_response(response, expected_status)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.request.client.RequestClient object at 0x7f2e54e578c0>\nresponse = <APIResponse url='http://localhost:4040/api/request/non-existent-aae13286-df50-47de-ac20-b4014202b984/contribution' status=403 status_text='Forbidden'>\nexpected_status = 404, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-aae13286-df50-47de-ac20-b4014202b984/contribution\nE       Body of the answer:\nE       {\"message\":\"No token provided.\"}\n\napi/base_api.py:69: AssertionError","steps":[{"name":"Внесение вклада в запрос помощи: id='non-existent-aae13286-df50-47de-ac20-b4014202b984'","time":{"start":1746055011709,"stop":1746055011761,"duration":52},"status":"failed","statusMessage":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-aae13286-df50-47de-ac20-b4014202b984/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}\n","statusTrace":"  File \"/app/.venv/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/app/api/request/client.py\", line 81, in contribute_to_request\n    processed_response = self._handle_response(response, expected_status)\n  File \"/app/api/base_api.py\", line 69, in _handle_response\n    assert response.status == expected_status, (\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[{"uid":"dd865fee64751f81","name":"Status Code: 403","source":"dd865fee64751f81.txt","type":"text/plain","size":3},{"uid":"19b78ad9ed933218","name":"Request URL","source":"19b78ad9ed933218.uri","type":"text/uri-list","size":96},{"uid":"2bafd7d7b3cb1093","name":"Response Headers (JSON)","source":"2bafd7d7b3cb1093.json","type":"application/json","size":316},{"uid":"dad815f275775d1d","name":"Response Body (JSON)","source":"dad815f275775d1d.json","type":"application/json","size":39},{"uid":"249b700adfc14659","name":"Status response code: 403 (Expected: 404)","source":"249b700adfc14659.txt","type":"text/plain","size":3}],"parameters":[{"name":"request_id","value":"'non-existent-aae13286-df50-47de-ac20-b4014202b984'"},{"name":"expected_status","value":"404"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":5,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"f6e48462139d0437","name":"log","source":"f6e48462139d0437.txt","type":"text/plain","size":4198},{"uid":"d5660ebad854d7de","name":"stderr","source":"d5660ebad854d7de.txt","type":"text/plain","size":4727}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":7,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"api_request_context::0","time":{"start":1746055012296,"stop":1746055012305,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1746055012306,"stop":1746055012313,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Запросы помощи"},{"name":"feature","value":"Вклад в запрос (POST /api/request/{id}/contribution)"},{"name":"severity","value":"normal"},{"name":"story","value":"Внесение вклада"},{"name":"tag","value":"negative"},{"name":"tag","value":"request"},{"name":"parentSuite","value":"tests.request"},{"name":"suite","value":"test_request_api"},{"name":"subSuite","value":"TestRequestAPI"},{"name":"host","value":"fv-az849-965"},{"name":"thread","value":"3-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.request.test_request_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"7ccb94f5c28e9cdb","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 500. URL: http://localhost:4040/api/request/non-existent-aae13286-df50-47de-ac20-b4014202b984/contribution\nBody of the answer:\nPlanned Server Error","time":{"start":1746055011604,"stop":1746055011672,"duration":68}},{"uid":"ce32280b47b7bebe","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-aae13286-df50-47de-ac20-b4014202b984/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746055011494,"stop":1746055011543,"duration":49}},{"uid":"906b78a778743251","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-aae13286-df50-47de-ac20-b4014202b984/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746055011408,"stop":1746055011461,"duration":53}},{"uid":"b612b51e27b795b6","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-aae13286-df50-47de-ac20-b4014202b984/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746055011321,"stop":1746055011377,"duration":56}},{"uid":"5088483eb4daf56b","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-aae13286-df50-47de-ac20-b4014202b984/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746055011239,"stop":1746055011291,"duration":52}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":14},"items":[{"uid":"bf9e8228a0d54887","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/83//#testresult/bf9e8228a0d54887","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-91d666b0-d3f6-4123-9b9c-f94657764eb6/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746054725056,"stop":1746054725110,"duration":54}},{"uid":"5da387ebf1cc6a4c","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/82//#testresult/5da387ebf1cc6a4c","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-ba25bbf5-7db8-4d11-a0b4-34b3e8ac7d0f/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746054188036,"stop":1746054188092,"duration":56}},{"uid":"84e8beeec1108de5","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/81//#testresult/84e8beeec1108de5","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-5bd7d394-0f11-4502-b049-8a8f13c294de/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745969593026,"stop":1745969593082,"duration":56}},{"uid":"92431e379914ba2c","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/80//#testresult/92431e379914ba2c","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 500. URL: http://localhost:4040/api/request/non-existent-8905b137-bb29-4825-ac8d-f0a2425686f2/contribution\nBody of the answer:\nPlanned Server Error","time":{"start":1745946046265,"stop":1745946046334,"duration":69}},{"uid":"2e1397789ce67213","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/79//#testresult/2e1397789ce67213","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-4536c2cd-7188-44d6-8e7b-d5206df337a8/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745348186189,"stop":1745348186244,"duration":55}},{"uid":"b3fbaafd2b2231ca","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/78//#testresult/b3fbaafd2b2231ca","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-41e54804-cf4e-426c-8af5-24678f298559/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745347897395,"stop":1745347897450,"duration":55}},{"uid":"61c7f7eb6727faf5","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/77//#testresult/61c7f7eb6727faf5","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-18316f21-ad27-4ebb-a329-e5600c688a98/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745347099111,"stop":1745347099171,"duration":60}},{"uid":"f3b8d39a69c551f","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/76//#testresult/f3b8d39a69c551f","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-0bd7bacc-2cdd-430a-b08e-5277de767620/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745331970180,"stop":1745331970233,"duration":53}},{"uid":"8aec7ca157dcf31f","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/75//#testresult/8aec7ca157dcf31f","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-a51f303b-cac4-44b3-8199-4d4eb4b4acdf/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745298267238,"stop":1745298267313,"duration":75}},{"uid":"67a5328aadada382","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/74//#testresult/67a5328aadada382","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-9baef73d-5d88-47e2-b02b-c57853f86bb6/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745297841348,"stop":1745297841447,"duration":99}},{"uid":"e1546cb8b5daadb3","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/73//#testresult/e1546cb8b5daadb3","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-ae045dcc-40f9-4f29-bb67-a452170db081/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745297610948,"stop":1745297611000,"duration":52}},{"uid":"69c4310355ded1d8","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/72//#testresult/69c4310355ded1d8","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-643ee0a5-60fa-4ab4-9459-eb69a800cea5/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745297411853,"stop":1745297411914,"duration":61}},{"uid":"3ed09ee8d0464ff6","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/71//#testresult/3ed09ee8d0464ff6","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-8b6dad72-ea63-4f88-804b-b1ad8ede96e3/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745297305664,"stop":1745297305716,"duration":52}}]},"tags":["request","negative"]},"source":"5b1ae3d02c2419f1.json","parameterValues":[]}