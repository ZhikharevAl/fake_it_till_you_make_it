{"uid":"826c61ee58fbf95e","name":"Тест неуспешного входа: Отсутствует поле login","fullName":"tests.auth.test_auth_api.TestAuthenticationAPI#test_login_malformed_payload","historyId":"189451d03a7bcf402ee0bcdda1148ed8","time":{"start":1750872838343,"stop":1750872838385,"duration":42},"description":"Проверяем, что API возвращает 400 при отправке некорректного тела: Отсутствует поле login","descriptionHtml":"<p>Проверяем, что API возвращает 400 при отправке некорректного тела: Отсутствует поле login</p>\n","status":"failed","statusMessage":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","statusTrace":"self = <tests.auth.test_auth_api.TestAuthenticationAPI object at 0x7f76100eed50>\nauth_client = <api.auth.client.AuthClient object at 0x7f760b8746e0>\npayload_dict = {'password': 'password4'}, expected_status = 400\ndescription = 'Отсутствует поле login'\n\n    @allure.story(\"Неуспешный вход - Некорректное тело запроса\")\n    @allure.title(\"Тест неуспешного входа: {description}\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.negative\n    @pytest.mark.parametrize(\n        (\"payload_dict\", \"expected_status\", \"description\"),\n        [\n            pytest.param(\n                {\"login\": TEST_USER_LOGIN},\n                400,\n                \"Отсутствует поле password\",\n                id=\"missing_password\",\n            ),\n            pytest.param(\n                {\"password\": TEST_USER_PASSWORD},\n                400,\n                \"Отсутствует поле login\",\n                id=\"missing_login\",\n            ),\n            pytest.param({}, 400, \"Пустое тело запроса\", id=\"empty_payload_400\"),\n            pytest.param(\n                {\"login\": \"\", \"password\": TEST_USER_PASSWORD},\n                400,\n                \"Пустая строка в поле login\",\n                id=\"empty_login_str_400\",\n            ),\n            pytest.param(\n                {\"login\": TEST_USER_LOGIN, \"password\": \"\"},\n                400,\n                \"Пустая строка в поле password\",\n                id=\"empty_pass_str\",\n            ),\n            pytest.param(\n                {\"login\": \"не email\", \"password\": TEST_USER_PASSWORD},\n                400,\n                \"Некорректный формат login (не email)\",\n                id=\"bad_login_format\",\n            ),\n        ],\n    )\n    def test_login_malformed_payload(\n        self,\n        auth_client: AuthClient,\n        payload_dict: dict[str, str | None],\n        expected_status: int,\n        description: str,\n    ) -> None:\n        \"\"\"\n        Проверка реакции API на некорректно сформированное тело запроса.\n    \n        Ожидаемый результат: код состояния 400 Bad Request.\n        \"\"\"\n        allure.dynamic.description(\n            f\"Проверяем, что API возвращает {expected_status} при отправке некорректного тела: \"\n            f\"{description}\"\n        )\n        logger.info(\"Тест: %s\", description)\n        endpoint = APIEndpoints.AUTH\n        response = auth_client.http.post(endpoint=str(endpoint), json=payload_dict)\n>       assert response.status == expected_status, (\n            f\"Ожидался статус {expected_status}, но получен {response.status}. \"\n            f\"Тело: {response.text()}\"\n        )\nE       AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nE       assert 403 == 400\nE        +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status\n\ntests/auth/test_auth_api.py:137: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1750872837457,"stop":1750872837458,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1750872837458,"stop":1750872837458,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1750872837458,"stop":1750872837458,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1750872837459,"stop":1750872837459,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1750872837459,"stop":1750872837944,"duration":485},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1750872837945,"stop":1750872837969,"duration":24},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1750872837969,"stop":1750872837969,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_client","time":{"start":1750872837970,"stop":1750872837970,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем, что API возвращает 400 при отправке некорректного тела: Отсутствует поле login","status":"failed","statusMessage":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","statusTrace":"self = <tests.auth.test_auth_api.TestAuthenticationAPI object at 0x7f76100eed50>\nauth_client = <api.auth.client.AuthClient object at 0x7f760b8746e0>\npayload_dict = {'password': 'password4'}, expected_status = 400\ndescription = 'Отсутствует поле login'\n\n    @allure.story(\"Неуспешный вход - Некорректное тело запроса\")\n    @allure.title(\"Тест неуспешного входа: {description}\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.negative\n    @pytest.mark.parametrize(\n        (\"payload_dict\", \"expected_status\", \"description\"),\n        [\n            pytest.param(\n                {\"login\": TEST_USER_LOGIN},\n                400,\n                \"Отсутствует поле password\",\n                id=\"missing_password\",\n            ),\n            pytest.param(\n                {\"password\": TEST_USER_PASSWORD},\n                400,\n                \"Отсутствует поле login\",\n                id=\"missing_login\",\n            ),\n            pytest.param({}, 400, \"Пустое тело запроса\", id=\"empty_payload_400\"),\n            pytest.param(\n                {\"login\": \"\", \"password\": TEST_USER_PASSWORD},\n                400,\n                \"Пустая строка в поле login\",\n                id=\"empty_login_str_400\",\n            ),\n            pytest.param(\n                {\"login\": TEST_USER_LOGIN, \"password\": \"\"},\n                400,\n                \"Пустая строка в поле password\",\n                id=\"empty_pass_str\",\n            ),\n            pytest.param(\n                {\"login\": \"не email\", \"password\": TEST_USER_PASSWORD},\n                400,\n                \"Некорректный формат login (не email)\",\n                id=\"bad_login_format\",\n            ),\n        ],\n    )\n    def test_login_malformed_payload(\n        self,\n        auth_client: AuthClient,\n        payload_dict: dict[str, str | None],\n        expected_status: int,\n        description: str,\n    ) -> None:\n        \"\"\"\n        Проверка реакции API на некорректно сформированное тело запроса.\n    \n        Ожидаемый результат: код состояния 400 Bad Request.\n        \"\"\"\n        allure.dynamic.description(\n            f\"Проверяем, что API возвращает {expected_status} при отправке некорректного тела: \"\n            f\"{description}\"\n        )\n        logger.info(\"Тест: %s\", description)\n        endpoint = APIEndpoints.AUTH\n        response = auth_client.http.post(endpoint=str(endpoint), json=payload_dict)\n>       assert response.status == expected_status, (\n            f\"Ожидался статус {expected_status}, но получен {response.status}. \"\n            f\"Тело: {response.text()}\"\n        )\nE       AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nE       assert 403 == 400\nE        +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status\n\ntests/auth/test_auth_api.py:137: AssertionError","steps":[],"attachments":[{"uid":"a9951ffd54341ef2","name":"Status Code: 403","source":"a9951ffd54341ef2.txt","type":"text/plain","size":3},{"uid":"6e6f8ee636ee3734","name":"Request URL","source":"6e6f8ee636ee3734.uri","type":"text/uri-list","size":39},{"uid":"a398065e2983927c","name":"Response Headers (JSON)","source":"a398065e2983927c.json","type":"application/json","size":316},{"uid":"78f91c07bc71df47","name":"Response Body (JSON)","source":"78f91c07bc71df47.json","type":"application/json","size":39},{"uid":"4a95962fc0ac8580","name":"log","source":"4a95962fc0ac8580.txt","type":"text/plain","size":2395},{"uid":"eb6dfebf18c39d5b","name":"stderr","source":"eb6dfebf18c39d5b.txt","type":"text/plain","size":2906}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"api_request_context::0","time":{"start":1750872840218,"stop":1750872840232,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1750872840232,"stop":1750872840244,"duration":12},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"normal"},{"name":"story","value":"Неуспешный вход - Некорректное тело запроса"},{"name":"epic","value":"Аутентификация"},{"name":"feature","value":"Вход пользователя (POST /api/auth)"},{"name":"tag","value":"negative"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests.auth"},{"name":"suite","value":"test_auth_api"},{"name":"subSuite","value":"TestAuthenticationAPI"},{"name":"host","value":"pkrvmfw4aktn2gb"},{"name":"thread","value":"9-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.auth.test_auth_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"description","value":"'Отсутствует поле login'"},{"name":"expected_status","value":"400"},{"name":"payload_dict","value":"{'password': 'password4'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4b682442a334a155","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1750872838288,"stop":1750872838322,"duration":34}},{"uid":"7ee9ed22fb4c054c","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1750872838232,"stop":1750872838266,"duration":34}},{"uid":"571248f8392ed62d","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 500. Тело: Planned Server Error\nassert 500 == 400\n +  where 500 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=500 status_text='Internal Server Error'>.status","time":{"start":1750872838156,"stop":1750872838211,"duration":55}},{"uid":"355c8591a21658f7","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 500. Тело: Planned Server Error\nassert 500 == 400\n +  where 500 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=500 status_text='Internal Server Error'>.status","time":{"start":1750872838076,"stop":1750872838134,"duration":58}},{"uid":"505b285af3f87dc2","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1750872837972,"stop":1750872838049,"duration":77}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":22,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":22},"items":[{"uid":"9b27d9d5d8ee7bd1","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/110//#testresult/9b27d9d5d8ee7bd1","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1746737422855,"stop":1746737422908,"duration":53}},{"uid":"2d190862ddeafaea","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/109//#testresult/2d190862ddeafaea","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1746737205342,"stop":1746737205389,"duration":47}},{"uid":"86ee10346b5cebb4","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/108//#testresult/86ee10346b5cebb4","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1746559313050,"stop":1746559313106,"duration":56}},{"uid":"710d7b6fdbd28cf7","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/107//#testresult/710d7b6fdbd28cf7","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1746559021893,"stop":1746559021947,"duration":54}},{"uid":"2c5b7184c2e83fa0","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/106//#testresult/2c5b7184c2e83fa0","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1746525757313,"stop":1746525757362,"duration":49}},{"uid":"6687afcccc6472a0","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/105//#testresult/6687afcccc6472a0","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1746525193143,"stop":1746525193196,"duration":53}},{"uid":"ad712e30d5c9f650","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/104//#testresult/ad712e30d5c9f650","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 500. Тело: Planned Server Error\nassert 500 == 400\n +  where 500 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=500 status_text='Internal Server Error'>.status","time":{"start":1746488403778,"stop":1746488403830,"duration":52}},{"uid":"ebce5bc33aba02e9","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/103//#testresult/ebce5bc33aba02e9","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1746488158273,"stop":1746488158317,"duration":44}},{"uid":"be65c9171d31aeb7","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/102//#testresult/be65c9171d31aeb7","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1746487129810,"stop":1746487129854,"duration":44}},{"uid":"5b644bf7da1694b","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/101//#testresult/5b644bf7da1694b","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1746486676921,"stop":1746486676974,"duration":53}},{"uid":"248157aa8d8eab1f","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/100//#testresult/248157aa8d8eab1f","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1746483618497,"stop":1746483618553,"duration":56}},{"uid":"69fb24dc0bae4d10","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/99//#testresult/69fb24dc0bae4d10","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1746483423950,"stop":1746483423973,"duration":23}},{"uid":"34a0554349402acb","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/98//#testresult/34a0554349402acb","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1746482681256,"stop":1746482681281,"duration":25}},{"uid":"f9e0084bb1991a68","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/97//#testresult/f9e0084bb1991a68","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1746481273679,"stop":1746481273732,"duration":53}},{"uid":"bab5f565c0bfebac","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/96//#testresult/bab5f565c0bfebac","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1746479136041,"stop":1746479136095,"duration":54}},{"uid":"11a3378dfa2ffd40","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/95//#testresult/11a3378dfa2ffd40","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1746478917816,"stop":1746478917839,"duration":23}},{"uid":"b4bf5f26f41ea3a3","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/94//#testresult/b4bf5f26f41ea3a3","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1746398525565,"stop":1746398525617,"duration":52}},{"uid":"f44c450160065251","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/93//#testresult/f44c450160065251","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1746398345232,"stop":1746398345284,"duration":52}},{"uid":"c12316fcb615f44d","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/92//#testresult/c12316fcb615f44d","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1746398073445,"stop":1746398073469,"duration":24}},{"uid":"ae88c44b65255999","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/91//#testresult/ae88c44b65255999","status":"failed","statusDetails":"AssertionError: Ожидался статус 400, но получен 403. Тело: {\"message\":\"No token provided.\"}\nassert 403 == 400\n +  where 403 = <APIResponse url='http://localhost:4040/APIEndpoints.AUTH' status=403 status_text='Forbidden'>.status","time":{"start":1746395041940,"stop":1746395041990,"duration":50}}]},"tags":["negative","auth"]},"source":"826c61ee58fbf95e.json","parameterValues":["'Отсутствует поле login'","400","{'password': 'password4'}"]}