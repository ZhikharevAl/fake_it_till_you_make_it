{"uid":"9411c1afa0f3ddda","name":"Тест успешного получения данных пользователя","fullName":"tests.user.test_user_api.TestUserAPI#test_get_user_info_success","historyId":"ce00374a95389d718a8d728c79e283b3","time":{"start":1750872840075,"stop":1750872840115,"duration":40},"description":"Проверяем получение данных профиля для аутентифицированного пользователя.","descriptionHtml":"<p>Проверяем получение данных профиля для аутентифицированного пользователя.</p>\n","status":"failed","statusMessage":"AssertionError: assert 'Центральный коммуникационный помощник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Центральный коммуникационный помощник","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f427c88d810>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f427c197650>\n\n    @allure.feature(\"Профиль пользователя (GET /api/user)\")\n    @allure.story(\"Получение профиля\")\n    @allure.title(\"Тест успешного получения данных пользователя\")\n    @allure.description(\"Проверяем получение данных профиля для аутентифицированного пользователя.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    def test_get_user_info_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного получения информации o текущем пользователе.\n    \n        Ожидаемый результат: статус 200 и валидные данные пользователя.\n        \"\"\"\n        logger.info(\"Тест: Успешное получение данных пользователя (GET /api/user)\")\n        response = authenticated_user_client.get_user_info(expected_status=200)  # type: ignore\n    \n        with allure.step(\"Проверка данных пользователя\"):  # type: ignore\n            assert isinstance(response, UserDataResponse), \"Ответ должен быть типа UserDataResponse\"\n            assert response.id is not None, \"Поле 'id' пользователя не должно быть пустым\"\n            assert isinstance(response.id, str), \"Поле 'id' пользователя должно быть типа str\"\n            assert len(response.base_locations) == 2\n    \n            education = response.educations[0]\n            assert education is not None\n            assert education.model_dump(by_alias=True)[\"organizationName\"] == \"НПГУ ДПИ\"\n            assert education.model_dump(by_alias=True)[\"level\"] == \"Высшее\"\n>           assert (\n                education.model_dump(by_alias=True)[\"specialization\"]\n                == \"Районный маркетинговый администратор\"\n            )\nE           AssertionError: assert 'Центральный коммуникационный помощник' == 'Районный маркетинговый администратор'\nE             \nE             - Районный маркетинговый администратор\nE             + Центральный коммуникационный помощник\n\ntests/user/test_user_api.py:48: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1750872837457,"stop":1750872837458,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1750872837458,"stop":1750872837458,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1750872837459,"stop":1750872837459,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1750872837459,"stop":1750872837958,"duration":499},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1750872837459,"stop":1750872837459,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1750872837958,"stop":1750872837984,"duration":26},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1750872837984,"stop":1750872837984,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_client","time":{"start":1750872837984,"stop":1750872837985,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_token","time":{"start":1750872839382,"stop":1750872839481,"duration":99},"status":"passed","steps":[],"attachments":[{"uid":"8655a70034413464","name":"Status Code: 200","source":"8655a70034413464.txt","type":"text/plain","size":3},{"uid":"ee5054e8c1a8c18","name":"Request URL","source":"ee5054e8c1a8c18.uri","type":"text/uri-list","size":30},{"uid":"d4f4dc5e2e4651e5","name":"Response Headers (JSON)","source":"d4f4dc5e2e4651e5.json","type":"application/json","size":317},{"uid":"8afca0ace8e1485c","name":"Response Body (JSON)","source":"8afca0ace8e1485c.json","type":"application/json","size":224},{"uid":"6653152015cfa1fa","name":"Status response code: 200 (Expected: 200)","source":"6653152015cfa1fa.txt","type":"text/plain","size":3},{"uid":"7893e6d5d5c0ea6b","name":"Body of the answer (failed by AuthSuccessResponse)","source":"7893e6d5d5c0ea6b.json","type":"application/json","size":220}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"authenticated_api_req_context","time":{"start":1750872840064,"stop":1750872840074,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_http_client","time":{"start":1750872840074,"stop":1750872840074,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_user_client","time":{"start":1750872840074,"stop":1750872840074,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем получение данных профиля для аутентифицированного пользователя.","status":"failed","statusMessage":"AssertionError: assert 'Центральный коммуникационный помощник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Центральный коммуникационный помощник","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f427c88d810>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f427c197650>\n\n    @allure.feature(\"Профиль пользователя (GET /api/user)\")\n    @allure.story(\"Получение профиля\")\n    @allure.title(\"Тест успешного получения данных пользователя\")\n    @allure.description(\"Проверяем получение данных профиля для аутентифицированного пользователя.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    def test_get_user_info_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного получения информации o текущем пользователе.\n    \n        Ожидаемый результат: статус 200 и валидные данные пользователя.\n        \"\"\"\n        logger.info(\"Тест: Успешное получение данных пользователя (GET /api/user)\")\n        response = authenticated_user_client.get_user_info(expected_status=200)  # type: ignore\n    \n        with allure.step(\"Проверка данных пользователя\"):  # type: ignore\n            assert isinstance(response, UserDataResponse), \"Ответ должен быть типа UserDataResponse\"\n            assert response.id is not None, \"Поле 'id' пользователя не должно быть пустым\"\n            assert isinstance(response.id, str), \"Поле 'id' пользователя должно быть типа str\"\n            assert len(response.base_locations) == 2\n    \n            education = response.educations[0]\n            assert education is not None\n            assert education.model_dump(by_alias=True)[\"organizationName\"] == \"НПГУ ДПИ\"\n            assert education.model_dump(by_alias=True)[\"level\"] == \"Высшее\"\n>           assert (\n                education.model_dump(by_alias=True)[\"specialization\"]\n                == \"Районный маркетинговый администратор\"\n            )\nE           AssertionError: assert 'Центральный коммуникационный помощник' == 'Районный маркетинговый администратор'\nE             \nE             - Районный маркетинговый администратор\nE             + Центральный коммуникационный помощник\n\ntests/user/test_user_api.py:48: AssertionError","steps":[{"name":"Получение данных текущего пользователя","time":{"start":1750872840075,"stop":1750872840114,"duration":39},"status":"passed","steps":[],"attachments":[{"uid":"5bf4d36b067a3b7a","name":"Status Code: 200","source":"5bf4d36b067a3b7a.txt","type":"text/plain","size":3},{"uid":"c8231a0204ce4239","name":"Request URL","source":"c8231a0204ce4239.uri","type":"text/uri-list","size":30},{"uid":"b06e8041b3f78c25","name":"Response Headers (JSON)","source":"b06e8041b3f78c25.json","type":"application/json","size":318},{"uid":"f7a1567fef2c2d28","name":"Response Body (JSON)","source":"f7a1567fef2c2d28.json","type":"application/json","size":1260},{"uid":"a89c826602040f0f","name":"Status response code: 200 (Expected: 200)","source":"a89c826602040f0f.txt","type":"text/plain","size":3},{"uid":"722dfa4dfcd6e023","name":"Body of the answer (failed by UserDataResponse)","source":"722dfa4dfcd6e023.json","type":"application/json","size":1113}],"parameters":[{"name":"expected_status","value":"200"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"Проверка данных пользователя","time":{"start":1750872840114,"stop":1750872840114,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 'Центральный коммуникационный помощник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Центральный коммуникационный помощник\n","statusTrace":"  File \"/app/tests/user/test_user_api.py\", line 48, in test_get_user_info_success\n    assert (\n    ...<2 lines>...\n    )\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"fa0338c1bdf7252a","name":"log","source":"fa0338c1bdf7252a.txt","type":"text/plain","size":4811},{"uid":"ea6c136842be873f","name":"stderr","source":"ea6c136842be873f.txt","type":"text/plain","size":5700}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":8,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"authenticated_api_req_context::0","time":{"start":1750872840127,"stop":1750872840140,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context::0","time":{"start":1750872840524,"stop":1750872840531,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1750872840532,"stop":1750872840541,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"critical"},{"name":"epic","value":"Управление пользователем"},{"name":"story","value":"Получение профиля"},{"name":"feature","value":"Профиль пользователя (GET /api/user)"},{"name":"tag","value":"positive"},{"name":"tag","value":"smoke"},{"name":"tag","value":"user"},{"name":"parentSuite","value":"tests.user"},{"name":"suite","value":"test_user_api"},{"name":"subSuite","value":"TestUserAPI"},{"name":"host","value":"pkrvmfw4aktn2gb"},{"name":"thread","value":"6-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.user.test_user_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[{"uid":"ea0f2533b3b5b317","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1750872839926,"stop":1750872840023,"duration":97}},{"uid":"e2ef7be656e04d32","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1750872839800,"stop":1750872839877,"duration":77}},{"uid":"f6d9fbb0de7d087a","status":"failed","statusDetails":"AssertionError: assert 'Центральный коммуникационный помощник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Центральный коммуникационный помощник","time":{"start":1750872839708,"stop":1750872839755,"duration":47}},{"uid":"84542c9fa4942b11","status":"failed","statusDetails":"AssertionError: assert 'Центральный коммуникационный помощник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Центральный коммуникационный помощник","time":{"start":1750872839605,"stop":1750872839654,"duration":49}},{"uid":"4c184fce8d6473fb","status":"failed","statusDetails":"AssertionError: assert 'Центральный коммуникационный помощник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Центральный коммуникационный помощник","time":{"start":1750872839497,"stop":1750872839552,"duration":55}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":22,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":22},"items":[{"uid":"f3ee62caaa17f5fc","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/110//#testresult/f3ee62caaa17f5fc","status":"failed","statusDetails":"AssertionError: assert 'Глобальный операционный специалист' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Глобальный операционный специалист","time":{"start":1746737424779,"stop":1746737424821,"duration":42}},{"uid":"ed1a84ecc09fec88","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/109//#testresult/ed1a84ecc09fec88","status":"failed","statusDetails":"AssertionError: assert 'Генеральный маркетинговый координатор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Генеральный маркетинговый координатор","time":{"start":1746737207048,"stop":1746737207111,"duration":63}},{"uid":"640d2052559fabad","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/108//#testresult/640d2052559fabad","status":"failed","statusDetails":"AssertionError: assert 'Международный страховой координатор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Международный страховой координатор","time":{"start":1746559314966,"stop":1746559315044,"duration":78}},{"uid":"334ef4e99dacf7f5","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/107//#testresult/334ef4e99dacf7f5","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746559023797,"stop":1746559023880,"duration":83}},{"uid":"bbf6b0c25d5871a3","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/106//#testresult/bbf6b0c25d5871a3","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746525759252,"stop":1746525759354,"duration":102}},{"uid":"5357f3d3632726d0","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/105//#testresult/5357f3d3632726d0","status":"failed","statusDetails":"AssertionError: assert 'Главный интеграционный архитектор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Главный интеграционный архитектор","time":{"start":1746525194991,"stop":1746525195043,"duration":52}},{"uid":"4bb61d10673823f4","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/104//#testresult/4bb61d10673823f4","status":"failed","statusDetails":"AssertionError: assert 'Областной коммуникационный планировщик' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Областной коммуникационный планировщик","time":{"start":1746488405636,"stop":1746488405721,"duration":85}},{"uid":"d4dbf3eb79d2c6be","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/103//#testresult/d4dbf3eb79d2c6be","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746488160077,"stop":1746488160159,"duration":82}},{"uid":"159172343eafbd6a","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/102//#testresult/159172343eafbd6a","status":"failed","statusDetails":"AssertionError: assert 'Главный страховой планировщик' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Главный страховой планировщик","time":{"start":1746487131682,"stop":1746487131731,"duration":49}},{"uid":"37c6e658a411c07f","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/101//#testresult/37c6e658a411c07f","status":"failed","statusDetails":"AssertionError: assert 'Глобальный функциональный руководитель' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Глобальный функциональный руководитель","time":{"start":1746486678720,"stop":1746486678803,"duration":83}},{"uid":"6729fe67fa8f743","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/100//#testresult/6729fe67fa8f743","status":"failed","statusDetails":"AssertionError: assert 'Региональный функциональный консультант' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Региональный функциональный консультант","time":{"start":1746483620523,"stop":1746483620585,"duration":62}},{"uid":"5b56549d87dd098d","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/99//#testresult/5b56549d87dd098d","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746483424514,"stop":1746483424544,"duration":30}},{"uid":"586d2b992fdb5923","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/98//#testresult/586d2b992fdb5923","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746482681888,"stop":1746482681921,"duration":33}},{"uid":"e949e12418d05abc","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/97//#testresult/e949e12418d05abc","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746481275566,"stop":1746481275618,"duration":52}},{"uid":"72f843ca9d8b82d8","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/96//#testresult/72f843ca9d8b82d8","status":"failed","statusDetails":"AssertionError: assert 'Международный операционный инженер' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Международный операционный инженер","time":{"start":1746479137925,"stop":1746479138019,"duration":94}},{"uid":"fcc3bc3e66e77b42","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/95//#testresult/fcc3bc3e66e77b42","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746478918404,"stop":1746478918435,"duration":31}},{"uid":"aa3eb924cdd2cf45","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/94//#testresult/aa3eb924cdd2cf45","status":"failed","statusDetails":"AssertionError: assert 'Глобальный маркетинговый помощник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Глобальный маркетинговый помощник","time":{"start":1746398527168,"stop":1746398527231,"duration":63}},{"uid":"2c69d942ec7a841e","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/93//#testresult/2c69d942ec7a841e","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746398347046,"stop":1746398347117,"duration":71}},{"uid":"14d7638bb35e689a","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/92//#testresult/14d7638bb35e689a","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746398074041,"stop":1746398074073,"duration":32}},{"uid":"16abdc1663c192","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/91//#testresult/16abdc1663c192","status":"failed","statusDetails":"AssertionError: assert 'Региональный маркетинговый аналитик' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Региональный маркетинговый аналитик","time":{"start":1746395043852,"stop":1746395043910,"duration":58}}]},"tags":["smoke","positive","user"]},"source":"9411c1afa0f3ddda.json","parameterValues":[]}