{"uid":"b3fbaafd2b2231ca","name":"Тест внесения вклада в несуществующий запрос","fullName":"tests.request.test_request_api.TestRequestAPI#test_contribute_not_found","historyId":"f35ec1402f8fdf4c2858bcd70942d7cb","time":{"start":1745347897395,"stop":1745347897450,"duration":55},"description":"Проверяем получение ошибки 404 при попытке внести вклад в несуществующий запрос.","descriptionHtml":"<p>Проверяем получение ошибки 404 при попытке внести вклад в несуществующий запрос.</p>\n","status":"failed","statusMessage":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-41e54804-cf4e-426c-8af5-24678f298559/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","statusTrace":"self = <tests.request.test_request_api.TestRequestAPI object at 0x7f74d5e74e20>\nrequest_client = <api.request.client.RequestClient object at 0x7f74d5d8dd30>\n\n    @allure.feature(\"Вклад в запрос (POST /api/request/{id}/contribution)\")\n    @allure.story(\"Внесение вклада\")\n    @allure.title(\"Тест внесения вклада в несуществующий запрос\")\n    @allure.description(\n        \"Проверяем получение ошибки 404 при попытке внести вклад в несуществующий запрос.\"\n    )\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.negative\n    def test_contribute_not_found(self, request_client: RequestClient) -> None:\n        \"\"\"\n        Проверка внесения вклада для несуществующего запроса.\n    \n        Ожидаемый результат: статус 404 Not Found.\n        \"\"\"\n        logger.info(\n            \"Тест: Внесение вклада в несуществующий запрос (POST /api/request/%s/contribution)\",\n            NON_EXISTENT_REQUEST_ID,\n        )\n>       response = request_client.contribute_to_request(\n            request_id=NON_EXISTENT_REQUEST_ID, expected_status=404\n        )  # type: ignore\n\ntests/request/test_request_api.py:224: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/request/client.py:81: in contribute_to_request\n    processed_response = self._handle_response(response, expected_status)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.request.client.RequestClient object at 0x7f74d5d8dd30>\nresponse = <APIResponse url='http://localhost:4040/api/request/non-existent-41e54804-cf4e-426c-8af5-24678f298559/contribution' status=403 status_text='Forbidden'>\nexpected_status = 404, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-41e54804-cf4e-426c-8af5-24678f298559/contribution\nE       Body of the answer:\nE       {\"message\":\"No token provided.\"}\n\napi/base_api.py:69: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1745347894426,"stop":1745347894426,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1745347894427,"stop":1745347894427,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1745347894427,"stop":1745347894427,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1745347894427,"stop":1745347894427,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1745347894428,"stop":1745347894863,"duration":435},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1745347894863,"stop":1745347894890,"duration":27},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1745347894890,"stop":1745347894891,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"request_client","time":{"start":1745347896270,"stop":1745347896271,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем получение ошибки 404 при попытке внести вклад в несуществующий запрос.","status":"failed","statusMessage":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-41e54804-cf4e-426c-8af5-24678f298559/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","statusTrace":"self = <tests.request.test_request_api.TestRequestAPI object at 0x7f74d5e74e20>\nrequest_client = <api.request.client.RequestClient object at 0x7f74d5d8dd30>\n\n    @allure.feature(\"Вклад в запрос (POST /api/request/{id}/contribution)\")\n    @allure.story(\"Внесение вклада\")\n    @allure.title(\"Тест внесения вклада в несуществующий запрос\")\n    @allure.description(\n        \"Проверяем получение ошибки 404 при попытке внести вклад в несуществующий запрос.\"\n    )\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.negative\n    def test_contribute_not_found(self, request_client: RequestClient) -> None:\n        \"\"\"\n        Проверка внесения вклада для несуществующего запроса.\n    \n        Ожидаемый результат: статус 404 Not Found.\n        \"\"\"\n        logger.info(\n            \"Тест: Внесение вклада в несуществующий запрос (POST /api/request/%s/contribution)\",\n            NON_EXISTENT_REQUEST_ID,\n        )\n>       response = request_client.contribute_to_request(\n            request_id=NON_EXISTENT_REQUEST_ID, expected_status=404\n        )  # type: ignore\n\ntests/request/test_request_api.py:224: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/request/client.py:81: in contribute_to_request\n    processed_response = self._handle_response(response, expected_status)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.request.client.RequestClient object at 0x7f74d5d8dd30>\nresponse = <APIResponse url='http://localhost:4040/api/request/non-existent-41e54804-cf4e-426c-8af5-24678f298559/contribution' status=403 status_text='Forbidden'>\nexpected_status = 404, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-41e54804-cf4e-426c-8af5-24678f298559/contribution\nE       Body of the answer:\nE       {\"message\":\"No token provided.\"}\n\napi/base_api.py:69: AssertionError","steps":[{"name":"Внесение вклада в запрос помощи: id='non-existent-41e54804-cf4e-426c-8af5-24678f298559'","time":{"start":1745347897396,"stop":1745347897449,"duration":53},"status":"failed","statusMessage":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-41e54804-cf4e-426c-8af5-24678f298559/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}\n","statusTrace":"  File \"/app/.venv/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/app/api/request/client.py\", line 81, in contribute_to_request\n    processed_response = self._handle_response(response, expected_status)\n  File \"/app/api/base_api.py\", line 69, in _handle_response\n    assert response.status == expected_status, (\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[{"uid":"53179ab6cea085bf","name":"Status Code: 403","source":"53179ab6cea085bf.txt","type":"text/plain","size":3},{"uid":"52c7dadcb7d449b5","name":"Request URL","source":"52c7dadcb7d449b5.uri","type":"text/uri-list","size":96},{"uid":"2a06fd5d2f7261db","name":"Response Headers (JSON)","source":"2a06fd5d2f7261db.json","type":"application/json","size":316},{"uid":"8c6d9f98c2e20498","name":"Response Body (JSON)","source":"8c6d9f98c2e20498.json","type":"application/json","size":39},{"uid":"8cd480e750948a5a","name":"Status response code: 403 (Expected: 404)","source":"8cd480e750948a5a.txt","type":"text/plain","size":3}],"parameters":[{"name":"request_id","value":"'non-existent-41e54804-cf4e-426c-8af5-24678f298559'"},{"name":"expected_status","value":"404"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":5,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"c31457137a4fb388","name":"log","source":"c31457137a4fb388.txt","type":"text/plain","size":4061},{"uid":"5f4fa1f47cebda0a","name":"stderr","source":"5f4fa1f47cebda0a.txt","type":"text/plain","size":4566}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":7,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"api_request_context::0","time":{"start":1745347898616,"stop":1745347898624,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1745347898625,"stop":1745347898632,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Запросы помощи"},{"name":"severity","value":"normal"},{"name":"story","value":"Внесение вклада"},{"name":"feature","value":"Вклад в запрос (POST /api/request/{id}/contribution)"},{"name":"tag","value":"negative"},{"name":"tag","value":"request"},{"name":"parentSuite","value":"tests.request"},{"name":"suite","value":"test_request_api"},{"name":"subSuite","value":"TestRequestAPI"},{"name":"host","value":"fv-az1240-390"},{"name":"thread","value":"3-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.request.test_request_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"cdf6208b330ebcf9","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-41e54804-cf4e-426c-8af5-24678f298559/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745347897305,"stop":1745347897360,"duration":55}},{"uid":"67ad2c107262e28d","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-41e54804-cf4e-426c-8af5-24678f298559/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745347897216,"stop":1745347897269,"duration":53}},{"uid":"e245c5428b55942a","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-41e54804-cf4e-426c-8af5-24678f298559/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745347897103,"stop":1745347897182,"duration":79}},{"uid":"fe25e6d0f9e6a127","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-41e54804-cf4e-426c-8af5-24678f298559/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745347897008,"stop":1745347897067,"duration":59}},{"uid":"c137d3bba482c714","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-41e54804-cf4e-426c-8af5-24678f298559/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745347896909,"stop":1745347896971,"duration":62}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":8},"items":[{"uid":"61c7f7eb6727faf5","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/77//#testresult/61c7f7eb6727faf5","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-18316f21-ad27-4ebb-a329-e5600c688a98/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745347099111,"stop":1745347099171,"duration":60}},{"uid":"f3b8d39a69c551f","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/76//#testresult/f3b8d39a69c551f","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-0bd7bacc-2cdd-430a-b08e-5277de767620/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745331970180,"stop":1745331970233,"duration":53}},{"uid":"8aec7ca157dcf31f","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/75//#testresult/8aec7ca157dcf31f","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-a51f303b-cac4-44b3-8199-4d4eb4b4acdf/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745298267238,"stop":1745298267313,"duration":75}},{"uid":"67a5328aadada382","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/74//#testresult/67a5328aadada382","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-9baef73d-5d88-47e2-b02b-c57853f86bb6/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745297841348,"stop":1745297841447,"duration":99}},{"uid":"e1546cb8b5daadb3","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/73//#testresult/e1546cb8b5daadb3","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-ae045dcc-40f9-4f29-bb67-a452170db081/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745297610948,"stop":1745297611000,"duration":52}},{"uid":"69c4310355ded1d8","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/72//#testresult/69c4310355ded1d8","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-643ee0a5-60fa-4ab4-9459-eb69a800cea5/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745297411853,"stop":1745297411914,"duration":61}},{"uid":"3ed09ee8d0464ff6","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/71//#testresult/3ed09ee8d0464ff6","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-8b6dad72-ea63-4f88-804b-b1ad8ede96e3/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1745297305664,"stop":1745297305716,"duration":52}}]},"tags":["request","negative"]},"source":"b3fbaafd2b2231ca.json","parameterValues":[]}