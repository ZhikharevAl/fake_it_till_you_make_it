{"uid":"25c1106c441350f2","name":"Тест успешного получения данных пользователя","fullName":"tests.user.test_user_api.TestUserAPI#test_get_user_info_success","historyId":"ce00374a95389d718a8d728c79e283b3","time":{"start":1745180152746,"stop":1745180152778,"duration":32},"description":"Проверяем получение данных профиля для аутентифицированного пользователя.","descriptionHtml":"<p>Проверяем получение данных профиля для аутентифицированного пользователя.</p>\n","status":"failed","statusMessage":"AssertionError: assert 'Международный страховой техник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Международный страховой техник","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f4de5268e10>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f4de4c00cb0>\n\n    @allure.feature(\"Профиль пользователя (GET /api/user)\")\n    @allure.story(\"Получение профиля\")\n    @allure.title(\"Тест успешного получения данных пользователя\")\n    @allure.description(\"Проверяем получение данных профиля для аутентифицированного пользователя.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    def test_get_user_info_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного получения информации o текущем пользователе.\n    \n        Ожидаемый результат: статус 200 и валидные данные пользователя.\n        \"\"\"\n        logger.info(\"Тест: Успешное получение данных пользователя (GET /api/user)\")\n        response = authenticated_user_client.get_user_info(expected_status=200)  # type: ignore\n    \n        with allure.step(\"Проверка данных пользователя\"):  # type: ignore\n            assert isinstance(response, UserDataResponse), \"Ответ должен быть типа UserDataResponse\"\n            assert response.id is not None, \"Поле 'id' пользователя не должно быть пустым\"\n            assert isinstance(response.id, str), \"Поле 'id' пользователя должно быть типа str\"\n            assert len(response.base_locations) == 2\n    \n            education = response.educations[0]\n            assert education is not None\n            assert education.model_dump(by_alias=True)[\"organizationName\"] == \"НПГУ ДПИ\"\n            assert education.model_dump(by_alias=True)[\"level\"] == \"Высшее\"\n>           assert (\n                education.model_dump(by_alias=True)[\"specialization\"]\n                == \"Районный маркетинговый администратор\"\n            )\nE           AssertionError: assert 'Международный страховой техник' == 'Районный маркетинговый администратор'\nE             \nE             - Районный маркетинговый администратор\nE             + Международный страховой техник\n\ntests/user/test_user_api.py:48: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1745180149399,"stop":1745180149399,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1745180149400,"stop":1745180149400,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1745180149400,"stop":1745180149401,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1745180149400,"stop":1745180149400,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1745180149401,"stop":1745180149830,"duration":429},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1745180149830,"stop":1745180149857,"duration":27},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1745180149857,"stop":1745180149858,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_client","time":{"start":1745180149858,"stop":1745180149858,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_token","time":{"start":1745180152004,"stop":1745180152108,"duration":104},"status":"passed","steps":[],"attachments":[{"uid":"74f98bece9d01bd1","name":"Status Code: 200","source":"74f98bece9d01bd1.txt","type":"text/plain","size":3},{"uid":"c99e01f04818957e","name":"Request URL","source":"c99e01f04818957e.uri","type":"text/uri-list","size":30},{"uid":"15c38fd421d97b61","name":"Response Headers (JSON)","source":"15c38fd421d97b61.json","type":"application/json","size":317},{"uid":"17e57b723b3ff03c","name":"Response Body (JSON)","source":"17e57b723b3ff03c.json","type":"application/json","size":224},{"uid":"8d3b43ea92de0fb8","name":"Status response code: 200 (Expected: 200)","source":"8d3b43ea92de0fb8.txt","type":"text/plain","size":3},{"uid":"d52002af08667381","name":"Body of the answer (failed by AuthSuccessResponse)","source":"d52002af08667381.json","type":"application/json","size":220}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"authenticated_api_req_context","time":{"start":1745180152735,"stop":1745180152745,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_http_client","time":{"start":1745180152745,"stop":1745180152745,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_user_client","time":{"start":1745180152745,"stop":1745180152745,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем получение данных профиля для аутентифицированного пользователя.","status":"failed","statusMessage":"AssertionError: assert 'Международный страховой техник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Международный страховой техник","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f4de5268e10>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f4de4c00cb0>\n\n    @allure.feature(\"Профиль пользователя (GET /api/user)\")\n    @allure.story(\"Получение профиля\")\n    @allure.title(\"Тест успешного получения данных пользователя\")\n    @allure.description(\"Проверяем получение данных профиля для аутентифицированного пользователя.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    def test_get_user_info_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного получения информации o текущем пользователе.\n    \n        Ожидаемый результат: статус 200 и валидные данные пользователя.\n        \"\"\"\n        logger.info(\"Тест: Успешное получение данных пользователя (GET /api/user)\")\n        response = authenticated_user_client.get_user_info(expected_status=200)  # type: ignore\n    \n        with allure.step(\"Проверка данных пользователя\"):  # type: ignore\n            assert isinstance(response, UserDataResponse), \"Ответ должен быть типа UserDataResponse\"\n            assert response.id is not None, \"Поле 'id' пользователя не должно быть пустым\"\n            assert isinstance(response.id, str), \"Поле 'id' пользователя должно быть типа str\"\n            assert len(response.base_locations) == 2\n    \n            education = response.educations[0]\n            assert education is not None\n            assert education.model_dump(by_alias=True)[\"organizationName\"] == \"НПГУ ДПИ\"\n            assert education.model_dump(by_alias=True)[\"level\"] == \"Высшее\"\n>           assert (\n                education.model_dump(by_alias=True)[\"specialization\"]\n                == \"Районный маркетинговый администратор\"\n            )\nE           AssertionError: assert 'Международный страховой техник' == 'Районный маркетинговый администратор'\nE             \nE             - Районный маркетинговый администратор\nE             + Международный страховой техник\n\ntests/user/test_user_api.py:48: AssertionError","steps":[{"name":"Получение данных текущего пользователя","time":{"start":1745180152746,"stop":1745180152777,"duration":31},"status":"passed","steps":[],"attachments":[{"uid":"f9ef65c6ab2b1cff","name":"Status Code: 200","source":"f9ef65c6ab2b1cff.txt","type":"text/plain","size":3},{"uid":"4bf5a1bf5a446656","name":"Request URL","source":"4bf5a1bf5a446656.uri","type":"text/uri-list","size":30},{"uid":"2d2d55d694939c4c","name":"Response Headers (JSON)","source":"2d2d55d694939c4c.json","type":"application/json","size":318},{"uid":"6019fba17fc21339","name":"Response Body (JSON)","source":"6019fba17fc21339.json","type":"application/json","size":1287},{"uid":"e1d98f2cf77c08b2","name":"Status response code: 200 (Expected: 200)","source":"e1d98f2cf77c08b2.txt","type":"text/plain","size":3},{"uid":"314175fcb65f1582","name":"Body of the answer (failed by UserDataResponse)","source":"314175fcb65f1582.json","type":"application/json","size":1140}],"parameters":[{"name":"expected_status","value":"200"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"Проверка данных пользователя","time":{"start":1745180152777,"stop":1745180152778,"duration":1},"status":"failed","statusMessage":"AssertionError: assert 'Международный страховой техник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Международный страховой техник\n","statusTrace":"  File \"/app/tests/user/test_user_api.py\", line 48, in test_get_user_info_success\n    assert (\n    ...<2 lines>...\n    )\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"f50724f4dbce3efe","name":"log","source":"f50724f4dbce3efe.txt","type":"text/plain","size":4948},{"uid":"850f8259c8f56666","name":"stderr","source":"850f8259c8f56666.txt","type":"text/plain","size":5861}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":8,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"authenticated_api_req_context::0","time":{"start":1745180152786,"stop":1745180152797,"duration":11},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context::0","time":{"start":1745180153334,"stop":1745180153347,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1745180153348,"stop":1745180153358,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"critical"},{"name":"epic","value":"Управление пользователем"},{"name":"story","value":"Получение профиля"},{"name":"feature","value":"Профиль пользователя (GET /api/user)"},{"name":"tag","value":"positive"},{"name":"tag","value":"smoke"},{"name":"tag","value":"user"},{"name":"parentSuite","value":"tests.user"},{"name":"suite","value":"test_user_api"},{"name":"subSuite","value":"TestUserAPI"},{"name":"host","value":"fv-az1146-135"},{"name":"thread","value":"9-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.user.test_user_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[{"uid":"fac0eb92de9625cb","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745180152637,"stop":1745180152692,"duration":55}},{"uid":"4e89c2db731a55a4","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745180152499,"stop":1745180152565,"duration":66}},{"uid":"4632741f720d7ed2","status":"failed","statusDetails":"AssertionError: assert 'Международный страховой техник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Международный страховой техник","time":{"start":1745180152384,"stop":1745180152436,"duration":52}},{"uid":"d088c0e484763982","status":"failed","statusDetails":"AssertionError: assert 'Международный страховой техник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Международный страховой техник","time":{"start":1745180152263,"stop":1745180152344,"duration":81}},{"uid":"1bbbdb4535c2efe8","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745180152127,"stop":1745180152194,"duration":67}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":25,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":25},"items":[{"uid":"41375595d18bbc79","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/52//#testresult/41375595d18bbc79","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745173182239,"stop":1745173182270,"duration":31}},{"uid":"5979f9a406c717c5","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/51//#testresult/5979f9a406c717c5","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745173153266,"stop":1745173153296,"duration":30}},{"uid":"451d14c176dcc08e","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/50//#testresult/451d14c176dcc08e","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745171169026,"stop":1745171169057,"duration":31}},{"uid":"ecddb86a18fcf278","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/49//#testresult/ecddb86a18fcf278","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745016104490,"stop":1745016104520,"duration":30}},{"uid":"5cfb73d241e2334d","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/48//#testresult/5cfb73d241e2334d","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745015892294,"stop":1745015892324,"duration":30}},{"uid":"b35d3ffec593ed1f","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/47//#testresult/b35d3ffec593ed1f","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745014809916,"stop":1745014809949,"duration":33}},{"uid":"b2a0fbe5ed17a33","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/46//#testresult/b2a0fbe5ed17a33","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745014788037,"stop":1745014788068,"duration":31}},{"uid":"dbbb71de7b4d4353","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/45//#testresult/dbbb71de7b4d4353","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745013912910,"stop":1745013912940,"duration":30}},{"uid":"4754413a390ef0ac","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/44//#testresult/4754413a390ef0ac","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745013767629,"stop":1745013767659,"duration":30}},{"uid":"c16e8e787bade7c7","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/43//#testresult/c16e8e787bade7c7","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745007984188,"stop":1745007984219,"duration":31}},{"uid":"4497c205a02f76e5","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/42//#testresult/4497c205a02f76e5","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745007718062,"stop":1745007718093,"duration":31}},{"uid":"2ad275bfd6044f56","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/40//#testresult/2ad275bfd6044f56","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745007086920,"stop":1745007086950,"duration":30}},{"uid":"7a1d8b2beefc8b0c","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/39//#testresult/7a1d8b2beefc8b0c","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745006983096,"stop":1745006983128,"duration":32}},{"uid":"c21c2f659552df50","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/38//#testresult/c21c2f659552df50","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745006650417,"stop":1745006650447,"duration":30}},{"uid":"1b7a965fd9e6ed9d","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/37//#testresult/1b7a965fd9e6ed9d","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745006447908,"stop":1745006447939,"duration":31}},{"uid":"55199893bddc6f9f","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/36//#testresult/55199893bddc6f9f","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745006158525,"stop":1745006158555,"duration":30}},{"uid":"ec5c72e3549776c5","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/35//#testresult/ec5c72e3549776c5","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745005971572,"stop":1745005971603,"duration":31}},{"uid":"60b7bda8e087a02d","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/34//#testresult/60b7bda8e087a02d","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745005663264,"stop":1745005663295,"duration":31}},{"uid":"71cd1951663eac41","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/33//#testresult/71cd1951663eac41","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1745005090050,"stop":1745005090083,"duration":33}},{"uid":"d8c69b27583e2bfc","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/32//#testresult/d8c69b27583e2bfc","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1744923399209,"stop":1744923399240,"duration":31}}]},"tags":["smoke","positive","user"]},"source":"25c1106c441350f2.json","parameterValues":[]}