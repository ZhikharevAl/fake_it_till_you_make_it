{"uid":"8cc7b1c08734ba04","name":"Тест успешного получения данных пользователя","fullName":"tests.user.test_user_api.TestUserAPI#test_get_user_info_success","historyId":"ce00374a95389d718a8d728c79e283b3","time":{"start":1745293352075,"stop":1745293352109,"duration":34},"description":"Проверяем получение данных профиля для аутентифицированного пользователя.","descriptionHtml":"<p>Проверяем получение данных профиля для аутентифицированного пользователя.</p>\n","status":"failed","statusMessage":"AssertionError: assert 'Региональный интеграционный руководитель' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Региональный интеграционный руководитель","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f3514f64e10>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f3514e40b90>\n\n    @allure.feature(\"Профиль пользователя (GET /api/user)\")\n    @allure.story(\"Получение профиля\")\n    @allure.title(\"Тест успешного получения данных пользователя\")\n    @allure.description(\"Проверяем получение данных профиля для аутентифицированного пользователя.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    def test_get_user_info_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного получения информации o текущем пользователе.\n    \n        Ожидаемый результат: статус 200 и валидные данные пользователя.\n        \"\"\"\n        logger.info(\"Тест: Успешное получение данных пользователя (GET /api/user)\")\n        response = authenticated_user_client.get_user_info(expected_status=200)  # type: ignore\n    \n        with allure.step(\"Проверка данных пользователя\"):  # type: ignore\n            assert isinstance(response, UserDataResponse), \"Ответ должен быть типа UserDataResponse\"\n            assert response.id is not None, \"Поле 'id' пользователя не должно быть пустым\"\n            assert isinstance(response.id, str), \"Поле 'id' пользователя должно быть типа str\"\n            assert len(response.base_locations) == 2\n    \n            education = response.educations[0]\n            assert education is not None\n            assert education.model_dump(by_alias=True)[\"organizationName\"] == \"НПГУ ДПИ\"\n            assert education.model_dump(by_alias=True)[\"level\"] == \"Высшее\"\n>           assert (\n                education.model_dump(by_alias=True)[\"specialization\"]\n                == \"Районный маркетинговый администратор\"\n            )\nE           AssertionError: assert 'Региональный интеграционный руководитель' == 'Районный маркетинговый администратор'\nE             \nE             - Районный маркетинговый администратор\nE             + Региональный интеграционный руководитель\n\ntests/user/test_user_api.py:48: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1745293348718,"stop":1745293348719,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1745293348719,"stop":1745293348719,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1745293348719,"stop":1745293348719,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1745293348720,"stop":1745293349146,"duration":426},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1745293348720,"stop":1745293348720,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1745293349146,"stop":1745293349174,"duration":28},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1745293349175,"stop":1745293349175,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_client","time":{"start":1745293349175,"stop":1745293349176,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_token","time":{"start":1745293351294,"stop":1745293351400,"duration":106},"status":"passed","steps":[],"attachments":[{"uid":"44fadfdd2dc2c67d","name":"Status Code: 200","source":"44fadfdd2dc2c67d.txt","type":"text/plain","size":3},{"uid":"885e14602889b350","name":"Request URL","source":"885e14602889b350.uri","type":"text/uri-list","size":30},{"uid":"cb11c076a0a32167","name":"Response Headers (JSON)","source":"cb11c076a0a32167.json","type":"application/json","size":317},{"uid":"a7c6379b99265d42","name":"Response Body (JSON)","source":"a7c6379b99265d42.json","type":"application/json","size":224},{"uid":"7c684886dc882860","name":"Status response code: 200 (Expected: 200)","source":"7c684886dc882860.txt","type":"text/plain","size":3},{"uid":"17c260f2ca97efbf","name":"Body of the answer (failed by AuthSuccessResponse)","source":"17c260f2ca97efbf.json","type":"application/json","size":220}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"authenticated_api_req_context","time":{"start":1745293352058,"stop":1745293352074,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_user_client","time":{"start":1745293352074,"stop":1745293352074,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_http_client","time":{"start":1745293352074,"stop":1745293352074,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем получение данных профиля для аутентифицированного пользователя.","status":"failed","statusMessage":"AssertionError: assert 'Региональный интеграционный руководитель' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Региональный интеграционный руководитель","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f3514f64e10>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f3514e40b90>\n\n    @allure.feature(\"Профиль пользователя (GET /api/user)\")\n    @allure.story(\"Получение профиля\")\n    @allure.title(\"Тест успешного получения данных пользователя\")\n    @allure.description(\"Проверяем получение данных профиля для аутентифицированного пользователя.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    def test_get_user_info_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного получения информации o текущем пользователе.\n    \n        Ожидаемый результат: статус 200 и валидные данные пользователя.\n        \"\"\"\n        logger.info(\"Тест: Успешное получение данных пользователя (GET /api/user)\")\n        response = authenticated_user_client.get_user_info(expected_status=200)  # type: ignore\n    \n        with allure.step(\"Проверка данных пользователя\"):  # type: ignore\n            assert isinstance(response, UserDataResponse), \"Ответ должен быть типа UserDataResponse\"\n            assert response.id is not None, \"Поле 'id' пользователя не должно быть пустым\"\n            assert isinstance(response.id, str), \"Поле 'id' пользователя должно быть типа str\"\n            assert len(response.base_locations) == 2\n    \n            education = response.educations[0]\n            assert education is not None\n            assert education.model_dump(by_alias=True)[\"organizationName\"] == \"НПГУ ДПИ\"\n            assert education.model_dump(by_alias=True)[\"level\"] == \"Высшее\"\n>           assert (\n                education.model_dump(by_alias=True)[\"specialization\"]\n                == \"Районный маркетинговый администратор\"\n            )\nE           AssertionError: assert 'Региональный интеграционный руководитель' == 'Районный маркетинговый администратор'\nE             \nE             - Районный маркетинговый администратор\nE             + Региональный интеграционный руководитель\n\ntests/user/test_user_api.py:48: AssertionError","steps":[{"name":"Получение данных текущего пользователя","time":{"start":1745293352076,"stop":1745293352108,"duration":32},"status":"passed","steps":[],"attachments":[{"uid":"1175727238987589","name":"Status Code: 200","source":"1175727238987589.txt","type":"text/plain","size":3},{"uid":"a22d19c012c29ff1","name":"Request URL","source":"a22d19c012c29ff1.uri","type":"text/uri-list","size":30},{"uid":"47dd2dec61915275","name":"Response Headers (JSON)","source":"47dd2dec61915275.json","type":"application/json","size":318},{"uid":"a1568103452688fa","name":"Response Body (JSON)","source":"a1568103452688fa.json","type":"application/json","size":1290},{"uid":"fd6e8eb625da21a7","name":"Status response code: 200 (Expected: 200)","source":"fd6e8eb625da21a7.txt","type":"text/plain","size":3},{"uid":"cd88082b34a1ce01","name":"Body of the answer (failed by UserDataResponse)","source":"cd88082b34a1ce01.json","type":"application/json","size":1143}],"parameters":[{"name":"expected_status","value":"200"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"Проверка данных пользователя","time":{"start":1745293352108,"stop":1745293352108,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 'Региональный интеграционный руководитель' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Региональный интеграционный руководитель\n","statusTrace":"  File \"/app/tests/user/test_user_api.py\", line 48, in test_get_user_info_success\n    assert (\n    ...<2 lines>...\n    )\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"ce9bab638f458868","name":"log","source":"ce9bab638f458868.txt","type":"text/plain","size":4537},{"uid":"2ab2989a0af47ecc","name":"stderr","source":"2ab2989a0af47ecc.txt","type":"text/plain","size":5378}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":8,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"authenticated_api_req_context::0","time":{"start":1745293352119,"stop":1745293352127,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context::0","time":{"start":1745293352491,"stop":1745293352501,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1745293352501,"stop":1745293352510,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Управление пользователем"},{"name":"story","value":"Получение профиля"},{"name":"severity","value":"critical"},{"name":"feature","value":"Профиль пользователя (GET /api/user)"},{"name":"tag","value":"positive"},{"name":"tag","value":"smoke"},{"name":"tag","value":"user"},{"name":"parentSuite","value":"tests.user"},{"name":"suite","value":"test_user_api"},{"name":"subSuite","value":"TestUserAPI"},{"name":"host","value":"fv-az2028-992"},{"name":"thread","value":"9-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.user.test_user_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[{"uid":"b0d7184cabb6ddc1","status":"failed","statusDetails":"AssertionError: assert 'Региональный интеграционный руководитель' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Региональный интеграционный руководитель","time":{"start":1745293351920,"stop":1745293352016,"duration":96}},{"uid":"75176c853282aa3c","status":"failed","statusDetails":"AssertionError: assert 'Региональный интеграционный руководитель' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Региональный интеграционный руководитель","time":{"start":1745293351781,"stop":1745293351856,"duration":75}},{"uid":"b9bf445be4f9a909","status":"failed","statusDetails":"AssertionError: assert 'Региональный интеграционный руководитель' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Региональный интеграционный руководитель","time":{"start":1745293351661,"stop":1745293351719,"duration":58}},{"uid":"c04fa38cb61e1a1c","status":"failed","statusDetails":"AssertionError: assert 'Региональный интеграционный руководитель' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Региональный интеграционный руководитель","time":{"start":1745293351545,"stop":1745293351599,"duration":54}},{"uid":"5e7749c3d8e0dffd","status":"failed","statusDetails":"AssertionError: assert 'Региональный интеграционный руководитель' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Региональный интеграционный руководитель","time":{"start":1745293351418,"stop":1745293351485,"duration":67}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"e6f14e329a489068","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/63//#testresult/e6f14e329a489068","status":"failed","statusDetails":"AssertionError: assert 'Областной операционный техник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Областной операционный техник","time":{"start":1745291452805,"stop":1745291452861,"duration":56}},{"uid":"a5631235b0f8678c","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/62//#testresult/a5631235b0f8678c","status":"failed","statusDetails":"AssertionError: assert 'Национальный коммуникационный сотрудник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Национальный коммуникационный сотрудник","time":{"start":1745290947059,"stop":1745290947126,"duration":67}}]},"tags":["smoke","positive","user"]},"source":"8cc7b1c08734ba04.json","parameterValues":[]}