{"uid":"86d94ad3c002a59c","name":"Тест успешного получения данных пользователя","fullName":"tests.user.test_user_api.TestUserAPI#test_get_user_info_success","historyId":"ce00374a95389d718a8d728c79e283b3","time":{"start":1758230435922,"stop":1758230435940,"duration":18},"description":"Проверяем получение данных профиля для аутентифицированного пользователя.","descriptionHtml":"<p>Проверяем получение данных профиля для аутентифицированного пользователя.</p>\n","status":"failed","statusMessage":"AssertionError: assert 'Районный оптимизационный инженер' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Районный оптимизационный инженер","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f93abd91590>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f93aa9732f0>\n\n    @allure.feature(\"Профиль пользователя (GET /api/user)\")\n    @allure.story(\"Получение профиля\")\n    @allure.title(\"Тест успешного получения данных пользователя\")\n    @allure.description(\"Проверяем получение данных профиля для аутентифицированного пользователя.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    def test_get_user_info_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного получения информации o текущем пользователе.\n    \n        Ожидаемый результат: статус 200 и валидные данные пользователя.\n        \"\"\"\n        logger.info(\"Тест: Успешное получение данных пользователя (GET /api/user)\")\n        response = authenticated_user_client.get_user_info(expected_status=200)  # type: ignore\n    \n        with allure.step(\"Проверка данных пользователя\"):  # type: ignore\n            assert isinstance(response, UserDataResponse), \"Ответ должен быть типа UserDataResponse\"\n            assert response.id is not None, \"Поле 'id' пользователя не должно быть пустым\"\n            assert isinstance(response.id, str), \"Поле 'id' пользователя должно быть типа str\"\n            assert len(response.base_locations) == 2\n    \n            education = response.educations[0]\n            assert education is not None\n            assert education.model_dump(by_alias=True)[\"organizationName\"] == \"НПГУ ДПИ\"\n            assert education.model_dump(by_alias=True)[\"level\"] == \"Высшее\"\n>           assert (\n                education.model_dump(by_alias=True)[\"specialization\"]\n                == \"Районный маркетинговый администратор\"\n            )\nE           AssertionError: assert 'Районный оптимизационный инженер' == 'Районный маркетинговый администратор'\nE             \nE             - Районный маркетинговый администратор\nE             + Районный оптимизационный инженер\n\ntests/user/test_user_api.py:48: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1758230434024,"stop":1758230434024,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1758230434024,"stop":1758230434025,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1758230434024,"stop":1758230434024,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1758230434025,"stop":1758230434025,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1758230434025,"stop":1758230434533,"duration":508},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1758230434533,"stop":1758230434547,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1758230434547,"stop":1758230434548,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_client","time":{"start":1758230434548,"stop":1758230434548,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_token","time":{"start":1758230435547,"stop":1758230435620,"duration":73},"status":"passed","steps":[],"attachments":[{"uid":"62da4f6902326396","name":"Status Code: 200","source":"62da4f6902326396.txt","type":"text/plain","size":3},{"uid":"60e9f5403ab470d6","name":"Request URL","source":"60e9f5403ab470d6.uri","type":"text/uri-list","size":30},{"uid":"dfb32e0c65e349be","name":"Response Headers (JSON)","source":"dfb32e0c65e349be.json","type":"application/json","size":317},{"uid":"d32fb2ba690d8f2e","name":"Response Body (JSON)","source":"d32fb2ba690d8f2e.json","type":"application/json","size":224},{"uid":"f60926fa33eeb6fb","name":"Status response code: 200 (Expected: 200)","source":"f60926fa33eeb6fb.txt","type":"text/plain","size":3},{"uid":"445a0d81a3264689","name":"Body of the answer (failed by AuthSuccessResponse)","source":"445a0d81a3264689.json","type":"application/json","size":220}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"authenticated_api_req_context","time":{"start":1758230435917,"stop":1758230435921,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_http_client","time":{"start":1758230435921,"stop":1758230435921,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_user_client","time":{"start":1758230435921,"stop":1758230435921,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем получение данных профиля для аутентифицированного пользователя.","status":"failed","statusMessage":"AssertionError: assert 'Районный оптимизационный инженер' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Районный оптимизационный инженер","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f93abd91590>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f93aa9732f0>\n\n    @allure.feature(\"Профиль пользователя (GET /api/user)\")\n    @allure.story(\"Получение профиля\")\n    @allure.title(\"Тест успешного получения данных пользователя\")\n    @allure.description(\"Проверяем получение данных профиля для аутентифицированного пользователя.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    def test_get_user_info_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного получения информации o текущем пользователе.\n    \n        Ожидаемый результат: статус 200 и валидные данные пользователя.\n        \"\"\"\n        logger.info(\"Тест: Успешное получение данных пользователя (GET /api/user)\")\n        response = authenticated_user_client.get_user_info(expected_status=200)  # type: ignore\n    \n        with allure.step(\"Проверка данных пользователя\"):  # type: ignore\n            assert isinstance(response, UserDataResponse), \"Ответ должен быть типа UserDataResponse\"\n            assert response.id is not None, \"Поле 'id' пользователя не должно быть пустым\"\n            assert isinstance(response.id, str), \"Поле 'id' пользователя должно быть типа str\"\n            assert len(response.base_locations) == 2\n    \n            education = response.educations[0]\n            assert education is not None\n            assert education.model_dump(by_alias=True)[\"organizationName\"] == \"НПГУ ДПИ\"\n            assert education.model_dump(by_alias=True)[\"level\"] == \"Высшее\"\n>           assert (\n                education.model_dump(by_alias=True)[\"specialization\"]\n                == \"Районный маркетинговый администратор\"\n            )\nE           AssertionError: assert 'Районный оптимизационный инженер' == 'Районный маркетинговый администратор'\nE             \nE             - Районный маркетинговый администратор\nE             + Районный оптимизационный инженер\n\ntests/user/test_user_api.py:48: AssertionError","steps":[{"name":"Получение данных текущего пользователя","time":{"start":1758230435922,"stop":1758230435939,"duration":17},"status":"passed","steps":[],"attachments":[{"uid":"dc90adc0237c16a","name":"Status Code: 200","source":"dc90adc0237c16a.txt","type":"text/plain","size":3},{"uid":"e9d06a83c50d3e45","name":"Request URL","source":"e9d06a83c50d3e45.uri","type":"text/uri-list","size":30},{"uid":"aef9570939ec44a0","name":"Response Headers (JSON)","source":"aef9570939ec44a0.json","type":"application/json","size":318},{"uid":"7aabf33e8445f83a","name":"Response Body (JSON)","source":"7aabf33e8445f83a.json","type":"application/json","size":1275},{"uid":"da1397f0bf9ccbcc","name":"Status response code: 200 (Expected: 200)","source":"da1397f0bf9ccbcc.txt","type":"text/plain","size":3},{"uid":"4a232cc9dcd49273","name":"Body of the answer (failed by UserDataResponse)","source":"4a232cc9dcd49273.json","type":"application/json","size":1128}],"parameters":[{"name":"expected_status","value":"200"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"Проверка данных пользователя","time":{"start":1758230435939,"stop":1758230435939,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 'Районный оптимизационный инженер' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Районный оптимизационный инженер\n","statusTrace":"  File \"/app/tests/user/test_user_api.py\", line 48, in test_get_user_info_success\n    assert (\n    ...<2 lines>...\n    )\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"a6a2ca290823b00b","name":"log","source":"a6a2ca290823b00b.txt","type":"text/plain","size":4674},{"uid":"3929e6cd6d2d5f88","name":"stderr","source":"3929e6cd6d2d5f88.txt","type":"text/plain","size":5539}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":8,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"authenticated_api_req_context::0","time":{"start":1758230435951,"stop":1758230435955,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context::0","time":{"start":1758230436292,"stop":1758230436297,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1758230436299,"stop":1758230436309,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"critical"},{"name":"story","value":"Получение профиля"},{"name":"epic","value":"Управление пользователем"},{"name":"feature","value":"Профиль пользователя (GET /api/user)"},{"name":"tag","value":"positive"},{"name":"tag","value":"smoke"},{"name":"tag","value":"user"},{"name":"parentSuite","value":"tests.user"},{"name":"suite","value":"test_user_api"},{"name":"subSuite","value":"TestUserAPI"},{"name":"host","value":"runnervmyfcvg"},{"name":"thread","value":"9-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.user.test_user_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[{"uid":"f3855e0e55053f5b","status":"failed","statusDetails":"AssertionError: assert 'Районный оптимизационный инженер' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Районный оптимизационный инженер","time":{"start":1758230435877,"stop":1758230435894,"duration":17}},{"uid":"b74f98551f3b6838","status":"failed","statusDetails":"AssertionError: assert 'Районный оптимизационный инженер' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Районный оптимизационный инженер","time":{"start":1758230435821,"stop":1758230435843,"duration":22}},{"uid":"1ecdf70e6a560df","status":"failed","statusDetails":"AssertionError: assert 'Районный оптимизационный инженер' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Районный оптимизационный инженер","time":{"start":1758230435763,"stop":1758230435785,"duration":22}},{"uid":"f444ddcb7678fb44","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1758230435677,"stop":1758230435719,"duration":42}},{"uid":"ce30ad49f68e3329","status":"failed","statusDetails":"AssertionError: assert 'Районный оптимизационный инженер' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Районный оптимизационный инженер","time":{"start":1758230435627,"stop":1758230435655,"duration":28}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":7},"items":[{"uid":"e980c6c42e242c85","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/124//#testresult/e980c6c42e242c85","status":"failed","statusDetails":"AssertionError: assert 'Национальный операционный архитектор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Национальный операционный архитектор","time":{"start":1755538570594,"stop":1755538570611,"duration":17}},{"uid":"105823fd990a30af","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/123//#testresult/105823fd990a30af","status":"failed","statusDetails":"AssertionError: assert 'Главный коммуникационный менеджер' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Главный коммуникационный менеджер","time":{"start":1755511587590,"stop":1755511587646,"duration":56}},{"uid":"c57e1b7f10619945","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/122//#testresult/c57e1b7f10619945","status":"failed","statusDetails":"AssertionError: assert 'Генеральный оптимизационный планировщик' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Генеральный оптимизационный планировщик","time":{"start":1755511258031,"stop":1755511258056,"duration":25}},{"uid":"dcf4e6d79dc03bab","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/121//#testresult/dcf4e6d79dc03bab","status":"failed","statusDetails":"AssertionError: assert 'Региональный интеграционный руководитель' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Региональный интеграционный руководитель","time":{"start":1755508618062,"stop":1755508618082,"duration":20}},{"uid":"8464641104d1f350","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/120//#testresult/8464641104d1f350","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1755508196574,"stop":1755508196637,"duration":63}},{"uid":"837f3f2a3055d060","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/119//#testresult/837f3f2a3055d060","status":"failed","statusDetails":"AssertionError: assert 'Центральный страховой руководитель' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Центральный страховой руководитель","time":{"start":1755507569422,"stop":1755507569441,"duration":19}}]},"tags":["smoke","positive","user"]},"source":"86d94ad3c002a59c.json","parameterValues":[]}