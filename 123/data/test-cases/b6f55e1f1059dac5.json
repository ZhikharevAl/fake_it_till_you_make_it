{"uid":"b6f55e1f1059dac5","name":"Тест успешного получения данных пользователя","fullName":"tests.user.test_user_api.TestUserAPI#test_get_user_info_success","historyId":"ce00374a95389d718a8d728c79e283b3","time":{"start":1755511587368,"stop":1755511587391,"duration":23},"description":"Проверяем получение данных профиля для аутентифицированного пользователя.","descriptionHtml":"<p>Проверяем получение данных профиля для аутентифицированного пользователя.</p>\n","status":"failed","statusMessage":"AssertionError: assert 'Главный коммуникационный менеджер' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Главный коммуникационный менеджер","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7fbe5692cf50>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7fbe554f4f50>\n\n    @allure.feature(\"Профиль пользователя (GET /api/user)\")\n    @allure.story(\"Получение профиля\")\n    @allure.title(\"Тест успешного получения данных пользователя\")\n    @allure.description(\"Проверяем получение данных профиля для аутентифицированного пользователя.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    def test_get_user_info_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного получения информации o текущем пользователе.\n    \n        Ожидаемый результат: статус 200 и валидные данные пользователя.\n        \"\"\"\n        logger.info(\"Тест: Успешное получение данных пользователя (GET /api/user)\")\n        response = authenticated_user_client.get_user_info(expected_status=200)  # type: ignore\n    \n        with allure.step(\"Проверка данных пользователя\"):  # type: ignore\n            assert isinstance(response, UserDataResponse), \"Ответ должен быть типа UserDataResponse\"\n            assert response.id is not None, \"Поле 'id' пользователя не должно быть пустым\"\n            assert isinstance(response.id, str), \"Поле 'id' пользователя должно быть типа str\"\n            assert len(response.base_locations) == 2\n    \n            education = response.educations[0]\n            assert education is not None\n            assert education.model_dump(by_alias=True)[\"organizationName\"] == \"НПГУ ДПИ\"\n            assert education.model_dump(by_alias=True)[\"level\"] == \"Высшее\"\n>           assert (\n                education.model_dump(by_alias=True)[\"specialization\"]\n                == \"Районный маркетинговый администратор\"\n            )\nE           AssertionError: assert 'Главный коммуникационный менеджер' == 'Районный маркетинговый администратор'\nE             \nE             - Районный маркетинговый администратор\nE             + Главный коммуникационный менеджер\n\ntests/user/test_user_api.py:48: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1755511585527,"stop":1755511585528,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1755511585528,"stop":1755511585528,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1755511585528,"stop":1755511585528,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1755511585528,"stop":1755511585529,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1755511585529,"stop":1755511586027,"duration":498},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1755511586028,"stop":1755511586058,"duration":30},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1755511586058,"stop":1755511586059,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_client","time":{"start":1755511586059,"stop":1755511586059,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_token","time":{"start":1755511587166,"stop":1755511587199,"duration":33},"status":"failed","statusMessage":"Failed: КРИТИЧЕСКАЯ ОШИБКА: He удалось выполнить сессионный логин для пользователя testUser4@test.com. Ошибка: The status was pending 200, but received 500. URL: http://localhost:4040/api/auth\nBody of the answer:\nPlanned Server Error\n","statusTrace":"  File \"/app/.venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/app/.venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/app/.venv/lib/python3.13/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/app/.venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"/app/.venv/lib/python3.13/site-packages/_pytest/fixtures.py\", line 1195, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/app/.venv/lib/python3.13/site-packages/_pytest/fixtures.py\", line 929, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/app/tests/conftest.py\", line 109, in auth_token_fixture\n    pytest.fail(\n    ~~~~~~~~~~~^\n        f\"КРИТИЧЕСКАЯ ОШИБКА: He удалось выполнить сессионный логин для пользователя \"\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        f\"{TEST_USER_LOGIN}. Ошибка: {e}\",\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        pytrace=False,\n        ^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/app/.venv/lib/python3.13/site-packages/_pytest/outcomes.py\", line 177, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[{"uid":"febf10bfc2829872","name":"Status Code: 500","source":"febf10bfc2829872.txt","type":"text/plain","size":3},{"uid":"11c13f260c8d95ef","name":"Request URL","source":"11c13f260c8d95ef.uri","type":"text/uri-list","size":30},{"uid":"3d8954de762a54f9","name":"Response Headers (JSON)","source":"3d8954de762a54f9.json","type":"application/json","size":309},{"uid":"dd0b7421addb8ebc","name":"Response Body (Text)","source":"dd0b7421addb8ebc.txt","type":"text/plain","size":20},{"uid":"c17231ac991da247","name":"Status response code: 500 (Expected: 200)","source":"c17231ac991da247.txt","type":"text/plain","size":3}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},{"name":"auth_token","time":{"start":1755511587220,"stop":1755511587292,"duration":72},"status":"passed","steps":[],"attachments":[{"uid":"d50fe23a90965667","name":"Status Code: 200","source":"d50fe23a90965667.txt","type":"text/plain","size":3},{"uid":"243b1d98158c23a2","name":"Request URL","source":"243b1d98158c23a2.uri","type":"text/uri-list","size":30},{"uid":"b343685a0266c639","name":"Response Headers (JSON)","source":"b343685a0266c639.json","type":"application/json","size":317},{"uid":"b57dafbf106a0a07","name":"Response Body (JSON)","source":"b57dafbf106a0a07.json","type":"application/json","size":224},{"uid":"8270e74362a90def","name":"Status response code: 200 (Expected: 200)","source":"8270e74362a90def.txt","type":"text/plain","size":3},{"uid":"b46d5454d18c09a","name":"Body of the answer (failed by AuthSuccessResponse)","source":"b46d5454d18c09a.json","type":"application/json","size":220}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"authenticated_api_req_context","time":{"start":1755511587362,"stop":1755511587367,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_http_client","time":{"start":1755511587367,"stop":1755511587367,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_user_client","time":{"start":1755511587367,"stop":1755511587367,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем получение данных профиля для аутентифицированного пользователя.","status":"failed","statusMessage":"AssertionError: assert 'Главный коммуникационный менеджер' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Главный коммуникационный менеджер","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7fbe5692cf50>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7fbe554f4f50>\n\n    @allure.feature(\"Профиль пользователя (GET /api/user)\")\n    @allure.story(\"Получение профиля\")\n    @allure.title(\"Тест успешного получения данных пользователя\")\n    @allure.description(\"Проверяем получение данных профиля для аутентифицированного пользователя.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    def test_get_user_info_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного получения информации o текущем пользователе.\n    \n        Ожидаемый результат: статус 200 и валидные данные пользователя.\n        \"\"\"\n        logger.info(\"Тест: Успешное получение данных пользователя (GET /api/user)\")\n        response = authenticated_user_client.get_user_info(expected_status=200)  # type: ignore\n    \n        with allure.step(\"Проверка данных пользователя\"):  # type: ignore\n            assert isinstance(response, UserDataResponse), \"Ответ должен быть типа UserDataResponse\"\n            assert response.id is not None, \"Поле 'id' пользователя не должно быть пустым\"\n            assert isinstance(response.id, str), \"Поле 'id' пользователя должно быть типа str\"\n            assert len(response.base_locations) == 2\n    \n            education = response.educations[0]\n            assert education is not None\n            assert education.model_dump(by_alias=True)[\"organizationName\"] == \"НПГУ ДПИ\"\n            assert education.model_dump(by_alias=True)[\"level\"] == \"Высшее\"\n>           assert (\n                education.model_dump(by_alias=True)[\"specialization\"]\n                == \"Районный маркетинговый администратор\"\n            )\nE           AssertionError: assert 'Главный коммуникационный менеджер' == 'Районный маркетинговый администратор'\nE             \nE             - Районный маркетинговый администратор\nE             + Главный коммуникационный менеджер\n\ntests/user/test_user_api.py:48: AssertionError","steps":[{"name":"Получение данных текущего пользователя","time":{"start":1755511587368,"stop":1755511587390,"duration":22},"status":"passed","steps":[],"attachments":[{"uid":"9bda8d7de992c550","name":"Status Code: 200","source":"9bda8d7de992c550.txt","type":"text/plain","size":3},{"uid":"d7cd39088791f768","name":"Request URL","source":"d7cd39088791f768.uri","type":"text/uri-list","size":30},{"uid":"5f4fc5cd0796aa91","name":"Response Headers (JSON)","source":"5f4fc5cd0796aa91.json","type":"application/json","size":318},{"uid":"7cb2591919a6789e","name":"Response Body (JSON)","source":"7cb2591919a6789e.json","type":"application/json","size":1264},{"uid":"667a566e2ae38abb","name":"Status response code: 200 (Expected: 200)","source":"667a566e2ae38abb.txt","type":"text/plain","size":3},{"uid":"56b186ca4a9cc9e9","name":"Body of the answer (failed by UserDataResponse)","source":"56b186ca4a9cc9e9.json","type":"application/json","size":1117}],"parameters":[{"name":"expected_status","value":"200"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"Проверка данных пользователя","time":{"start":1755511587390,"stop":1755511587390,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 'Главный коммуникационный менеджер' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Главный коммуникационный менеджер\n","statusTrace":"  File \"/app/tests/user/test_user_api.py\", line 48, in test_get_user_info_success\n    assert (\n    ...<2 lines>...\n    )\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"3a53dbcf9bdd9741","name":"log","source":"3a53dbcf9bdd9741.txt","type":"text/plain","size":2305},{"uid":"dcae35ff03ab0aa0","name":"stderr","source":"dcae35ff03ab0aa0.txt","type":"text/plain","size":2729}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":8,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"authenticated_api_req_context::0","time":{"start":1755511587405,"stop":1755511587410,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context::0","time":{"start":1755511588019,"stop":1755511588025,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1755511588026,"stop":1755511588035,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Профиль пользователя (GET /api/user)"},{"name":"story","value":"Получение профиля"},{"name":"severity","value":"critical"},{"name":"epic","value":"Управление пользователем"},{"name":"tag","value":"positive"},{"name":"tag","value":"smoke"},{"name":"tag","value":"user"},{"name":"parentSuite","value":"tests.user"},{"name":"suite","value":"test_user_api"},{"name":"subSuite","value":"TestUserAPI"},{"name":"host","value":"pkrvmdgpy2b27sr"},{"name":"thread","value":"3-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.user.test_user_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["smoke","positive","user"]},"source":"b6f55e1f1059dac5.json","parameterValues":[]}