{"uid":"ab1f6c97649f51df","name":"Тест успешного добавления запроса в избранное","fullName":"tests.user.test_user_favourites_api.TestUserFavouritesAPI#test_add_to_favourites_success","historyId":"cbd3f6f5fb77de4b542b6f9736702f53","time":{"start":1755422410921,"stop":1755422410937,"duration":16},"description":"Проверяем добавление запроса в избранное и  появление в списке.","descriptionHtml":"<p>Проверяем добавление запроса в избранное и  появление в списке.</p>\n","status":"failed","statusMessage":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","statusTrace":"self = <tests.user.test_user_favourites_api.TestUserFavouritesAPI object at 0x7fd3a3cce8b0>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7fd3a255ec60>\n\n    @allure.story(\"Добавление в избранное\")\n    @allure.title(\"Тест успешного добавления запроса в избранное\")\n    @allure.description(\"Проверяем добавление запроса в избранное и  появление в списке.\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    @pytest.mark.dependency(name=\"add_favourite_success\")\n    def test_add_to_favourites_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного добавления запроса в избранное.\n    \n        Ожидаемый результат: статус 200 и текстовое сообщение o успехе.\n        \"\"\"\n        logger.info(\n            \"Тест: Успешное добавление в избранное (POST /api/user/favourites), ID: %s\",\n            TEST_REQUEST_ID,\n        )\n    \n        payload = AddToFavouritesPayload(requestId=TEST_REQUEST_ID)\n>       response = authenticated_user_client.add_to_favourites(payload=payload, expected_status=200)  # type: ignore\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/user/test_user_favourites_api.py:80: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/user/client.py:63: in add_to_favourites\n    processed_response = self._handle_response(response, expected_status)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.user.client.UserClient object at 0x7fd3a255ec60>\nresponse = <APIResponse url='http://localhost:4040/api/user/favourites' status=400 status_text='Bad Request'>\nexpected_status = 200, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nE       Body of the answer:\nE       Failed to add request to favourites\n\napi/base_api.py:69: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1755422408550,"stop":1755422408550,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1755422408550,"stop":1755422408550,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1755422408550,"stop":1755422408550,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1755422408551,"stop":1755422408551,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1755422408551,"stop":1755422409069,"duration":518},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1755422409070,"stop":1755422409084,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1755422409084,"stop":1755422409085,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_client","time":{"start":1755422409085,"stop":1755422409085,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_token","time":{"start":1755422410519,"stop":1755422410595,"duration":76},"status":"passed","steps":[],"attachments":[{"uid":"2f9d5503dcf79c22","name":"Status Code: 200","source":"2f9d5503dcf79c22.txt","type":"text/plain","size":3},{"uid":"72b177a3e351e033","name":"Request URL","source":"72b177a3e351e033.uri","type":"text/uri-list","size":30},{"uid":"a770714d3da21ec","name":"Response Headers (JSON)","source":"a770714d3da21ec.json","type":"application/json","size":317},{"uid":"98f73e60348defdc","name":"Response Body (JSON)","source":"98f73e60348defdc.json","type":"application/json","size":224},{"uid":"2ae70ceddf901e4f","name":"Status response code: 200 (Expected: 200)","source":"2ae70ceddf901e4f.txt","type":"text/plain","size":3},{"uid":"232546e250c20691","name":"Body of the answer (failed by AuthSuccessResponse)","source":"232546e250c20691.json","type":"application/json","size":220}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"authenticated_api_req_context","time":{"start":1755422410915,"stop":1755422410919,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_http_client","time":{"start":1755422410919,"stop":1755422410920,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_user_client","time":{"start":1755422410920,"stop":1755422410920,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем добавление запроса в избранное и  появление в списке.","status":"failed","statusMessage":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","statusTrace":"self = <tests.user.test_user_favourites_api.TestUserFavouritesAPI object at 0x7fd3a3cce8b0>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7fd3a255ec60>\n\n    @allure.story(\"Добавление в избранное\")\n    @allure.title(\"Тест успешного добавления запроса в избранное\")\n    @allure.description(\"Проверяем добавление запроса в избранное и  появление в списке.\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    @pytest.mark.dependency(name=\"add_favourite_success\")\n    def test_add_to_favourites_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного добавления запроса в избранное.\n    \n        Ожидаемый результат: статус 200 и текстовое сообщение o успехе.\n        \"\"\"\n        logger.info(\n            \"Тест: Успешное добавление в избранное (POST /api/user/favourites), ID: %s\",\n            TEST_REQUEST_ID,\n        )\n    \n        payload = AddToFavouritesPayload(requestId=TEST_REQUEST_ID)\n>       response = authenticated_user_client.add_to_favourites(payload=payload, expected_status=200)  # type: ignore\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/user/test_user_favourites_api.py:80: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/user/client.py:63: in add_to_favourites\n    processed_response = self._handle_response(response, expected_status)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.user.client.UserClient object at 0x7fd3a255ec60>\nresponse = <APIResponse url='http://localhost:4040/api/user/favourites' status=400 status_text='Bad Request'>\nexpected_status = 200, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nE       Body of the answer:\nE       Failed to add request to favourites\n\napi/base_api.py:69: AssertionError","steps":[{"name":"Добавление запроса в избранное","time":{"start":1755422410921,"stop":1755422410937,"duration":16},"status":"failed","statusMessage":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites\n","statusTrace":"  File \"/app/.venv/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/app/api/user/client.py\", line 63, in add_to_favourites\n    processed_response = self._handle_response(response, expected_status)\n  File \"/app/api/base_api.py\", line 69, in _handle_response\n    assert response.status == expected_status, (\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[{"uid":"3d1df9f77a130a","name":"Status Code: 400","source":"3d1df9f77a130a.txt","type":"text/plain","size":3},{"uid":"fe59cd46ecf28232","name":"Request URL","source":"fe59cd46ecf28232.uri","type":"text/uri-list","size":41},{"uid":"7c59002b7e370aae","name":"Response Headers (JSON)","source":"7c59002b7e370aae.json","type":"application/json","size":309},{"uid":"1eebb641c1d9a48","name":"Response Body (Text)","source":"1eebb641c1d9a48.txt","type":"text/plain","size":35},{"uid":"707236cbc5cbf8c3","name":"Status response code: 400 (Expected: 200)","source":"707236cbc5cbf8c3.txt","type":"text/plain","size":3}],"parameters":[{"name":"payload","value":"AddToFavouritesPayload(request_id='request-id-1')"},{"name":"expected_status","value":"200"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":5,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"fb992aa6c3f473c1","name":"log","source":"fb992aa6c3f473c1.txt","type":"text/plain","size":5911},{"uid":"471cd32ee40259f3","name":"stderr","source":"471cd32ee40259f3.txt","type":"text/plain","size":6896}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":7,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"authenticated_api_req_context::0","time":{"start":1755422410949,"stop":1755422410953,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context::0","time":{"start":1755422410968,"stop":1755422410971,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1755422410972,"stop":1755422410980,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"normal"},{"name":"story","value":"Добавление в избранное"},{"name":"tag","value":"positive"},{"name":"tag","value":"smoke"},{"name":"tag","value":"favourites"},{"name":"tag","value":"user"},{"name":"parentSuite","value":"tests.user"},{"name":"suite","value":"test_user_favourites_api"},{"name":"subSuite","value":"TestUserFavouritesAPI"},{"name":"host","value":"pkrvmdgpy2b27sr"},{"name":"thread","value":"12-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.user.test_user_favourites_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1e3054065da78313","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1755422410869,"stop":1755422410889,"duration":20}},{"uid":"85d8ca7282977f0","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nPlanned Server Error","time":{"start":1755422410802,"stop":1755422410827,"duration":25}},{"uid":"98dab91f5f21ce53","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1755422410732,"stop":1755422410759,"duration":27}},{"uid":"1d1c1546f22057ab","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nPlanned Server Error","time":{"start":1755422410664,"stop":1755422410688,"duration":24}},{"uid":"ad82ae202016e604","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1755422410600,"stop":1755422410628,"duration":28}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":27,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":27},"items":[{"uid":"35355cf1076d5d29","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/115//#testresult/35355cf1076d5d29","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1755373121362,"stop":1755373121385,"duration":23}},{"uid":"9091044f86ecaa54","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/114//#testresult/9091044f86ecaa54","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nPlanned Server Error","time":{"start":1751392822990,"stop":1751392823007,"duration":17}},{"uid":"d91040e7984f21c4","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/113//#testresult/d91040e7984f21c4","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1751391610057,"stop":1751391610076,"duration":19}},{"uid":"fdf3d6b6c76d6244","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/112//#testresult/fdf3d6b6c76d6244","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1750873350743,"stop":1750873350786,"duration":43}},{"uid":"155d22c03d862460","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/111//#testresult/155d22c03d862460","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1750872840893,"stop":1750872840928,"duration":35}},{"uid":"d49d5eb680e336ca","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/110//#testresult/d49d5eb680e336ca","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1746737425812,"stop":1746737425853,"duration":41}},{"uid":"6a1c1ef312ba5eb4","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/109//#testresult/6a1c1ef312ba5eb4","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1746737207990,"stop":1746737208032,"duration":42}},{"uid":"4b133c75b4d77d9f","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/108//#testresult/4b133c75b4d77d9f","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nPlanned Server Error","time":{"start":1746559315713,"stop":1746559315757,"duration":44}},{"uid":"745bf45624617a0e","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/107//#testresult/745bf45624617a0e","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1746559024747,"stop":1746559024784,"duration":37}},{"uid":"3aef6968b3bd761c","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/106//#testresult/3aef6968b3bd761c","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1746525760167,"stop":1746525760210,"duration":43}},{"uid":"792837593500b512","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/105//#testresult/792837593500b512","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1746525196010,"stop":1746525196048,"duration":38}},{"uid":"b4188ea358108469","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/104//#testresult/b4188ea358108469","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1746488406457,"stop":1746488406507,"duration":50}},{"uid":"b84dd690234ddd21","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/103//#testresult/b84dd690234ddd21","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nPlanned Server Error","time":{"start":1746488160758,"stop":1746488160798,"duration":40}},{"uid":"21661139e13e4021","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/102//#testresult/21661139e13e4021","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1746487132454,"stop":1746487132493,"duration":39}},{"uid":"7cb8a2ae77f021c0","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/101//#testresult/7cb8a2ae77f021c0","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1746486679697,"stop":1746486679735,"duration":38}},{"uid":"bc97acb3818cc2b3","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/100//#testresult/bc97acb3818cc2b3","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1746483621202,"stop":1746483621245,"duration":43}},{"uid":"653c3b5788b582d","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/99//#testresult/653c3b5788b582d","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1746483424854,"stop":1746483424886,"duration":32}},{"uid":"f724a6c6e066e75c","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/98//#testresult/f724a6c6e066e75c","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1746482682281,"stop":1746482682317,"duration":36}},{"uid":"d22deb66476dc64e","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/97//#testresult/d22deb66476dc64e","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 400. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nFailed to add request to favourites","time":{"start":1746481276453,"stop":1746481276491,"duration":38}},{"uid":"76fa3d0a613bbdff","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/96//#testresult/76fa3d0a613bbdff","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user/favourites\nBody of the answer:\nPlanned Server Error","time":{"start":1746479138500,"stop":1746479138556,"duration":56}}]},"tags":["favourites","smoke","positive","user"]},"source":"ab1f6c97649f51df.json","parameterValues":[]}