{"uid":"7cc41f8f0bfa4547","name":"Тест получения деталей несуществующего запроса","fullName":"tests.request.test_request_api.TestRequestAPI#test_get_request_details_not_found","historyId":"26961aa1f740e62b43d9b1c13642c2bc","time":{"start":1755422410210,"stop":1755422410240,"duration":30},"description":"Проверяем получение ошибки 404 при запросе деталей по несуществующему ID.","descriptionHtml":"<p>Проверяем получение ошибки 404 при запросе деталей по несуществующему ID.</p>\n","status":"failed","statusMessage":"AssertionError: The status was pending 404, but received 500. URL: http://localhost:4040/api/request/non-existent-01d14f9b-4dcc-489a-a80a-8a833685b758\nBody of the answer:\nPlanned Server Error","statusTrace":"self = <tests.request.test_request_api.TestRequestAPI object at 0x7fd3a3ccd220>\nrequest_client = <api.request.client.RequestClient object at 0x7fd3a39a3230>\n\n    @allure.feature(\"Детали запроса (GET /api/request/{id})\")\n    @allure.story(\"Получение деталей\")\n    @allure.title(\"Тест получения деталей несуществующего запроса\")\n    @allure.description(\"Проверяем получение ошибки 404 при запросе деталей по несуществующему ID.\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.negative\n    def test_get_request_details_not_found(self, request_client: RequestClient) -> None:\n        \"\"\"\n        Проверка получения деталей несуществующего запроса.\n    \n        Ожидаемый результат: статус 404 Not Found.\n        \"\"\"\n        logger.info(\n            \"Тест: Получение деталей несуществующего запроса (GET /api/request/%s)\",\n            NON_EXISTENT_REQUEST_ID,\n        )\n>       response = request_client.get_request_details(\n            request_id=NON_EXISTENT_REQUEST_ID, expected_status=404\n        )  # type: ignore\n\ntests/request/test_request_api.py:152: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/request/client.py:65: in get_request_details\n    return self._handle_response(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.request.client.RequestClient object at 0x7fd3a39a3230>\nresponse = <APIResponse url='http://localhost:4040/api/request/non-existent-01d14f9b-4dcc-489a-a80a-8a833685b758' status=500 status_text='Internal Server Error'>\nexpected_status = 404, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 404, but received 500. URL: http://localhost:4040/api/request/non-existent-01d14f9b-4dcc-489a-a80a-8a833685b758\nE       Body of the answer:\nE       Planned Server Error\n\napi/base_api.py:69: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1755422408550,"stop":1755422408550,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1755422408550,"stop":1755422408550,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1755422408550,"stop":1755422408550,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1755422408551,"stop":1755422408551,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1755422408551,"stop":1755422409069,"duration":518},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1755422409070,"stop":1755422409084,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1755422409084,"stop":1755422409085,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"request_client","time":{"start":1755422409602,"stop":1755422409603,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем получение ошибки 404 при запросе деталей по несуществующему ID.","status":"failed","statusMessage":"AssertionError: The status was pending 404, but received 500. URL: http://localhost:4040/api/request/non-existent-01d14f9b-4dcc-489a-a80a-8a833685b758\nBody of the answer:\nPlanned Server Error","statusTrace":"self = <tests.request.test_request_api.TestRequestAPI object at 0x7fd3a3ccd220>\nrequest_client = <api.request.client.RequestClient object at 0x7fd3a39a3230>\n\n    @allure.feature(\"Детали запроса (GET /api/request/{id})\")\n    @allure.story(\"Получение деталей\")\n    @allure.title(\"Тест получения деталей несуществующего запроса\")\n    @allure.description(\"Проверяем получение ошибки 404 при запросе деталей по несуществующему ID.\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.negative\n    def test_get_request_details_not_found(self, request_client: RequestClient) -> None:\n        \"\"\"\n        Проверка получения деталей несуществующего запроса.\n    \n        Ожидаемый результат: статус 404 Not Found.\n        \"\"\"\n        logger.info(\n            \"Тест: Получение деталей несуществующего запроса (GET /api/request/%s)\",\n            NON_EXISTENT_REQUEST_ID,\n        )\n>       response = request_client.get_request_details(\n            request_id=NON_EXISTENT_REQUEST_ID, expected_status=404\n        )  # type: ignore\n\ntests/request/test_request_api.py:152: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/request/client.py:65: in get_request_details\n    return self._handle_response(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.request.client.RequestClient object at 0x7fd3a39a3230>\nresponse = <APIResponse url='http://localhost:4040/api/request/non-existent-01d14f9b-4dcc-489a-a80a-8a833685b758' status=500 status_text='Internal Server Error'>\nexpected_status = 404, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 404, but received 500. URL: http://localhost:4040/api/request/non-existent-01d14f9b-4dcc-489a-a80a-8a833685b758\nE       Body of the answer:\nE       Planned Server Error\n\napi/base_api.py:69: AssertionError","steps":[{"name":"Получение деталей запроса помощи: id='non-existent-01d14f9b-4dcc-489a-a80a-8a833685b758'","time":{"start":1755422410211,"stop":1755422410239,"duration":28},"status":"failed","statusMessage":"AssertionError: The status was pending 404, but received 500. URL: http://localhost:4040/api/request/non-existent-01d14f9b-4dcc-489a-a80a-8a833685b758\nBody of the answer:\nPlanned Server Error\n","statusTrace":"  File \"/app/.venv/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/app/api/request/client.py\", line 65, in get_request_details\n    return self._handle_response(\n           ~~~~~~~~~~~~~~~~~~~~~^\n        response,\n        ^^^^^^^^^\n        expected_status,\n        ^^^^^^^^^^^^^^^^\n        response_model=HelpRequestData if expected_status == 200 else None,\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/app/api/base_api.py\", line 69, in _handle_response\n    assert response.status == expected_status, (\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[{"uid":"5f38c41749bbcaa3","name":"Status Code: 500","source":"5f38c41749bbcaa3.txt","type":"text/plain","size":3},{"uid":"a1a01563b4579105","name":"Request URL","source":"a1a01563b4579105.uri","type":"text/uri-list","size":83},{"uid":"2ae6ecbbc129b86a","name":"Response Headers (JSON)","source":"2ae6ecbbc129b86a.json","type":"application/json","size":309},{"uid":"df42558bcb6d639c","name":"Response Body (Text)","source":"df42558bcb6d639c.txt","type":"text/plain","size":20},{"uid":"2d537c99e6ba31b6","name":"Status response code: 500 (Expected: 404)","source":"2d537c99e6ba31b6.txt","type":"text/plain","size":3}],"parameters":[{"name":"request_id","value":"'non-existent-01d14f9b-4dcc-489a-a80a-8a833685b758'"},{"name":"expected_status","value":"404"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":5,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"df04312c9d38e941","name":"log","source":"df04312c9d38e941.txt","type":"text/plain","size":4280},{"uid":"483367f13708b92d","name":"stderr","source":"483367f13708b92d.txt","type":"text/plain","size":4857}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":7,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"api_request_context::0","time":{"start":1755422410968,"stop":1755422410971,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1755422410972,"stop":1755422410980,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Детали запроса (GET /api/request/{id})"},{"name":"story","value":"Получение деталей"},{"name":"epic","value":"Запросы помощи"},{"name":"tag","value":"negative"},{"name":"tag","value":"request"},{"name":"parentSuite","value":"tests.request"},{"name":"suite","value":"test_request_api"},{"name":"subSuite","value":"TestRequestAPI"},{"name":"host","value":"pkrvmdgpy2b27sr"},{"name":"thread","value":"12-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.request.test_request_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"a501b63e51a2d162","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-01d14f9b-4dcc-489a-a80a-8a833685b758\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1755422410157,"stop":1755422410179,"duration":22}},{"uid":"7b0ffcd8b60a2e45","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-01d14f9b-4dcc-489a-a80a-8a833685b758\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1755422410094,"stop":1755422410126,"duration":32}},{"uid":"161404ec4c8ad32f","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 500. URL: http://localhost:4040/api/request/non-existent-01d14f9b-4dcc-489a-a80a-8a833685b758\nBody of the answer:\nPlanned Server Error","time":{"start":1755422410049,"stop":1755422410073,"duration":24}},{"uid":"961939df694b7fdd","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-01d14f9b-4dcc-489a-a80a-8a833685b758\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1755422410010,"stop":1755422410028,"duration":18}},{"uid":"dcf8ca9a533c32e6","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 500. URL: http://localhost:4040/api/request/non-existent-01d14f9b-4dcc-489a-a80a-8a833685b758\nBody of the answer:\nPlanned Server Error","time":{"start":1755422409962,"stop":1755422409986,"duration":24}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":27,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":27},"items":[{"uid":"b79b479af3c22e7e","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/115//#testresult/b79b479af3c22e7e","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-f174dde8-ff99-4318-a7f3-36f2dac486f5\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1755373120747,"stop":1755373120768,"duration":21}},{"uid":"c051a1cca7935822","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/114//#testresult/c051a1cca7935822","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-0770bcdf-2178-478f-b0df-9b48050846bb\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1751392822271,"stop":1751392822290,"duration":19}},{"uid":"9256fa8d6ae77d08","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/113//#testresult/9256fa8d6ae77d08","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-388e2f0c-df97-4bcd-a6ae-27c80c84306f\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1751391609314,"stop":1751391609334,"duration":20}},{"uid":"cce199ec81431682","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/112//#testresult/cce199ec81431682","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 500. URL: http://localhost:4040/api/request/non-existent-4f5be653-2ac9-44dc-baef-af02a36c31cd\nBody of the answer:\nPlanned Server Error","time":{"start":1750873349743,"stop":1750873349801,"duration":58}},{"uid":"88094cf80326c839","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/111//#testresult/88094cf80326c839","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-e5accc49-8018-49f9-b7f6-420bdc86b68d\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1750872839716,"stop":1750872839751,"duration":35}},{"uid":"5672eafd8a1ba874","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/110//#testresult/5672eafd8a1ba874","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-270bb9c0-e148-42e8-9e18-7f00359b501c\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746737424616,"stop":1746737424715,"duration":99}},{"uid":"ce1b3ba8f5e67f1c","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/109//#testresult/ce1b3ba8f5e67f1c","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-9333541c-2980-4e6c-9926-6c100eaf30c7\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746737207069,"stop":1746737207122,"duration":53}},{"uid":"ced7b7b08f75299d","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/108//#testresult/ced7b7b08f75299d","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-070d1118-1c0f-4235-9fa6-47cf14f0c6cd\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746559314660,"stop":1746559314697,"duration":37}},{"uid":"40362e10f8a99eb4","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/107//#testresult/40362e10f8a99eb4","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-3bce7c2a-3278-49c6-80b2-40a1e7cc9cf7\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746559023663,"stop":1746559023728,"duration":65}},{"uid":"1b341a59c07e1db6","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/106//#testresult/1b341a59c07e1db6","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-0a4e8475-b7d5-4c24-ab41-a68e87bed07e\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746525759239,"stop":1746525759337,"duration":98}},{"uid":"b3174670c470aa07","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/105//#testresult/b3174670c470aa07","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-9c741733-05ce-4d8f-b6bd-eeb075f3bc46\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746525194862,"stop":1746525194930,"duration":68}},{"uid":"9e610ced1ae17b","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/104//#testresult/9e610ced1ae17b","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-86c9a1fa-b714-4188-b021-30e608c4f463\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746488405441,"stop":1746488405512,"duration":71}},{"uid":"a74c41dcdc6de0b2","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/103//#testresult/a74c41dcdc6de0b2","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-6d528d72-671b-4399-a05a-35fa729704e4\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746488159959,"stop":1746488160010,"duration":51}},{"uid":"478f660b2f3d5d89","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/102//#testresult/478f660b2f3d5d89","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-ab4b452a-00ae-40ce-8436-e10ce63e8bad\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746487131531,"stop":1746487131621,"duration":90}},{"uid":"b1c229280895b020","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/101//#testresult/b1c229280895b020","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-51481f57-d8a6-4245-bd5f-33b5db4d0868\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746486678552,"stop":1746486678610,"duration":58}},{"uid":"5bd690c5b1e83168","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/100//#testresult/5bd690c5b1e83168","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-ef7a8520-2d74-427c-998a-137027f73a17\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746483620171,"stop":1746483620214,"duration":43}},{"uid":"92f80628f158ec1c","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/99//#testresult/92f80628f158ec1c","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 500. URL: http://localhost:4040/api/request/non-existent-21116e98-3d71-4e31-93a9-75e323c42fff\nBody of the answer:\nPlanned Server Error","time":{"start":1746483424278,"stop":1746483424308,"duration":30}},{"uid":"324cc09407d16372","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/98//#testresult/324cc09407d16372","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 500. URL: http://localhost:4040/api/request/non-existent-7e77ec47-6271-40fe-a7ef-6446c32e3517\nBody of the answer:\nPlanned Server Error","time":{"start":1746482681622,"stop":1746482681657,"duration":35}},{"uid":"a10126fd4a6db9a7","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/97//#testresult/a10126fd4a6db9a7","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 500. URL: http://localhost:4040/api/request/non-existent-a3462bd0-f6e2-4605-84d1-e25ed2c23061\nBody of the answer:\nPlanned Server Error","time":{"start":1746481275381,"stop":1746481275450,"duration":69}},{"uid":"61893e6cdba2a0bd","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/96//#testresult/61893e6cdba2a0bd","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-61b13df8-4f07-4ec8-a60c-b58425c756fb\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746479137657,"stop":1746479137696,"duration":39}}]},"tags":["request","negative"]},"source":"7cc41f8f0bfa4547.json","parameterValues":[]}