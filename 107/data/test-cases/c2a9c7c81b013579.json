{"uid":"c2a9c7c81b013579","name":"Тест удаления несуществующего ID из избранного","fullName":"tests.user.test_user_api.TestUserAPI#test_remove_from_favourites_not_found","historyId":"a824f132e0d4f3dbee701c192815afe3","time":{"start":1746559024337,"stop":1746559024376,"duration":39},"description":"Проверяем, что при попытке удалить несуществующий ID возвращается ошибка 400.","descriptionHtml":"<p>Проверяем, что при попытке удалить несуществующий ID возвращается ошибка 400.</p>\n","status":"failed","statusMessage":"AssertionError: The status was pending 400, but received 500. URL: http://localhost:4040/api/user/favourites/non-existent-a3ccbe10-fd9d-4638-b1c2-9ce3a9b61218\nBody of the answer:\nPlanned Server Error","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7efed96e2f90>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7efed948d040>\n\n    @allure.feature(\"Избранное пользователя (DELETE /api/user/favourites/{id})\")\n    @allure.story(\"Удаление из избранного\")\n    @allure.title(\"Тест удаления несуществующего ID из избранного\")\n    @allure.description(\n        \"Проверяем, что при попытке удалить несуществующий ID возвращается ошибка 400.\"\n    )\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.negative\n    def test_remove_from_favourites_not_found(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка удаления несуществующего запроса из избранного.\n    \n        Ожидаемый результат: статус 400 Bad Request .\n        \"\"\"\n        logger.info(\n            \"Тест: Удаление несуществующего ID из избранного (DELETE .../%s)\", NON_EXISTENT_ID\n        )\n>       response = authenticated_user_client.remove_from_favourites(\n            request_id=NON_EXISTENT_ID, expected_status=400\n        )  # type: ignore\n\ntests/user/test_user_api.py:156: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/user/client.py:82: in remove_from_favourites\n    processed_response = self._handle_response(response, expected_status)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.user.client.UserClient object at 0x7efed948d040>\nresponse = <APIResponse url='http://localhost:4040/api/user/favourites/non-existent-a3ccbe10-fd9d-4638-b1c2-9ce3a9b61218' status=500 status_text='Internal Server Error'>\nexpected_status = 400, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 400, but received 500. URL: http://localhost:4040/api/user/favourites/non-existent-a3ccbe10-fd9d-4638-b1c2-9ce3a9b61218\nE       Body of the answer:\nE       Planned Server Error\n\napi/base_api.py:69: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1746559020919,"stop":1746559020919,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1746559020921,"stop":1746559020921,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1746559020921,"stop":1746559020921,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1746559020921,"stop":1746559020921,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1746559020922,"stop":1746559021453,"duration":531},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1746559021454,"stop":1746559021481,"duration":27},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1746559021481,"stop":1746559021482,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_client","time":{"start":1746559021482,"stop":1746559021483,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_token","time":{"start":1746559023620,"stop":1746559023722,"duration":102},"status":"passed","steps":[],"attachments":[{"uid":"caeef3b8d3c5b92e","name":"Status Code: 200","source":"caeef3b8d3c5b92e.txt","type":"text/plain","size":3},{"uid":"9d3967178ca5633","name":"Request URL","source":"9d3967178ca5633.uri","type":"text/uri-list","size":30},{"uid":"5601366092fef309","name":"Response Headers (JSON)","source":"5601366092fef309.json","type":"application/json","size":317},{"uid":"9902013f3c309a39","name":"Response Body (JSON)","source":"9902013f3c309a39.json","type":"application/json","size":224},{"uid":"edeb1a7b47346efa","name":"Status response code: 200 (Expected: 200)","source":"edeb1a7b47346efa.txt","type":"text/plain","size":3},{"uid":"2127589f222ccf83","name":"Body of the answer (failed by AuthSuccessResponse)","source":"2127589f222ccf83.json","type":"application/json","size":220}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"authenticated_api_req_context","time":{"start":1746559024326,"stop":1746559024336,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_user_client","time":{"start":1746559024336,"stop":1746559024336,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_http_client","time":{"start":1746559024336,"stop":1746559024336,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем, что при попытке удалить несуществующий ID возвращается ошибка 400.","status":"failed","statusMessage":"AssertionError: The status was pending 400, but received 500. URL: http://localhost:4040/api/user/favourites/non-existent-a3ccbe10-fd9d-4638-b1c2-9ce3a9b61218\nBody of the answer:\nPlanned Server Error","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7efed96e2f90>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7efed948d040>\n\n    @allure.feature(\"Избранное пользователя (DELETE /api/user/favourites/{id})\")\n    @allure.story(\"Удаление из избранного\")\n    @allure.title(\"Тест удаления несуществующего ID из избранного\")\n    @allure.description(\n        \"Проверяем, что при попытке удалить несуществующий ID возвращается ошибка 400.\"\n    )\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.negative\n    def test_remove_from_favourites_not_found(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка удаления несуществующего запроса из избранного.\n    \n        Ожидаемый результат: статус 400 Bad Request .\n        \"\"\"\n        logger.info(\n            \"Тест: Удаление несуществующего ID из избранного (DELETE .../%s)\", NON_EXISTENT_ID\n        )\n>       response = authenticated_user_client.remove_from_favourites(\n            request_id=NON_EXISTENT_ID, expected_status=400\n        )  # type: ignore\n\ntests/user/test_user_api.py:156: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/user/client.py:82: in remove_from_favourites\n    processed_response = self._handle_response(response, expected_status)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.user.client.UserClient object at 0x7efed948d040>\nresponse = <APIResponse url='http://localhost:4040/api/user/favourites/non-existent-a3ccbe10-fd9d-4638-b1c2-9ce3a9b61218' status=500 status_text='Internal Server Error'>\nexpected_status = 400, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 400, but received 500. URL: http://localhost:4040/api/user/favourites/non-existent-a3ccbe10-fd9d-4638-b1c2-9ce3a9b61218\nE       Body of the answer:\nE       Planned Server Error\n\napi/base_api.py:69: AssertionError","steps":[{"name":"Удаление запроса из избранного","time":{"start":1746559024337,"stop":1746559024375,"duration":38},"status":"failed","statusMessage":"AssertionError: The status was pending 400, but received 500. URL: http://localhost:4040/api/user/favourites/non-existent-a3ccbe10-fd9d-4638-b1c2-9ce3a9b61218\nBody of the answer:\nPlanned Server Error\n","statusTrace":"  File \"/app/.venv/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/app/api/user/client.py\", line 82, in remove_from_favourites\n    processed_response = self._handle_response(response, expected_status)\n  File \"/app/api/base_api.py\", line 69, in _handle_response\n    assert response.status == expected_status, (\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[{"uid":"3416b5ed47379995","name":"Status Code: 500","source":"3416b5ed47379995.txt","type":"text/plain","size":3},{"uid":"52c10d717d0a202e","name":"Request URL","source":"52c10d717d0a202e.uri","type":"text/uri-list","size":91},{"uid":"9154d0332c1164c3","name":"Response Headers (JSON)","source":"9154d0332c1164c3.json","type":"application/json","size":309},{"uid":"191df8d6f61e7b1e","name":"Response Body (Text)","source":"191df8d6f61e7b1e.txt","type":"text/plain","size":20},{"uid":"deaafc66ec09f67e","name":"Status response code: 500 (Expected: 400)","source":"deaafc66ec09f67e.txt","type":"text/plain","size":3}],"parameters":[{"name":"request_id","value":"'non-existent-a3ccbe10-fd9d-4638-b1c2-9ce3a9b61218'"},{"name":"expected_status","value":"400"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":5,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"14ada1d9281d629a","name":"log","source":"14ada1d9281d629a.txt","type":"text/plain","size":6703},{"uid":"11f3c788eab41b75","name":"stderr","source":"11f3c788eab41b75.txt","type":"text/plain","size":7688}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":7,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"authenticated_api_req_context::0","time":{"start":1746559024388,"stop":1746559024397,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context::0","time":{"start":1746559024414,"stop":1746559024423,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1746559024424,"stop":1746559024433,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"Удаление из избранного"},{"name":"severity","value":"normal"},{"name":"feature","value":"Избранное пользователя (DELETE /api/user/favourites/{id})"},{"name":"epic","value":"Управление пользователем"},{"name":"tag","value":"negative"},{"name":"tag","value":"user"},{"name":"parentSuite","value":"tests.user"},{"name":"suite","value":"test_user_api"},{"name":"subSuite","value":"TestUserAPI"},{"name":"host","value":"fv-az1756-922"},{"name":"thread","value":"12-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.user.test_user_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"eced846d99499e2f","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-a3ccbe10-fd9d-4638-b1c2-9ce3a9b61218\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746559024251,"stop":1746559024295,"duration":44}},{"uid":"9a4ea347345d32cc","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 500. URL: http://localhost:4040/api/user/favourites/non-existent-a3ccbe10-fd9d-4638-b1c2-9ce3a9b61218\nBody of the answer:\nPlanned Server Error","time":{"start":1746559024112,"stop":1746559024180,"duration":68}},{"uid":"611b87686e2924ff","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 500. URL: http://localhost:4040/api/user/favourites/non-existent-a3ccbe10-fd9d-4638-b1c2-9ce3a9b61218\nBody of the answer:\nPlanned Server Error","time":{"start":1746559023966,"stop":1746559024032,"duration":66}},{"uid":"7da85b8e6dc8df30","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-a3ccbe10-fd9d-4638-b1c2-9ce3a9b61218\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746559023871,"stop":1746559023924,"duration":53}},{"uid":"b2500cdc1bf4648f","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-a3ccbe10-fd9d-4638-b1c2-9ce3a9b61218\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746559023741,"stop":1746559023815,"duration":74}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":18,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":18},"items":[{"uid":"acb99f2ea936815e","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/106//#testresult/acb99f2ea936815e","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-b59df773-e6a0-414b-982a-a08afde8264e\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746525759971,"stop":1746525760022,"duration":51}},{"uid":"a95fca99251eb046","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/105//#testresult/a95fca99251eb046","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-7725f22b-b182-4b14-ab06-b1aac038b755\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746525195347,"stop":1746525195418,"duration":71}},{"uid":"783890792e70716b","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/104//#testresult/783890792e70716b","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-63c39c6d-cb8c-46c0-b657-f9e1c7120829\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746488406418,"stop":1746488406456,"duration":38}},{"uid":"25910f4e438b6cf1","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/103//#testresult/25910f4e438b6cf1","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-952d5d02-3f55-418d-b19a-16a085d4733d\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746488160827,"stop":1746488160877,"duration":50}},{"uid":"2723d6a8b001468f","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/102//#testresult/2723d6a8b001468f","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 500. URL: http://localhost:4040/api/user/favourites/non-existent-084a014d-2ffc-4f04-93c8-10197ce3f8ed\nBody of the answer:\nPlanned Server Error","time":{"start":1746487132246,"stop":1746487132290,"duration":44}},{"uid":"e71430775ca7f1a1","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/101//#testresult/e71430775ca7f1a1","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-94e29d06-1c22-455d-9e09-960283c7e6e6\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746486679360,"stop":1746486679402,"duration":42}},{"uid":"96c98fb2ffbbbde9","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/100//#testresult/96c98fb2ffbbbde9","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-889ca45e-dfdf-4c53-adeb-e7659861c34a\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746483621088,"stop":1746483621139,"duration":51}},{"uid":"2632d23e1e6124fa","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/99//#testresult/2632d23e1e6124fa","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-466296bd-6d44-4540-91f9-42184e2aef81\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746483424709,"stop":1746483424743,"duration":34}},{"uid":"ed85e8a88a9235d6","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/98//#testresult/ed85e8a88a9235d6","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-9c5886e2-ce5b-4fd6-99d4-deb92b415b6c\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746482682127,"stop":1746482682162,"duration":35}},{"uid":"8c169e944077177","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/97//#testresult/8c169e944077177","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-0c38e5d7-398f-4029-b89a-31c1d6376928\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746481276073,"stop":1746481276112,"duration":39}},{"uid":"3611555f510e7d8d","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/96//#testresult/3611555f510e7d8d","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-2570a3e8-f61e-494b-afa3-6629a139991c\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746479138652,"stop":1746479138693,"duration":41}},{"uid":"2d79be3171d7e108","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/95//#testresult/2d79be3171d7e108","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-7175dfd5-e291-4cf9-ab46-082571e2a1e8\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746478918601,"stop":1746478918633,"duration":32}},{"uid":"60daaef812a530d7","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/94//#testresult/60daaef812a530d7","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 500. URL: http://localhost:4040/api/user/favourites/non-existent-88f9dc84-64f3-4370-be14-f67aa33351e4\nBody of the answer:\nPlanned Server Error","time":{"start":1746398528051,"stop":1746398528116,"duration":65}},{"uid":"c63f5f64cbe60a2","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/93//#testresult/c63f5f64cbe60a2","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 500. URL: http://localhost:4040/api/user/favourites/non-existent-5f1f53bf-3651-47b9-92e0-48097b05b72b\nBody of the answer:\nPlanned Server Error","time":{"start":1746398347765,"stop":1746398347804,"duration":39}},{"uid":"1aae161aee193fd","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/92//#testresult/1aae161aee193fd","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-d3e9320c-48c0-4279-8d11-88bf44fa62ca\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746398074244,"stop":1746398074282,"duration":38}},{"uid":"634af67c5b80f44","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/91//#testresult/634af67c5b80f44","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-6036b52e-e56b-42cb-84ec-83f9261f4356\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746395044502,"stop":1746395044543,"duration":41}},{"uid":"acc8746b292e8a02","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/90//#testresult/acc8746b292e8a02","status":"failed","statusDetails":"AssertionError: The status was pending 400, but received 200. URL: http://localhost:4040/api/user/favourites/non-existent-cc78c951-81fd-4894-a49e-25333a55a136\nBody of the answer:\nRequest is removed form Favourites successfully.","time":{"start":1746394513674,"stop":1746394513748,"duration":74}}]},"tags":["negative","user"]},"source":"c2a9c7c81b013579.json","parameterValues":[]}