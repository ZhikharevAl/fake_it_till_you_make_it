{"uid":"94d2c2c62543689d","name":"Тест успешного внесения вклада в существующий запрос","fullName":"tests.request.test_request_api.TestRequestAPI#test_contribute_success","historyId":"669c54e9452a544e52cd8b6d124e1e96","time":{"start":1746559023516,"stop":1746559023583,"duration":67},"description":"Проверяем возможность внести вклад в существующий запрос.","descriptionHtml":"<p>Проверяем возможность внести вклад в существующий запрос.</p>\n","status":"failed","statusMessage":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\nPlanned Server Error","statusTrace":"self = <tests.request.test_request_api.TestRequestAPI object at 0x7f3349d2dfd0>\nrequest_client = <api.request.client.RequestClient object at 0x7f3349bc2ba0>\n\n    @allure.feature(\"Вклад в запрос (POST /api/request/{id}/contribution)\")\n    @allure.story(\"Внесение вклада\")\n    @allure.title(\"Тест успешного внесения вклада в существующий запрос\")\n    @allure.description(\"Проверяем возможность внести вклад в существующий запрос.\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.positive\n    def test_contribute_success(self, request_client: RequestClient) -> None:\n        \"\"\"\n        Проверка успешного внесения вклада (без тела запроса).\n    \n        Ожидаемый результат: статус 200 и текстовое сообщение.\n        \"\"\"\n        logger.info(\n            \"Тест: Успешное внесение вклада (POST /api/request/%s/contribution)\",\n            EXISTING_REQUEST_ID,\n        )\n>       response = request_client.contribute_to_request(\n            request_id=EXISTING_REQUEST_ID, expected_status=200\n        )  # type: ignore\n\ntests/request/test_request_api.py:194: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/request/client.py:81: in contribute_to_request\n    processed_response = self._handle_response(response, expected_status)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.request.client.RequestClient object at 0x7f3349bc2ba0>\nresponse = <APIResponse url='http://localhost:4040/api/request/request-id-1/contribution' status=500 status_text='Internal Server Error'>\nexpected_status = 200, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/request/request-id-1/contribution\nE       Body of the answer:\nE       Planned Server Error\n\napi/base_api.py:69: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1746559020919,"stop":1746559020920,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1746559020920,"stop":1746559020920,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1746559020920,"stop":1746559020920,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1746559020921,"stop":1746559021425,"duration":504},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1746559020921,"stop":1746559020921,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1746559021425,"stop":1746559021453,"duration":28},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1746559021453,"stop":1746559021454,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"request_client","time":{"start":1746559022471,"stop":1746559022471,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем возможность внести вклад в существующий запрос.","status":"failed","statusMessage":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\nPlanned Server Error","statusTrace":"self = <tests.request.test_request_api.TestRequestAPI object at 0x7f3349d2dfd0>\nrequest_client = <api.request.client.RequestClient object at 0x7f3349bc2ba0>\n\n    @allure.feature(\"Вклад в запрос (POST /api/request/{id}/contribution)\")\n    @allure.story(\"Внесение вклада\")\n    @allure.title(\"Тест успешного внесения вклада в существующий запрос\")\n    @allure.description(\"Проверяем возможность внести вклад в существующий запрос.\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.positive\n    def test_contribute_success(self, request_client: RequestClient) -> None:\n        \"\"\"\n        Проверка успешного внесения вклада (без тела запроса).\n    \n        Ожидаемый результат: статус 200 и текстовое сообщение.\n        \"\"\"\n        logger.info(\n            \"Тест: Успешное внесение вклада (POST /api/request/%s/contribution)\",\n            EXISTING_REQUEST_ID,\n        )\n>       response = request_client.contribute_to_request(\n            request_id=EXISTING_REQUEST_ID, expected_status=200\n        )  # type: ignore\n\ntests/request/test_request_api.py:194: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/request/client.py:81: in contribute_to_request\n    processed_response = self._handle_response(response, expected_status)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.request.client.RequestClient object at 0x7f3349bc2ba0>\nresponse = <APIResponse url='http://localhost:4040/api/request/request-id-1/contribution' status=500 status_text='Internal Server Error'>\nexpected_status = 200, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/request/request-id-1/contribution\nE       Body of the answer:\nE       Planned Server Error\n\napi/base_api.py:69: AssertionError","steps":[{"name":"Внесение вклада в запрос помощи: id='request-id-1'","time":{"start":1746559023516,"stop":1746559023582,"duration":66},"status":"failed","statusMessage":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\nPlanned Server Error\n","statusTrace":"  File \"/app/.venv/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/app/api/request/client.py\", line 81, in contribute_to_request\n    processed_response = self._handle_response(response, expected_status)\n  File \"/app/api/base_api.py\", line 69, in _handle_response\n    assert response.status == expected_status, (\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[{"uid":"711b25217a5c1c4","name":"Status Code: 500","source":"711b25217a5c1c4.txt","type":"text/plain","size":3},{"uid":"785b83d0f7e8abeb","name":"Request URL","source":"785b83d0f7e8abeb.uri","type":"text/uri-list","size":59},{"uid":"fbede3961b677d1f","name":"Response Headers (JSON)","source":"fbede3961b677d1f.json","type":"application/json","size":309},{"uid":"1e6d4bdd12c7739","name":"Response Body (Text)","source":"1e6d4bdd12c7739.txt","type":"text/plain","size":20},{"uid":"6f8ac9ace79925a8","name":"Status response code: 500 (Expected: 200)","source":"6f8ac9ace79925a8.txt","type":"text/plain","size":3}],"parameters":[{"name":"request_id","value":"'request-id-1'"},{"name":"expected_status","value":"200"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":5,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"cc4a90fa23bab069","name":"log","source":"cc4a90fa23bab069.txt","type":"text/plain","size":3142},{"uid":"78d389b2c7816600","name":"stderr","source":"78d389b2c7816600.txt","type":"text/plain","size":3671}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":7,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"api_request_context::0","time":{"start":1746559024193,"stop":1746559024210,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1746559024211,"stop":1746559024221,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Запросы помощи"},{"name":"story","value":"Внесение вклада"},{"name":"severity","value":"normal"},{"name":"feature","value":"Вклад в запрос (POST /api/request/{id}/contribution)"},{"name":"tag","value":"positive"},{"name":"tag","value":"request"},{"name":"parentSuite","value":"tests.request"},{"name":"suite","value":"test_request_api"},{"name":"subSuite","value":"TestRequestAPI"},{"name":"host","value":"fv-az1756-922"},{"name":"thread","value":"9-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.request.test_request_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6266dc2ecb65fb0e","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746559023426,"stop":1746559023480,"duration":54}},{"uid":"9e41ec0e31ac725d","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746559023336,"stop":1746559023390,"duration":54}},{"uid":"2be66fae9b6d1540","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746559023245,"stop":1746559023301,"duration":56}},{"uid":"f38e67b343df169c","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746559023155,"stop":1746559023210,"duration":55}},{"uid":"4997b014e25a7671","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746559023024,"stop":1746559023119,"duration":95}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":18,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":18},"items":[{"uid":"b2aa8ea986395054","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/106//#testresult/b2aa8ea986395054","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746525758959,"stop":1746525759016,"duration":57}},{"uid":"34f26e2dae87e1d8","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/105//#testresult/34f26e2dae87e1d8","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746525194731,"stop":1746525194783,"duration":52}},{"uid":"a60f4b9934c34cb0","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/104//#testresult/a60f4b9934c34cb0","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\nPlanned Server Error","time":{"start":1746488405484,"stop":1746488405549,"duration":65}},{"uid":"ae9c11d40a749226","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/103//#testresult/ae9c11d40a749226","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746488159783,"stop":1746488159844,"duration":61}},{"uid":"36cc6059f08baf45","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/102//#testresult/36cc6059f08baf45","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746487131417,"stop":1746487131471,"duration":54}},{"uid":"1c4660b2b8cd380a","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/101//#testresult/1c4660b2b8cd380a","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746486678473,"stop":1746486678524,"duration":51}},{"uid":"9940b875340753ae","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/100//#testresult/9940b875340753ae","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\nPlanned Server Error","time":{"start":1746483619945,"stop":1746483620016,"duration":71}},{"uid":"7f8b11a5d5b14626","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/99//#testresult/7f8b11a5d5b14626","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746483424361,"stop":1746483424384,"duration":23}},{"uid":"8b8c7f23171ae357","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/98//#testresult/8b8c7f23171ae357","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746482681722,"stop":1746482681750,"duration":28}},{"uid":"2946623d051c615f","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/97//#testresult/2946623d051c615f","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746481275338,"stop":1746481275390,"duration":52}},{"uid":"d9370578e2adf71","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/96//#testresult/d9370578e2adf71","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746479137468,"stop":1746479137522,"duration":54}},{"uid":"fe1107799b8d0f8","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/95//#testresult/fe1107799b8d0f8","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746478918246,"stop":1746478918270,"duration":24}},{"uid":"82635cd75839e520","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/94//#testresult/82635cd75839e520","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\nPlanned Server Error","time":{"start":1746398527013,"stop":1746398527085,"duration":72}},{"uid":"d7b861e8be9f5a40","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/93//#testresult/d7b861e8be9f5a40","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746398346885,"stop":1746398346966,"duration":81}},{"uid":"fd40498e1e9733d8","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/92//#testresult/fd40498e1e9733d8","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746398073883,"stop":1746398073907,"duration":24}},{"uid":"99203c8096181b02","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/91//#testresult/99203c8096181b02","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746395043331,"stop":1746395043387,"duration":56}},{"uid":"ddf2423c5767cb15","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/90//#testresult/ddf2423c5767cb15","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746394513055,"stop":1746394513106,"duration":51}}]},"tags":["request","positive"]},"source":"94d2c2c62543689d.json","parameterValues":[]}