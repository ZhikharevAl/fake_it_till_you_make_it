{"uid":"38f430b4f9790056","name":"Тест внесения вклада в несуществующий запрос","fullName":"tests.request.test_request_api.TestRequestAPI#test_contribute_not_found","historyId":"f35ec1402f8fdf4c2858bcd70942d7cb","time":{"start":1758232149379,"stop":1758232149399,"duration":20},"description":"Проверяем получение ошибки 404 при попытке внести вклад в несуществующий запрос.","descriptionHtml":"<p>Проверяем получение ошибки 404 при попытке внести вклад в несуществующий запрос.</p>\n","status":"failed","statusMessage":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-06ccc3a3-8945-45f2-8e1a-a7db93f804d8/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","statusTrace":"self = <tests.request.test_request_api.TestRequestAPI object at 0x7fdf211fead0>\nrequest_client = <api.request.client.RequestClient object at 0x7fdf206a5550>\n\n    @allure.feature(\"Вклад в запрос (POST /api/request/{id}/contribution)\")\n    @allure.story(\"Внесение вклада\")\n    @allure.title(\"Тест внесения вклада в несуществующий запрос\")\n    @allure.description(\n        \"Проверяем получение ошибки 404 при попытке внести вклад в несуществующий запрос.\"\n    )\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.negative\n    def test_contribute_not_found(self, request_client: RequestClient) -> None:\n        \"\"\"\n        Проверка внесения вклада для несуществующего запроса.\n    \n        Ожидаемый результат: статус 404 Not Found.\n        \"\"\"\n        logger.info(\n            \"Тест: Внесение вклада в несуществующий запрос (POST /api/request/%s/contribution)\",\n            NON_EXISTENT_REQUEST_ID,\n        )\n>       response = request_client.contribute_to_request(\n            request_id=NON_EXISTENT_REQUEST_ID, expected_status=404\n        )  # type: ignore\n\ntests/request/test_request_api.py:224: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/request/client.py:81: in contribute_to_request\n    processed_response = self._handle_response(response, expected_status)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.request.client.RequestClient object at 0x7fdf206a5550>\nresponse = <APIResponse url='http://localhost:4040/api/request/non-existent-06ccc3a3-8945-45f2-8e1a-a7db93f804d8/contribution' status=403 status_text='Forbidden'>\nexpected_status = 404, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-06ccc3a3-8945-45f2-8e1a-a7db93f804d8/contribution\nE       Body of the answer:\nE       {\"message\":\"No token provided.\"}\n\napi/base_api.py:69: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1758232147984,"stop":1758232147985,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1758232147985,"stop":1758232147985,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1758232147985,"stop":1758232147985,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1758232147985,"stop":1758232147985,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1758232147986,"stop":1758232148486,"duration":500},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1758232148487,"stop":1758232148510,"duration":23},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1758232148510,"stop":1758232148510,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"request_client","time":{"start":1758232149107,"stop":1758232149108,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем получение ошибки 404 при попытке внести вклад в несуществующий запрос.","status":"failed","statusMessage":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-06ccc3a3-8945-45f2-8e1a-a7db93f804d8/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","statusTrace":"self = <tests.request.test_request_api.TestRequestAPI object at 0x7fdf211fead0>\nrequest_client = <api.request.client.RequestClient object at 0x7fdf206a5550>\n\n    @allure.feature(\"Вклад в запрос (POST /api/request/{id}/contribution)\")\n    @allure.story(\"Внесение вклада\")\n    @allure.title(\"Тест внесения вклада в несуществующий запрос\")\n    @allure.description(\n        \"Проверяем получение ошибки 404 при попытке внести вклад в несуществующий запрос.\"\n    )\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.negative\n    def test_contribute_not_found(self, request_client: RequestClient) -> None:\n        \"\"\"\n        Проверка внесения вклада для несуществующего запроса.\n    \n        Ожидаемый результат: статус 404 Not Found.\n        \"\"\"\n        logger.info(\n            \"Тест: Внесение вклада в несуществующий запрос (POST /api/request/%s/contribution)\",\n            NON_EXISTENT_REQUEST_ID,\n        )\n>       response = request_client.contribute_to_request(\n            request_id=NON_EXISTENT_REQUEST_ID, expected_status=404\n        )  # type: ignore\n\ntests/request/test_request_api.py:224: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/request/client.py:81: in contribute_to_request\n    processed_response = self._handle_response(response, expected_status)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.request.client.RequestClient object at 0x7fdf206a5550>\nresponse = <APIResponse url='http://localhost:4040/api/request/non-existent-06ccc3a3-8945-45f2-8e1a-a7db93f804d8/contribution' status=403 status_text='Forbidden'>\nexpected_status = 404, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-06ccc3a3-8945-45f2-8e1a-a7db93f804d8/contribution\nE       Body of the answer:\nE       {\"message\":\"No token provided.\"}\n\napi/base_api.py:69: AssertionError","steps":[{"name":"Внесение вклада в запрос помощи: id='non-existent-06ccc3a3-8945-45f2-8e1a-a7db93f804d8'","time":{"start":1758232149379,"stop":1758232149398,"duration":19},"status":"failed","statusMessage":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-06ccc3a3-8945-45f2-8e1a-a7db93f804d8/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}\n","statusTrace":"  File \"/app/.venv/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/app/api/request/client.py\", line 81, in contribute_to_request\n    processed_response = self._handle_response(response, expected_status)\n  File \"/app/api/base_api.py\", line 69, in _handle_response\n    assert response.status == expected_status, (\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[{"uid":"4d2e145290a9af10","name":"Status Code: 403","source":"4d2e145290a9af10.txt","type":"text/plain","size":3},{"uid":"1df619252cb5c210","name":"Request URL","source":"1df619252cb5c210.uri","type":"text/uri-list","size":96},{"uid":"cdb286b0364424d1","name":"Response Headers (JSON)","source":"cdb286b0364424d1.json","type":"application/json","size":316},{"uid":"659c75ee94aaccbb","name":"Response Body (JSON)","source":"659c75ee94aaccbb.json","type":"application/json","size":39},{"uid":"1ebc459fbb00630f","name":"Status response code: 403 (Expected: 404)","source":"1ebc459fbb00630f.txt","type":"text/plain","size":3}],"parameters":[{"name":"request_id","value":"'non-existent-06ccc3a3-8945-45f2-8e1a-a7db93f804d8'"},{"name":"expected_status","value":"404"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":5,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"dcaf7eec1f196eb0","name":"log","source":"dcaf7eec1f196eb0.txt","type":"text/plain","size":4413},{"uid":"a357afcfb1ef2e52","name":"stderr","source":"a357afcfb1ef2e52.txt","type":"text/plain","size":4987}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":7,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"api_request_context::0","time":{"start":1758232150502,"stop":1758232150506,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1758232150506,"stop":1758232150516,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Вклад в запрос (POST /api/request/{id}/contribution)"},{"name":"severity","value":"normal"},{"name":"epic","value":"Запросы помощи"},{"name":"story","value":"Внесение вклада"},{"name":"tag","value":"negative"},{"name":"tag","value":"request"},{"name":"parentSuite","value":"tests.request"},{"name":"suite","value":"test_request_api"},{"name":"subSuite","value":"TestRequestAPI"},{"name":"host","value":"runnervmyfcvg"},{"name":"thread","value":"3-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.request.test_request_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ac35fcb8055e1ada","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 500. URL: http://localhost:4040/api/request/non-existent-06ccc3a3-8945-45f2-8e1a-a7db93f804d8/contribution\nBody of the answer:\nPlanned Server Error","time":{"start":1758232149321,"stop":1758232149346,"duration":25}},{"uid":"8df20e1886086cf4","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 500. URL: http://localhost:4040/api/request/non-existent-06ccc3a3-8945-45f2-8e1a-a7db93f804d8/contribution\nBody of the answer:\nPlanned Server Error","time":{"start":1758232149264,"stop":1758232149290,"duration":26}},{"uid":"52c2a66bc98ccebc","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-06ccc3a3-8945-45f2-8e1a-a7db93f804d8/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1758232149208,"stop":1758232149231,"duration":23}},{"uid":"6a9bc4b3b1da9377","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-06ccc3a3-8945-45f2-8e1a-a7db93f804d8/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1758232149158,"stop":1758232149178,"duration":20}},{"uid":"671cf1d94ead7771","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-06ccc3a3-8945-45f2-8e1a-a7db93f804d8/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1758232149109,"stop":1758232149137,"duration":28}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":10,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":10},"items":[{"uid":"51a2f0a27edac441","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/127//#testresult/51a2f0a27edac441","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 500. URL: http://localhost:4040/api/request/non-existent-4469ace7-8dd7-4660-983b-2d24d2b512c8/contribution\nBody of the answer:\nPlanned Server Error","time":{"start":1758231643801,"stop":1758231643816,"duration":15}},{"uid":"79374e880680cd77","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/126//#testresult/79374e880680cd77","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-999b43b6-f3f5-40c9-9e4d-cbbcadbfddb7/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1758231402209,"stop":1758231402229,"duration":20}},{"uid":"99cfd7bd8f0a864c","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/125//#testresult/99cfd7bd8f0a864c","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-fe746ecd-2a68-40ae-8ff9-8020a38c6619/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1758230435414,"stop":1758230435434,"duration":20}},{"uid":"42fe42e31b0cdf5d","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/124//#testresult/42fe42e31b0cdf5d","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-1cb58d36-5927-46bf-ab17-0086cb034369/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1755538569903,"stop":1755538569922,"duration":19}},{"uid":"ddbc663e646b6920","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/123//#testresult/ddbc663e646b6920","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-17964286-5716-427d-8668-ef4e30cfa5f9/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1755511586989,"stop":1755511587010,"duration":21}},{"uid":"aad4ee1c62772900","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/122//#testresult/aad4ee1c62772900","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-7647a679-2d46-4b66-a82a-3cf2eec92d62/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1755511257414,"stop":1755511257435,"duration":21}},{"uid":"650764292674381","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/121//#testresult/650764292674381","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 500. URL: http://localhost:4040/api/request/non-existent-60648366-602c-4501-833f-ef0c5f4d44f7/contribution\nBody of the answer:\nPlanned Server Error","time":{"start":1755508617564,"stop":1755508617589,"duration":25}},{"uid":"e29e0fe2690afaf","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/120//#testresult/e29e0fe2690afaf","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-3353130a-a5eb-49ae-9a4e-74aef789469c/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1755508196080,"stop":1755508196101,"duration":21}},{"uid":"aed6ff97ea5fa44c","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/119//#testresult/aed6ff97ea5fa44c","status":"failed","statusDetails":"AssertionError: The status was pending 404, but received 403. URL: http://localhost:4040/api/request/non-existent-6036a086-9ec4-4a9c-a0a5-af816c2c1c8f/contribution\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1755507568917,"stop":1755507568939,"duration":22}}]},"tags":["request","negative"]},"source":"38f430b4f9790056.json","parameterValues":[]}