{"uid":"28a0ec43f3eaacaa","name":"Тест успешного получения данных пользователя","fullName":"tests.user.test_user_api.TestUserAPI#test_get_user_info_success","historyId":"ce00374a95389d718a8d728c79e283b3","time":{"start":1750873350155,"stop":1750873350205,"duration":50},"description":"Проверяем получение данных профиля для аутентифицированного пользователя.","descriptionHtml":"<p>Проверяем получение данных профиля для аутентифицированного пользователя.</p>\n","status":"failed","statusMessage":"AssertionError: assert 'Ведущий функциональный техник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Ведущий функциональный техник","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f56b25a56d0>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f56b0ca03b0>\n\n    @allure.feature(\"Профиль пользователя (GET /api/user)\")\n    @allure.story(\"Получение профиля\")\n    @allure.title(\"Тест успешного получения данных пользователя\")\n    @allure.description(\"Проверяем получение данных профиля для аутентифицированного пользователя.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    def test_get_user_info_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного получения информации o текущем пользователе.\n    \n        Ожидаемый результат: статус 200 и валидные данные пользователя.\n        \"\"\"\n        logger.info(\"Тест: Успешное получение данных пользователя (GET /api/user)\")\n        response = authenticated_user_client.get_user_info(expected_status=200)  # type: ignore\n    \n        with allure.step(\"Проверка данных пользователя\"):  # type: ignore\n            assert isinstance(response, UserDataResponse), \"Ответ должен быть типа UserDataResponse\"\n            assert response.id is not None, \"Поле 'id' пользователя не должно быть пустым\"\n            assert isinstance(response.id, str), \"Поле 'id' пользователя должно быть типа str\"\n            assert len(response.base_locations) == 2\n    \n            education = response.educations[0]\n            assert education is not None\n            assert education.model_dump(by_alias=True)[\"organizationName\"] == \"НПГУ ДПИ\"\n            assert education.model_dump(by_alias=True)[\"level\"] == \"Высшее\"\n>           assert (\n                education.model_dump(by_alias=True)[\"specialization\"]\n                == \"Районный маркетинговый администратор\"\n            )\nE           AssertionError: assert 'Ведущий функциональный техник' == 'Районный маркетинговый администратор'\nE             \nE             - Районный маркетинговый администратор\nE             + Ведущий функциональный техник\n\ntests/user/test_user_api.py:48: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1750873347529,"stop":1750873347529,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1750873347529,"stop":1750873347530,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1750873347530,"stop":1750873347530,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1750873347530,"stop":1750873348032,"duration":502},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1750873347530,"stop":1750873347530,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1750873348033,"stop":1750873348056,"duration":23},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1750873348057,"stop":1750873348057,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_client","time":{"start":1750873348057,"stop":1750873348058,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_token","time":{"start":1750873349462,"stop":1750873349561,"duration":99},"status":"passed","steps":[],"attachments":[{"uid":"c58383396c7bd517","name":"Status Code: 200","source":"c58383396c7bd517.txt","type":"text/plain","size":3},{"uid":"2dcef678d2e165ad","name":"Request URL","source":"2dcef678d2e165ad.uri","type":"text/uri-list","size":30},{"uid":"4e7a7f36fcdd05fb","name":"Response Headers (JSON)","source":"4e7a7f36fcdd05fb.json","type":"application/json","size":317},{"uid":"5b83bcb9fd2aa2e7","name":"Response Body (JSON)","source":"5b83bcb9fd2aa2e7.json","type":"application/json","size":224},{"uid":"ef14689e54ff96cc","name":"Status response code: 200 (Expected: 200)","source":"ef14689e54ff96cc.txt","type":"text/plain","size":3},{"uid":"676aa587b825106e","name":"Body of the answer (failed by AuthSuccessResponse)","source":"676aa587b825106e.json","type":"application/json","size":220}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"authenticated_api_req_context","time":{"start":1750873350133,"stop":1750873350152,"duration":19},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_user_client","time":{"start":1750873350152,"stop":1750873350152,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_http_client","time":{"start":1750873350152,"stop":1750873350152,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем получение данных профиля для аутентифицированного пользователя.","status":"failed","statusMessage":"AssertionError: assert 'Ведущий функциональный техник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Ведущий функциональный техник","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f56b25a56d0>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f56b0ca03b0>\n\n    @allure.feature(\"Профиль пользователя (GET /api/user)\")\n    @allure.story(\"Получение профиля\")\n    @allure.title(\"Тест успешного получения данных пользователя\")\n    @allure.description(\"Проверяем получение данных профиля для аутентифицированного пользователя.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    def test_get_user_info_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного получения информации o текущем пользователе.\n    \n        Ожидаемый результат: статус 200 и валидные данные пользователя.\n        \"\"\"\n        logger.info(\"Тест: Успешное получение данных пользователя (GET /api/user)\")\n        response = authenticated_user_client.get_user_info(expected_status=200)  # type: ignore\n    \n        with allure.step(\"Проверка данных пользователя\"):  # type: ignore\n            assert isinstance(response, UserDataResponse), \"Ответ должен быть типа UserDataResponse\"\n            assert response.id is not None, \"Поле 'id' пользователя не должно быть пустым\"\n            assert isinstance(response.id, str), \"Поле 'id' пользователя должно быть типа str\"\n            assert len(response.base_locations) == 2\n    \n            education = response.educations[0]\n            assert education is not None\n            assert education.model_dump(by_alias=True)[\"organizationName\"] == \"НПГУ ДПИ\"\n            assert education.model_dump(by_alias=True)[\"level\"] == \"Высшее\"\n>           assert (\n                education.model_dump(by_alias=True)[\"specialization\"]\n                == \"Районный маркетинговый администратор\"\n            )\nE           AssertionError: assert 'Ведущий функциональный техник' == 'Районный маркетинговый администратор'\nE             \nE             - Районный маркетинговый администратор\nE             + Ведущий функциональный техник\n\ntests/user/test_user_api.py:48: AssertionError","steps":[{"name":"Получение данных текущего пользователя","time":{"start":1750873350156,"stop":1750873350204,"duration":48},"status":"passed","steps":[],"attachments":[{"uid":"af4d75e135a22ade","name":"Status Code: 200","source":"af4d75e135a22ade.txt","type":"text/plain","size":3},{"uid":"64265c6f8f1594a6","name":"Request URL","source":"64265c6f8f1594a6.uri","type":"text/uri-list","size":30},{"uid":"d2bb1f8344b0d54d","name":"Response Headers (JSON)","source":"d2bb1f8344b0d54d.json","type":"application/json","size":318},{"uid":"3514111b7aca1edd","name":"Response Body (JSON)","source":"3514111b7aca1edd.json","type":"application/json","size":1318},{"uid":"197f5158126dd062","name":"Status response code: 200 (Expected: 200)","source":"197f5158126dd062.txt","type":"text/plain","size":3},{"uid":"94dd35d0eda11f7f","name":"Body of the answer (failed by UserDataResponse)","source":"94dd35d0eda11f7f.json","type":"application/json","size":1171}],"parameters":[{"name":"expected_status","value":"200"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"Проверка данных пользователя","time":{"start":1750873350204,"stop":1750873350204,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 'Ведущий функциональный техник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Ведущий функциональный техник\n","statusTrace":"  File \"/app/tests/user/test_user_api.py\", line 48, in test_get_user_info_success\n    assert (\n    ...<2 lines>...\n    )\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"59fda2c902ffd4d1","name":"log","source":"59fda2c902ffd4d1.txt","type":"text/plain","size":4537},{"uid":"a22ee295c8e3780","name":"stderr","source":"a22ee295c8e3780.txt","type":"text/plain","size":5378}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":8,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"authenticated_api_req_context::0","time":{"start":1750873350217,"stop":1750873350230,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context::0","time":{"start":1750873350702,"stop":1750873350712,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1750873350713,"stop":1750873350721,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Профиль пользователя (GET /api/user)"},{"name":"story","value":"Получение профиля"},{"name":"epic","value":"Управление пользователем"},{"name":"severity","value":"critical"},{"name":"tag","value":"positive"},{"name":"tag","value":"smoke"},{"name":"tag","value":"user"},{"name":"parentSuite","value":"tests.user"},{"name":"suite","value":"test_user_api"},{"name":"subSuite","value":"TestUserAPI"},{"name":"host","value":"pkrvmfw4aktn2gb"},{"name":"thread","value":"3-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.user.test_user_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[{"uid":"8fcca08913d7406a","status":"failed","statusDetails":"AssertionError: assert 'Ведущий функциональный техник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Ведущий функциональный техник","time":{"start":1750873350055,"stop":1750873350098,"duration":43}},{"uid":"8534f7dd77f4d4ff","status":"failed","statusDetails":"AssertionError: assert 'Ведущий функциональный техник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Ведущий функциональный техник","time":{"start":1750873349918,"stop":1750873350013,"duration":95}},{"uid":"66a0417f2168940a","status":"failed","statusDetails":"AssertionError: assert 'Ведущий функциональный техник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Ведущий функциональный техник","time":{"start":1750873349789,"stop":1750873349878,"duration":89}},{"uid":"2ea1b303edcc1f42","status":"failed","statusDetails":"AssertionError: assert 'Ведущий функциональный техник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Ведущий функциональный техник","time":{"start":1750873349694,"stop":1750873349741,"duration":47}},{"uid":"df457f7dda1c5511","status":"failed","statusDetails":"AssertionError: assert 'Ведущий функциональный техник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Ведущий функциональный техник","time":{"start":1750873349577,"stop":1750873349635,"duration":58}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":23,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":23},"items":[{"uid":"9411c1afa0f3ddda","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/111//#testresult/9411c1afa0f3ddda","status":"failed","statusDetails":"AssertionError: assert 'Центральный коммуникационный помощник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Центральный коммуникационный помощник","time":{"start":1750872840075,"stop":1750872840115,"duration":40}},{"uid":"f3ee62caaa17f5fc","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/110//#testresult/f3ee62caaa17f5fc","status":"failed","statusDetails":"AssertionError: assert 'Глобальный операционный специалист' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Глобальный операционный специалист","time":{"start":1746737424779,"stop":1746737424821,"duration":42}},{"uid":"ed1a84ecc09fec88","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/109//#testresult/ed1a84ecc09fec88","status":"failed","statusDetails":"AssertionError: assert 'Генеральный маркетинговый координатор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Генеральный маркетинговый координатор","time":{"start":1746737207048,"stop":1746737207111,"duration":63}},{"uid":"640d2052559fabad","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/108//#testresult/640d2052559fabad","status":"failed","statusDetails":"AssertionError: assert 'Международный страховой координатор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Международный страховой координатор","time":{"start":1746559314966,"stop":1746559315044,"duration":78}},{"uid":"334ef4e99dacf7f5","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/107//#testresult/334ef4e99dacf7f5","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746559023797,"stop":1746559023880,"duration":83}},{"uid":"bbf6b0c25d5871a3","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/106//#testresult/bbf6b0c25d5871a3","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746525759252,"stop":1746525759354,"duration":102}},{"uid":"5357f3d3632726d0","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/105//#testresult/5357f3d3632726d0","status":"failed","statusDetails":"AssertionError: assert 'Главный интеграционный архитектор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Главный интеграционный архитектор","time":{"start":1746525194991,"stop":1746525195043,"duration":52}},{"uid":"4bb61d10673823f4","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/104//#testresult/4bb61d10673823f4","status":"failed","statusDetails":"AssertionError: assert 'Областной коммуникационный планировщик' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Областной коммуникационный планировщик","time":{"start":1746488405636,"stop":1746488405721,"duration":85}},{"uid":"d4dbf3eb79d2c6be","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/103//#testresult/d4dbf3eb79d2c6be","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746488160077,"stop":1746488160159,"duration":82}},{"uid":"159172343eafbd6a","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/102//#testresult/159172343eafbd6a","status":"failed","statusDetails":"AssertionError: assert 'Главный страховой планировщик' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Главный страховой планировщик","time":{"start":1746487131682,"stop":1746487131731,"duration":49}},{"uid":"37c6e658a411c07f","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/101//#testresult/37c6e658a411c07f","status":"failed","statusDetails":"AssertionError: assert 'Глобальный функциональный руководитель' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Глобальный функциональный руководитель","time":{"start":1746486678720,"stop":1746486678803,"duration":83}},{"uid":"6729fe67fa8f743","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/100//#testresult/6729fe67fa8f743","status":"failed","statusDetails":"AssertionError: assert 'Региональный функциональный консультант' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Региональный функциональный консультант","time":{"start":1746483620523,"stop":1746483620585,"duration":62}},{"uid":"5b56549d87dd098d","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/99//#testresult/5b56549d87dd098d","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746483424514,"stop":1746483424544,"duration":30}},{"uid":"586d2b992fdb5923","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/98//#testresult/586d2b992fdb5923","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746482681888,"stop":1746482681921,"duration":33}},{"uid":"e949e12418d05abc","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/97//#testresult/e949e12418d05abc","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746481275566,"stop":1746481275618,"duration":52}},{"uid":"72f843ca9d8b82d8","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/96//#testresult/72f843ca9d8b82d8","status":"failed","statusDetails":"AssertionError: assert 'Международный операционный инженер' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Международный операционный инженер","time":{"start":1746479137925,"stop":1746479138019,"duration":94}},{"uid":"fcc3bc3e66e77b42","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/95//#testresult/fcc3bc3e66e77b42","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746478918404,"stop":1746478918435,"duration":31}},{"uid":"aa3eb924cdd2cf45","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/94//#testresult/aa3eb924cdd2cf45","status":"failed","statusDetails":"AssertionError: assert 'Глобальный маркетинговый помощник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Глобальный маркетинговый помощник","time":{"start":1746398527168,"stop":1746398527231,"duration":63}},{"uid":"2c69d942ec7a841e","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/93//#testresult/2c69d942ec7a841e","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746398347046,"stop":1746398347117,"duration":71}},{"uid":"14d7638bb35e689a","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/92//#testresult/14d7638bb35e689a","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746398074041,"stop":1746398074073,"duration":32}}]},"tags":["smoke","positive","user"]},"source":"28a0ec43f3eaacaa.json","parameterValues":[]}