{"uid":"e980c6c42e242c85","name":"Тест успешного получения данных пользователя","fullName":"tests.user.test_user_api.TestUserAPI#test_get_user_info_success","historyId":"ce00374a95389d718a8d728c79e283b3","time":{"start":1755538570594,"stop":1755538570611,"duration":17},"description":"Проверяем получение данных профиля для аутентифицированного пользователя.","descriptionHtml":"<p>Проверяем получение данных профиля для аутентифицированного пользователя.</p>\n","status":"failed","statusMessage":"AssertionError: assert 'Национальный операционный архитектор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Национальный операционный архитектор","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f568d16d310>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f5687ce0dd0>\n\n    @allure.feature(\"Профиль пользователя (GET /api/user)\")\n    @allure.story(\"Получение профиля\")\n    @allure.title(\"Тест успешного получения данных пользователя\")\n    @allure.description(\"Проверяем получение данных профиля для аутентифицированного пользователя.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    def test_get_user_info_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного получения информации o текущем пользователе.\n    \n        Ожидаемый результат: статус 200 и валидные данные пользователя.\n        \"\"\"\n        logger.info(\"Тест: Успешное получение данных пользователя (GET /api/user)\")\n        response = authenticated_user_client.get_user_info(expected_status=200)  # type: ignore\n    \n        with allure.step(\"Проверка данных пользователя\"):  # type: ignore\n            assert isinstance(response, UserDataResponse), \"Ответ должен быть типа UserDataResponse\"\n            assert response.id is not None, \"Поле 'id' пользователя не должно быть пустым\"\n            assert isinstance(response.id, str), \"Поле 'id' пользователя должно быть типа str\"\n            assert len(response.base_locations) == 2\n    \n            education = response.educations[0]\n            assert education is not None\n            assert education.model_dump(by_alias=True)[\"organizationName\"] == \"НПГУ ДПИ\"\n            assert education.model_dump(by_alias=True)[\"level\"] == \"Высшее\"\n>           assert (\n                education.model_dump(by_alias=True)[\"specialization\"]\n                == \"Районный маркетинговый администратор\"\n            )\nE           AssertionError: assert 'Национальный операционный архитектор' == 'Районный маркетинговый администратор'\nE             \nE             - Районный маркетинговый администратор\nE             + Национальный операционный архитектор\n\ntests/user/test_user_api.py:48: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1755538568411,"stop":1755538568411,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1755538568412,"stop":1755538568413,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1755538568412,"stop":1755538568412,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1755538568412,"stop":1755538568412,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1755538568414,"stop":1755538568928,"duration":514},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1755538568928,"stop":1755538568943,"duration":15},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1755538568943,"stop":1755538568943,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_client","time":{"start":1755538568943,"stop":1755538568944,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_token","time":{"start":1755538570223,"stop":1755538570306,"duration":83},"status":"passed","steps":[],"attachments":[{"uid":"6695848a94385f43","name":"Status Code: 200","source":"6695848a94385f43.txt","type":"text/plain","size":3},{"uid":"7621983addb68d88","name":"Request URL","source":"7621983addb68d88.uri","type":"text/uri-list","size":30},{"uid":"c8f08d1e90d1de67","name":"Response Headers (JSON)","source":"c8f08d1e90d1de67.json","type":"application/json","size":317},{"uid":"24151846766bf1e0","name":"Response Body (JSON)","source":"24151846766bf1e0.json","type":"application/json","size":224},{"uid":"439d6b3359fb2f80","name":"Status response code: 200 (Expected: 200)","source":"439d6b3359fb2f80.txt","type":"text/plain","size":3},{"uid":"7b6977fb2f7fbd37","name":"Body of the answer (failed by AuthSuccessResponse)","source":"7b6977fb2f7fbd37.json","type":"application/json","size":220}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"authenticated_api_req_context","time":{"start":1755538570587,"stop":1755538570593,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_http_client","time":{"start":1755538570593,"stop":1755538570593,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_user_client","time":{"start":1755538570594,"stop":1755538570594,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем получение данных профиля для аутентифицированного пользователя.","status":"failed","statusMessage":"AssertionError: assert 'Национальный операционный архитектор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Национальный операционный архитектор","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f568d16d310>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f5687ce0dd0>\n\n    @allure.feature(\"Профиль пользователя (GET /api/user)\")\n    @allure.story(\"Получение профиля\")\n    @allure.title(\"Тест успешного получения данных пользователя\")\n    @allure.description(\"Проверяем получение данных профиля для аутентифицированного пользователя.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    def test_get_user_info_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного получения информации o текущем пользователе.\n    \n        Ожидаемый результат: статус 200 и валидные данные пользователя.\n        \"\"\"\n        logger.info(\"Тест: Успешное получение данных пользователя (GET /api/user)\")\n        response = authenticated_user_client.get_user_info(expected_status=200)  # type: ignore\n    \n        with allure.step(\"Проверка данных пользователя\"):  # type: ignore\n            assert isinstance(response, UserDataResponse), \"Ответ должен быть типа UserDataResponse\"\n            assert response.id is not None, \"Поле 'id' пользователя не должно быть пустым\"\n            assert isinstance(response.id, str), \"Поле 'id' пользователя должно быть типа str\"\n            assert len(response.base_locations) == 2\n    \n            education = response.educations[0]\n            assert education is not None\n            assert education.model_dump(by_alias=True)[\"organizationName\"] == \"НПГУ ДПИ\"\n            assert education.model_dump(by_alias=True)[\"level\"] == \"Высшее\"\n>           assert (\n                education.model_dump(by_alias=True)[\"specialization\"]\n                == \"Районный маркетинговый администратор\"\n            )\nE           AssertionError: assert 'Национальный операционный архитектор' == 'Районный маркетинговый администратор'\nE             \nE             - Районный маркетинговый администратор\nE             + Национальный операционный архитектор\n\ntests/user/test_user_api.py:48: AssertionError","steps":[{"name":"Получение данных текущего пользователя","time":{"start":1755538570595,"stop":1755538570609,"duration":14},"status":"passed","steps":[],"attachments":[{"uid":"615722b31ef69648","name":"Status Code: 200","source":"615722b31ef69648.txt","type":"text/plain","size":3},{"uid":"f14a2719f064ecc","name":"Request URL","source":"f14a2719f064ecc.uri","type":"text/uri-list","size":30},{"uid":"dbef61f95c585205","name":"Response Headers (JSON)","source":"dbef61f95c585205.json","type":"application/json","size":318},{"uid":"8ce6f9928491bb45","name":"Response Body (JSON)","source":"8ce6f9928491bb45.json","type":"application/json","size":1278},{"uid":"794c2aadb24333c9","name":"Status response code: 200 (Expected: 200)","source":"794c2aadb24333c9.txt","type":"text/plain","size":3},{"uid":"f454f8c9cfdd9947","name":"Body of the answer (failed by UserDataResponse)","source":"f454f8c9cfdd9947.json","type":"application/json","size":1131}],"parameters":[{"name":"expected_status","value":"200"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"Проверка данных пользователя","time":{"start":1755538570609,"stop":1755538570610,"duration":1},"status":"failed","statusMessage":"AssertionError: assert 'Национальный операционный архитектор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Национальный операционный архитектор\n","statusTrace":"  File \"/app/tests/user/test_user_api.py\", line 48, in test_get_user_info_success\n    assert (\n    ...<2 lines>...\n    )\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"b49f15eb550b842e","name":"log","source":"b49f15eb550b842e.txt","type":"text/plain","size":4674},{"uid":"22156e9a7cc8396a","name":"stderr","source":"22156e9a7cc8396a.txt","type":"text/plain","size":5539}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":8,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"authenticated_api_req_context::0","time":{"start":1755538570621,"stop":1755538570626,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context::0","time":{"start":1755538570648,"stop":1755538570654,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1755538570655,"stop":1755538570665,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Профиль пользователя (GET /api/user)"},{"name":"story","value":"Получение профиля"},{"name":"severity","value":"critical"},{"name":"epic","value":"Управление пользователем"},{"name":"tag","value":"positive"},{"name":"tag","value":"smoke"},{"name":"tag","value":"user"},{"name":"parentSuite","value":"tests.user"},{"name":"suite","value":"test_user_api"},{"name":"subSuite","value":"TestUserAPI"},{"name":"host","value":"pkrvmdgpy2b27sr"},{"name":"thread","value":"12-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.user.test_user_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[{"uid":"c46a84411d798bf3","status":"failed","statusDetails":"AssertionError: assert 'Национальный операционный архитектор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Национальный операционный архитектор","time":{"start":1755538570543,"stop":1755538570564,"duration":21}},{"uid":"c4bce61b8c79cc1a","status":"failed","statusDetails":"AssertionError: assert 'Национальный операционный архитектор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Национальный операционный архитектор","time":{"start":1755538570498,"stop":1755538570517,"duration":19}},{"uid":"3f3cadd08b0eb8bf","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1755538570433,"stop":1755538570457,"duration":24}},{"uid":"7ec60f9370ef372a","status":"failed","statusDetails":"AssertionError: assert 'Национальный операционный архитектор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Национальный операционный архитектор","time":{"start":1755538570378,"stop":1755538570400,"duration":22}},{"uid":"bb0672a978aabc0a","status":"failed","statusDetails":"AssertionError: assert 'Национальный операционный архитектор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Национальный операционный архитектор","time":{"start":1755538570315,"stop":1755538570339,"duration":24}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"105823fd990a30af","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/123//#testresult/105823fd990a30af","status":"failed","statusDetails":"AssertionError: assert 'Главный коммуникационный менеджер' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Главный коммуникационный менеджер","time":{"start":1755511587590,"stop":1755511587646,"duration":56}},{"uid":"c57e1b7f10619945","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/122//#testresult/c57e1b7f10619945","status":"failed","statusDetails":"AssertionError: assert 'Генеральный оптимизационный планировщик' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Генеральный оптимизационный планировщик","time":{"start":1755511258031,"stop":1755511258056,"duration":25}},{"uid":"dcf4e6d79dc03bab","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/121//#testresult/dcf4e6d79dc03bab","status":"failed","statusDetails":"AssertionError: assert 'Региональный интеграционный руководитель' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Региональный интеграционный руководитель","time":{"start":1755508618062,"stop":1755508618082,"duration":20}},{"uid":"8464641104d1f350","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/120//#testresult/8464641104d1f350","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1755508196574,"stop":1755508196637,"duration":63}},{"uid":"837f3f2a3055d060","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/119//#testresult/837f3f2a3055d060","status":"failed","statusDetails":"AssertionError: assert 'Центральный страховой руководитель' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Центральный страховой руководитель","time":{"start":1755507569422,"stop":1755507569441,"duration":19}}]},"tags":["smoke","positive","user"]},"source":"e980c6c42e242c85.json","parameterValues":[]}