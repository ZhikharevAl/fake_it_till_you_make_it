{"uid":"d8015fa0368b4a09","name":"Тест успешного получения данных пользователя","fullName":"tests.user.test_user_api.TestUserAPI#test_get_user_info_success","historyId":"ce00374a95389d718a8d728c79e283b3","time":{"start":1755373120825,"stop":1755373120878,"duration":53},"description":"Проверяем получение данных профиля для аутентифицированного пользователя.","descriptionHtml":"<p>Проверяем получение данных профиля для аутентифицированного пользователя.</p>\n","status":"failed","statusMessage":"AssertionError: assert 'Ведущий операционный администратор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Ведущий операционный администратор","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f6986b38e10>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f69854dca70>\n\n    @allure.feature(\"Профиль пользователя (GET /api/user)\")\n    @allure.story(\"Получение профиля\")\n    @allure.title(\"Тест успешного получения данных пользователя\")\n    @allure.description(\"Проверяем получение данных профиля для аутентифицированного пользователя.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    def test_get_user_info_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного получения информации o текущем пользователе.\n    \n        Ожидаемый результат: статус 200 и валидные данные пользователя.\n        \"\"\"\n        logger.info(\"Тест: Успешное получение данных пользователя (GET /api/user)\")\n        response = authenticated_user_client.get_user_info(expected_status=200)  # type: ignore\n    \n        with allure.step(\"Проверка данных пользователя\"):  # type: ignore\n            assert isinstance(response, UserDataResponse), \"Ответ должен быть типа UserDataResponse\"\n            assert response.id is not None, \"Поле 'id' пользователя не должно быть пустым\"\n            assert isinstance(response.id, str), \"Поле 'id' пользователя должно быть типа str\"\n            assert len(response.base_locations) == 2\n    \n            education = response.educations[0]\n            assert education is not None\n            assert education.model_dump(by_alias=True)[\"organizationName\"] == \"НПГУ ДПИ\"\n            assert education.model_dump(by_alias=True)[\"level\"] == \"Высшее\"\n>           assert (\n                education.model_dump(by_alias=True)[\"specialization\"]\n                == \"Районный маркетинговый администратор\"\n            )\nE           AssertionError: assert 'Ведущий операционный администратор' == 'Районный маркетинговый администратор'\nE             \nE             - Районный маркетинговый администратор\nE             + Ведущий операционный администратор\n\ntests/user/test_user_api.py:48: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1755373119072,"stop":1755373119073,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1755373119073,"stop":1755373119073,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1755373119075,"stop":1755373119075,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1755373119075,"stop":1755373119076,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1755373119076,"stop":1755373119569,"duration":493},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1755373119569,"stop":1755373119584,"duration":15},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_client","time":{"start":1755373119585,"stop":1755373119586,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1755373119585,"stop":1755373119585,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_token","time":{"start":1755373120425,"stop":1755373120507,"duration":82},"status":"passed","steps":[],"attachments":[{"uid":"7c6340a9a630228","name":"Status Code: 200","source":"7c6340a9a630228.txt","type":"text/plain","size":3},{"uid":"a69332bb7b8ed801","name":"Request URL","source":"a69332bb7b8ed801.uri","type":"text/uri-list","size":30},{"uid":"9f100b3412963c4f","name":"Response Headers (JSON)","source":"9f100b3412963c4f.json","type":"application/json","size":317},{"uid":"6102417726210800","name":"Response Body (JSON)","source":"6102417726210800.json","type":"application/json","size":224},{"uid":"8246fda70198ba6d","name":"Status response code: 200 (Expected: 200)","source":"8246fda70198ba6d.txt","type":"text/plain","size":3},{"uid":"67b828ca84ce2d76","name":"Body of the answer (failed by AuthSuccessResponse)","source":"67b828ca84ce2d76.json","type":"application/json","size":220}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"authenticated_api_req_context","time":{"start":1755373120817,"stop":1755373120824,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_http_client","time":{"start":1755373120824,"stop":1755373120824,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"authenticated_user_client","time":{"start":1755373120825,"stop":1755373120825,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем получение данных профиля для аутентифицированного пользователя.","status":"failed","statusMessage":"AssertionError: assert 'Ведущий операционный администратор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Ведущий операционный администратор","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f6986b38e10>\nauthenticated_user_client = <api.user.client.UserClient object at 0x7f69854dca70>\n\n    @allure.feature(\"Профиль пользователя (GET /api/user)\")\n    @allure.story(\"Получение профиля\")\n    @allure.title(\"Тест успешного получения данных пользователя\")\n    @allure.description(\"Проверяем получение данных профиля для аутентифицированного пользователя.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.smoke\n    @pytest.mark.positive\n    def test_get_user_info_success(self, authenticated_user_client: UserClient) -> None:\n        \"\"\"\n        Проверка успешного получения информации o текущем пользователе.\n    \n        Ожидаемый результат: статус 200 и валидные данные пользователя.\n        \"\"\"\n        logger.info(\"Тест: Успешное получение данных пользователя (GET /api/user)\")\n        response = authenticated_user_client.get_user_info(expected_status=200)  # type: ignore\n    \n        with allure.step(\"Проверка данных пользователя\"):  # type: ignore\n            assert isinstance(response, UserDataResponse), \"Ответ должен быть типа UserDataResponse\"\n            assert response.id is not None, \"Поле 'id' пользователя не должно быть пустым\"\n            assert isinstance(response.id, str), \"Поле 'id' пользователя должно быть типа str\"\n            assert len(response.base_locations) == 2\n    \n            education = response.educations[0]\n            assert education is not None\n            assert education.model_dump(by_alias=True)[\"organizationName\"] == \"НПГУ ДПИ\"\n            assert education.model_dump(by_alias=True)[\"level\"] == \"Высшее\"\n>           assert (\n                education.model_dump(by_alias=True)[\"specialization\"]\n                == \"Районный маркетинговый администратор\"\n            )\nE           AssertionError: assert 'Ведущий операционный администратор' == 'Районный маркетинговый администратор'\nE             \nE             - Районный маркетинговый администратор\nE             + Ведущий операционный администратор\n\ntests/user/test_user_api.py:48: AssertionError","steps":[{"name":"Получение данных текущего пользователя","time":{"start":1755373120826,"stop":1755373120876,"duration":50},"status":"passed","steps":[],"attachments":[{"uid":"fc7cae19b3afb2e","name":"Status Code: 200","source":"fc7cae19b3afb2e.txt","type":"text/plain","size":3},{"uid":"df5f9b19865e895","name":"Request URL","source":"df5f9b19865e895.uri","type":"text/uri-list","size":30},{"uid":"720b6aa4b0cc1066","name":"Response Headers (JSON)","source":"720b6aa4b0cc1066.json","type":"application/json","size":318},{"uid":"35dbf03a10e5a910","name":"Response Body (JSON)","source":"35dbf03a10e5a910.json","type":"application/json","size":1274},{"uid":"bcbe49e1fcf44907","name":"Status response code: 200 (Expected: 200)","source":"bcbe49e1fcf44907.txt","type":"text/plain","size":3},{"uid":"d7b002df4eadb6e1","name":"Body of the answer (failed by UserDataResponse)","source":"d7b002df4eadb6e1.json","type":"application/json","size":1127}],"parameters":[{"name":"expected_status","value":"200"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"Проверка данных пользователя","time":{"start":1755373120876,"stop":1755373120877,"duration":1},"status":"failed","statusMessage":"AssertionError: assert 'Ведущий операционный администратор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Ведущий операционный администратор\n","statusTrace":"  File \"/app/tests/user/test_user_api.py\", line 48, in test_get_user_info_success\n    assert (\n    ...<2 lines>...\n    )\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"83be1250da7e5422","name":"log","source":"83be1250da7e5422.txt","type":"text/plain","size":4537},{"uid":"2bd5ec05655e0497","name":"stderr","source":"2bd5ec05655e0497.txt","type":"text/plain","size":5378}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":8,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"authenticated_api_req_context::0","time":{"start":1755373120889,"stop":1755373120893,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context::0","time":{"start":1755373121171,"stop":1755373121174,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1755373121175,"stop":1755373121183,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"critical"},{"name":"epic","value":"Управление пользователем"},{"name":"feature","value":"Профиль пользователя (GET /api/user)"},{"name":"story","value":"Получение профиля"},{"name":"tag","value":"positive"},{"name":"tag","value":"smoke"},{"name":"tag","value":"user"},{"name":"parentSuite","value":"tests.user"},{"name":"suite","value":"test_user_api"},{"name":"subSuite","value":"TestUserAPI"},{"name":"host","value":"pkrvmdgpy2b27sr"},{"name":"thread","value":"3-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.user.test_user_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[{"uid":"71f486767ded2721","status":"failed","statusDetails":"AssertionError: assert 'Ведущий операционный администратор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Ведущий операционный администратор","time":{"start":1755373120764,"stop":1755373120786,"duration":22}},{"uid":"eb3bd006ff970a57","status":"failed","statusDetails":"AssertionError: assert 'Ведущий операционный администратор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Ведущий операционный администратор","time":{"start":1755373120704,"stop":1755373120727,"duration":23}},{"uid":"d8b5d854fd93c293","status":"failed","statusDetails":"AssertionError: assert 'Ведущий операционный администратор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Ведущий операционный администратор","time":{"start":1755373120640,"stop":1755373120666,"duration":26}},{"uid":"c7031de46824b96b","status":"failed","statusDetails":"AssertionError: assert 'Ведущий операционный администратор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Ведущий операционный администратор","time":{"start":1755373120581,"stop":1755373120606,"duration":25}},{"uid":"bda3a388afdb5fdc","status":"failed","statusDetails":"AssertionError: assert 'Ведущий операционный администратор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Ведущий операционный администратор","time":{"start":1755373120515,"stop":1755373120544,"duration":29}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":26,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":26},"items":[{"uid":"2115cff2fee0a167","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/114//#testresult/2115cff2fee0a167","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1751392822651,"stop":1751392822673,"duration":22}},{"uid":"64daf49cab9c2c42","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/113//#testresult/64daf49cab9c2c42","status":"failed","statusDetails":"AssertionError: assert 'Районный интеграционный архитектор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Районный интеграционный архитектор","time":{"start":1751391609540,"stop":1751391609604,"duration":64}},{"uid":"28a0ec43f3eaacaa","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/112//#testresult/28a0ec43f3eaacaa","status":"failed","statusDetails":"AssertionError: assert 'Ведущий функциональный техник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Ведущий функциональный техник","time":{"start":1750873350155,"stop":1750873350205,"duration":50}},{"uid":"9411c1afa0f3ddda","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/111//#testresult/9411c1afa0f3ddda","status":"failed","statusDetails":"AssertionError: assert 'Центральный коммуникационный помощник' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Центральный коммуникационный помощник","time":{"start":1750872840075,"stop":1750872840115,"duration":40}},{"uid":"f3ee62caaa17f5fc","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/110//#testresult/f3ee62caaa17f5fc","status":"failed","statusDetails":"AssertionError: assert 'Глобальный операционный специалист' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Глобальный операционный специалист","time":{"start":1746737424779,"stop":1746737424821,"duration":42}},{"uid":"ed1a84ecc09fec88","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/109//#testresult/ed1a84ecc09fec88","status":"failed","statusDetails":"AssertionError: assert 'Генеральный маркетинговый координатор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Генеральный маркетинговый координатор","time":{"start":1746737207048,"stop":1746737207111,"duration":63}},{"uid":"640d2052559fabad","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/108//#testresult/640d2052559fabad","status":"failed","statusDetails":"AssertionError: assert 'Международный страховой координатор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Международный страховой координатор","time":{"start":1746559314966,"stop":1746559315044,"duration":78}},{"uid":"334ef4e99dacf7f5","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/107//#testresult/334ef4e99dacf7f5","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746559023797,"stop":1746559023880,"duration":83}},{"uid":"bbf6b0c25d5871a3","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/106//#testresult/bbf6b0c25d5871a3","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746525759252,"stop":1746525759354,"duration":102}},{"uid":"5357f3d3632726d0","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/105//#testresult/5357f3d3632726d0","status":"failed","statusDetails":"AssertionError: assert 'Главный интеграционный архитектор' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Главный интеграционный архитектор","time":{"start":1746525194991,"stop":1746525195043,"duration":52}},{"uid":"4bb61d10673823f4","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/104//#testresult/4bb61d10673823f4","status":"failed","statusDetails":"AssertionError: assert 'Областной коммуникационный планировщик' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Областной коммуникационный планировщик","time":{"start":1746488405636,"stop":1746488405721,"duration":85}},{"uid":"d4dbf3eb79d2c6be","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/103//#testresult/d4dbf3eb79d2c6be","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746488160077,"stop":1746488160159,"duration":82}},{"uid":"159172343eafbd6a","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/102//#testresult/159172343eafbd6a","status":"failed","statusDetails":"AssertionError: assert 'Главный страховой планировщик' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Главный страховой планировщик","time":{"start":1746487131682,"stop":1746487131731,"duration":49}},{"uid":"37c6e658a411c07f","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/101//#testresult/37c6e658a411c07f","status":"failed","statusDetails":"AssertionError: assert 'Глобальный функциональный руководитель' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Глобальный функциональный руководитель","time":{"start":1746486678720,"stop":1746486678803,"duration":83}},{"uid":"6729fe67fa8f743","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/100//#testresult/6729fe67fa8f743","status":"failed","statusDetails":"AssertionError: assert 'Региональный функциональный консультант' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Региональный функциональный консультант","time":{"start":1746483620523,"stop":1746483620585,"duration":62}},{"uid":"5b56549d87dd098d","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/99//#testresult/5b56549d87dd098d","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746483424514,"stop":1746483424544,"duration":30}},{"uid":"586d2b992fdb5923","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/98//#testresult/586d2b992fdb5923","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746482681888,"stop":1746482681921,"duration":33}},{"uid":"e949e12418d05abc","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/97//#testresult/e949e12418d05abc","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746481275566,"stop":1746481275618,"duration":52}},{"uid":"72f843ca9d8b82d8","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/96//#testresult/72f843ca9d8b82d8","status":"failed","statusDetails":"AssertionError: assert 'Международный операционный инженер' == 'Районный маркетинговый администратор'\n  \n  - Районный маркетинговый администратор\n  + Международный операционный инженер","time":{"start":1746479137925,"stop":1746479138019,"duration":94}},{"uid":"fcc3bc3e66e77b42","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/95//#testresult/fcc3bc3e66e77b42","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/user\nBody of the answer:\nPlanned Server Error","time":{"start":1746478918404,"stop":1746478918435,"duration":31}}]},"tags":["smoke","positive","user"]},"source":"d8015fa0368b4a09.json","parameterValues":[]}