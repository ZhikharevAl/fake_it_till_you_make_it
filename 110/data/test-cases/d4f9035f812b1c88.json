{"uid":"d4f9035f812b1c88","name":"Тест успешного получения деталей существующего запроса","fullName":"tests.request.test_request_api.TestRequestAPI#test_get_request_details_success","historyId":"848c3990855d944f629b42a62406a4ac","time":{"start":1746737424047,"stop":1746737424104,"duration":57},"description":"Проверяем получение деталей запроса по существующему ID и валидируем поля.","descriptionHtml":"<p>Проверяем получение деталей запроса по существующему ID и валидируем поля.</p>\n","status":"failed","statusMessage":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\n{\"message\":\"No token provided.\"}","statusTrace":"self = <tests.request.test_request_api.TestRequestAPI object at 0x7fa91af3f4d0>\nrequest_client = <api.request.client.RequestClient object at 0x7fa9195123c0>\n\n    @allure.feature(\"Детали запроса (GET /api/request/{id})\")\n    @allure.story(\"Получение деталей\")\n    @allure.title(\"Тест успешного получения деталей существующего запроса\")\n    @allure.description(\n        \"Проверяем получение деталей запроса по существующему ID и валидируем поля.\"\n    )\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.positive\n    def test_get_request_details_success(self, request_client: RequestClient) -> None:\n        \"\"\"\n        Проверка успешного получения деталей существующего запроса.\n    \n        Ожидаемый результат: статус 200 и объект HelpRequestData c корректными полями.\n        \"\"\"\n        logger.info(\n            \"Тест: Успешное получение деталей запроса (GET /api/request/%s)\", EXISTING_REQUEST_ID\n        )\n>       response = request_client.get_request_details(\n            request_id=EXISTING_REQUEST_ID, expected_status=200\n        )  # type: ignore\n\ntests/request/test_request_api.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/request/client.py:65: in get_request_details\n    return self._handle_response(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.request.client.RequestClient object at 0x7fa9195123c0>\nresponse = <APIResponse url='http://localhost:4040/api/request/request-id-1' status=403 status_text='Forbidden'>\nexpected_status = 200\nresponse_model = <class 'api.request.models.HelpRequestData'>\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1\nE       Body of the answer:\nE       {\"message\":\"No token provided.\"}\n\napi/base_api.py:69: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1746737421810,"stop":1746737421811,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1746737421811,"stop":1746737421812,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1746737421811,"stop":1746737421811,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1746737421812,"stop":1746737421812,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1746737421812,"stop":1746737422333,"duration":521},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1746737422334,"stop":1746737422363,"duration":29},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1746737422364,"stop":1746737422364,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"request_client","time":{"start":1746737422916,"stop":1746737422917,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем получение деталей запроса по существующему ID и валидируем поля.","status":"failed","statusMessage":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\n{\"message\":\"No token provided.\"}","statusTrace":"self = <tests.request.test_request_api.TestRequestAPI object at 0x7fa91af3f4d0>\nrequest_client = <api.request.client.RequestClient object at 0x7fa9195123c0>\n\n    @allure.feature(\"Детали запроса (GET /api/request/{id})\")\n    @allure.story(\"Получение деталей\")\n    @allure.title(\"Тест успешного получения деталей существующего запроса\")\n    @allure.description(\n        \"Проверяем получение деталей запроса по существующему ID и валидируем поля.\"\n    )\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.positive\n    def test_get_request_details_success(self, request_client: RequestClient) -> None:\n        \"\"\"\n        Проверка успешного получения деталей существующего запроса.\n    \n        Ожидаемый результат: статус 200 и объект HelpRequestData c корректными полями.\n        \"\"\"\n        logger.info(\n            \"Тест: Успешное получение деталей запроса (GET /api/request/%s)\", EXISTING_REQUEST_ID\n        )\n>       response = request_client.get_request_details(\n            request_id=EXISTING_REQUEST_ID, expected_status=200\n        )  # type: ignore\n\ntests/request/test_request_api.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/request/client.py:65: in get_request_details\n    return self._handle_response(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.request.client.RequestClient object at 0x7fa9195123c0>\nresponse = <APIResponse url='http://localhost:4040/api/request/request-id-1' status=403 status_text='Forbidden'>\nexpected_status = 200\nresponse_model = <class 'api.request.models.HelpRequestData'>\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1\nE       Body of the answer:\nE       {\"message\":\"No token provided.\"}\n\napi/base_api.py:69: AssertionError","steps":[{"name":"Получение деталей запроса помощи: id='request-id-1'","time":{"start":1746737424048,"stop":1746737424103,"duration":55},"status":"failed","statusMessage":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\n{\"message\":\"No token provided.\"}\n","statusTrace":"  File \"/app/.venv/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/app/api/request/client.py\", line 65, in get_request_details\n    return self._handle_response(\n           ~~~~~~~~~~~~~~~~~~~~~^\n        response,\n        ^^^^^^^^^\n        expected_status,\n        ^^^^^^^^^^^^^^^^\n        response_model=HelpRequestData if expected_status == 200 else None,\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/app/api/base_api.py\", line 69, in _handle_response\n    assert response.status == expected_status, (\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[{"uid":"1e13f13210d64174","name":"Status Code: 403","source":"1e13f13210d64174.txt","type":"text/plain","size":3},{"uid":"63d94cfa628f108e","name":"Request URL","source":"63d94cfa628f108e.uri","type":"text/uri-list","size":46},{"uid":"1b092859b2b7fcc1","name":"Response Headers (JSON)","source":"1b092859b2b7fcc1.json","type":"application/json","size":316},{"uid":"6bb9316d515dfe96","name":"Response Body (JSON)","source":"6bb9316d515dfe96.json","type":"application/json","size":39},{"uid":"a8ad9cbc95d94ac3","name":"Status response code: 403 (Expected: 200)","source":"a8ad9cbc95d94ac3.txt","type":"text/plain","size":3}],"parameters":[{"name":"request_id","value":"'request-id-1'"},{"name":"expected_status","value":"200"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":5,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"536f3cf2c3c89a9","name":"log","source":"536f3cf2c3c89a9.txt","type":"text/plain","size":3028},{"uid":"382d96fd3c02a40d","name":"stderr","source":"382d96fd3c02a40d.txt","type":"text/plain","size":3557}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":7,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"api_request_context::0","time":{"start":1746737425249,"stop":1746737425266,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1746737425267,"stop":1746737425281,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Детали запроса (GET /api/request/{id})"},{"name":"epic","value":"Запросы помощи"},{"name":"story","value":"Получение деталей"},{"name":"tag","value":"positive"},{"name":"tag","value":"request"},{"name":"parentSuite","value":"tests.request"},{"name":"suite","value":"test_request_api"},{"name":"subSuite","value":"TestRequestAPI"},{"name":"host","value":"fv-az525-333"},{"name":"thread","value":"3-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.request.test_request_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b5adb6d174708cb3","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746737423958,"stop":1746737424012,"duration":54}},{"uid":"d63bd358e0d720ba","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746737423856,"stop":1746737423917,"duration":61}},{"uid":"cd028b47b7e6ef92","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746737423761,"stop":1746737423818,"duration":57}},{"uid":"26884b8e00dd6bbe","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\nPlanned Server Error","time":{"start":1746737423605,"stop":1746737423725,"duration":120}},{"uid":"889d5ead404ecbc8","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746737423508,"stop":1746737423565,"duration":57}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":21,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":21},"items":[{"uid":"bdc84ca16b38a52e","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/109//#testresult/bdc84ca16b38a52e","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\nPlanned Server Error","time":{"start":1746737206454,"stop":1746737206566,"duration":112}},{"uid":"6c8e3b8c47c6d26d","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/108//#testresult/6c8e3b8c47c6d26d","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\nPlanned Server Error","time":{"start":1746559314063,"stop":1746559314140,"duration":77}},{"uid":"cac539b20fdf4d93","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/107//#testresult/cac539b20fdf4d93","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746559023083,"stop":1746559023133,"duration":50}},{"uid":"d5ae6b9cbfee726a","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/106//#testresult/d5ae6b9cbfee726a","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746525758619,"stop":1746525758676,"duration":57}},{"uid":"a3c689702d92adc","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/105//#testresult/a3c689702d92adc","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746525194222,"stop":1746525194326,"duration":104}},{"uid":"c0eeab7768df2304","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/104//#testresult/c0eeab7768df2304","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\nPlanned Server Error","time":{"start":1746488404831,"stop":1746488404887,"duration":56}},{"uid":"b5a97ce61b70cae5","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/103//#testresult/b5a97ce61b70cae5","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\nPlanned Server Error","time":{"start":1746488159423,"stop":1746488159489,"duration":66}},{"uid":"96769f66c09df686","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/102//#testresult/96769f66c09df686","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746487130942,"stop":1746487130992,"duration":50}},{"uid":"67265d7d5ae30ddd","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/101//#testresult/67265d7d5ae30ddd","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 500. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\nPlanned Server Error","time":{"start":1746486677959,"stop":1746486678027,"duration":68}},{"uid":"293b1620f6f8276d","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/100//#testresult/293b1620f6f8276d","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746483619592,"stop":1746483619648,"duration":56}},{"uid":"d691273a52f439f1","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/99//#testresult/d691273a52f439f1","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746483424239,"stop":1746483424263,"duration":24}},{"uid":"654e19068b267cf8","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/98//#testresult/654e19068b267cf8","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746482681579,"stop":1746482681606,"duration":27}},{"uid":"689be97fde005f04","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/97//#testresult/689be97fde005f04","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746481274794,"stop":1746481274884,"duration":90}},{"uid":"e4bd16f588512bd","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/96//#testresult/e4bd16f588512bd","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746479137090,"stop":1746479137145,"duration":55}},{"uid":"c6aaf33b8dc523f9","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/95//#testresult/c6aaf33b8dc523f9","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746478918122,"stop":1746478918146,"duration":24}},{"uid":"e21b7e163b7af183","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/94//#testresult/e21b7e163b7af183","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746398526724,"stop":1746398526775,"duration":51}},{"uid":"2a0f5b293675c304","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/93//#testresult/2a0f5b293675c304","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746398346204,"stop":1746398346245,"duration":41}},{"uid":"e021bca8809d4273","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/92//#testresult/e021bca8809d4273","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746398073757,"stop":1746398073783,"duration":26}},{"uid":"1dbd17f7ac735c46","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/91//#testresult/1dbd17f7ac735c46","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746395042991,"stop":1746395043042,"duration":51}},{"uid":"80e21e7a4d04fd48","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/90//#testresult/80e21e7a4d04fd48","status":"failed","statusDetails":"AssertionError: The status was pending 200, but received 403. URL: http://localhost:4040/api/request/request-id-1\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746394512561,"stop":1746394512620,"duration":59}}]},"tags":["request","positive"]},"source":"d4f9035f812b1c88.json","parameterValues":[]}