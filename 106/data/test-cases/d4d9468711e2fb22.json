{"uid":"d4d9468711e2fb22","name":"Тест удаления из избранного без аутентификации","fullName":"tests.user.test_user_api.TestUserAPI#test_remove_from_favourites_unauthorized","historyId":"1033939dd05afa312f53a1fdaa5c410d","time":{"start":1746525759087,"stop":1746525759185,"duration":98},"description":"Проверяем, что неавторизованный пользователь получает ошибку 401.","descriptionHtml":"<p>Проверяем, что неавторизованный пользователь получает ошибку 401.</p>\n","status":"failed","statusMessage":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user/favourites/any-id\nBody of the answer:\n{\"message\":\"No token provided.\"}","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f29bf5068b0>\nuser_client = <api.user.client.UserClient object at 0x7f29be120980>\n\n    @allure.feature(\"Избранное пользователя (DELETE /api/user/favourites/{id})\")\n    @allure.story(\"Удаление из избранного\")\n    @allure.title(\"Тест удаления из избранного без аутентификации\")\n    @allure.description(\"Проверяем, что неавторизованный пользователь получает ошибку 401.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.negative\n    def test_remove_from_favourites_unauthorized(self, user_client: UserClient) -> None:\n        \"\"\"\n        Проверка удаления из избранного без аутентификации.\n    \n        Ожидаемый результат: статус 401 Unauthorized.\n        \"\"\"\n        logger.info(\"Тест: Удаление из избранного без авторизации (DELETE ...)\")\n>       response = user_client.remove_from_favourites(request_id=\"any-id\", expected_status=401)  # type: ignore\n\ntests/user/test_user_api.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/user/client.py:82: in remove_from_favourites\n    processed_response = self._handle_response(response, expected_status)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.user.client.UserClient object at 0x7f29be120980>\nresponse = <APIResponse url='http://localhost:4040/api/user/favourites/any-id' status=403 status_text='Forbidden'>\nexpected_status = 401, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user/favourites/any-id\nE       Body of the answer:\nE       {\"message\":\"No token provided.\"}\n\napi/base_api.py:69: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1746525756267,"stop":1746525756267,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1746525756267,"stop":1746525756267,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1746525756268,"stop":1746525756268,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance","time":{"start":1746525756268,"stop":1746525756785,"duration":517},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1746525756268,"stop":1746525756268,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_request_context","time":{"start":1746525756786,"stop":1746525756815,"duration":29},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"http_client","time":{"start":1746525756815,"stop":1746525756816,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_client","time":{"start":1746525758556,"stop":1746525758556,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяем, что неавторизованный пользователь получает ошибку 401.","status":"failed","statusMessage":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user/favourites/any-id\nBody of the answer:\n{\"message\":\"No token provided.\"}","statusTrace":"self = <tests.user.test_user_api.TestUserAPI object at 0x7f29bf5068b0>\nuser_client = <api.user.client.UserClient object at 0x7f29be120980>\n\n    @allure.feature(\"Избранное пользователя (DELETE /api/user/favourites/{id})\")\n    @allure.story(\"Удаление из избранного\")\n    @allure.title(\"Тест удаления из избранного без аутентификации\")\n    @allure.description(\"Проверяем, что неавторизованный пользователь получает ошибку 401.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.negative\n    def test_remove_from_favourites_unauthorized(self, user_client: UserClient) -> None:\n        \"\"\"\n        Проверка удаления из избранного без аутентификации.\n    \n        Ожидаемый результат: статус 401 Unauthorized.\n        \"\"\"\n        logger.info(\"Тест: Удаление из избранного без авторизации (DELETE ...)\")\n>       response = user_client.remove_from_favourites(request_id=\"any-id\", expected_status=401)  # type: ignore\n\ntests/user/test_user_api.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/user/client.py:82: in remove_from_favourites\n    processed_response = self._handle_response(response, expected_status)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.user.client.UserClient object at 0x7f29be120980>\nresponse = <APIResponse url='http://localhost:4040/api/user/favourites/any-id' status=403 status_text='Forbidden'>\nexpected_status = 401, response_model = None\n\n    def _handle_response(\n        self,\n        response: APIResponse,\n        expected_status: int,\n        response_model: type[T] | None = None,\n    ) -> T | APIResponse:\n        \"\"\"\n        A generic method to handle the API response.\n    \n        Checks the status code and, if a model is specified, validates the response body against it.\n    \n        Args:\n            response: APIResponse object received from HTTPClient.\n            expected_status: Expected HTTP status code.\n            response_model: Optional Pydantic model class for validating the response body.\n    \n        Returns:\n            An instance of response_model if the validation was successful.\n            Raw APIResponse object if response_model is not specified or validation is not required.\n    \n        Raises:\n            AssertionError: If the actual status of the code does not match the expected_status,\n                           or if it failed to parse JSON,\n                           or if the Pydantic model validation failed.\n        \"\"\"\n        self.logger.debug(\n            \"Handling response: Status=%s, Expected=%s, URL=%s\",\n            response.status,\n            expected_status,\n            response.url,\n        )\n    \n        allure.attach(\n            name=f\"Status response code: {response.status} (Expected: {expected_status})\",\n            body=str(response.status),\n            attachment_type=allure.attachment_type.TEXT,\n        )\n    \n>       assert response.status == expected_status, (\n            f\"The status was pending {expected_status}, but received {response.status}. \"\n            f\"URL: {response.url}\\nBody of the answer:\\n{response.text()}\"\n        )\nE       AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user/favourites/any-id\nE       Body of the answer:\nE       {\"message\":\"No token provided.\"}\n\napi/base_api.py:69: AssertionError","steps":[{"name":"Удаление запроса из избранного","time":{"start":1746525759089,"stop":1746525759184,"duration":95},"status":"failed","statusMessage":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user/favourites/any-id\nBody of the answer:\n{\"message\":\"No token provided.\"}\n","statusTrace":"  File \"/app/.venv/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/app/api/user/client.py\", line 82, in remove_from_favourites\n    processed_response = self._handle_response(response, expected_status)\n  File \"/app/api/base_api.py\", line 69, in _handle_response\n    assert response.status == expected_status, (\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[{"uid":"8b6a6c54d132e67","name":"Status Code: 403","source":"8b6a6c54d132e67.txt","type":"text/plain","size":3},{"uid":"1110d1f78b5715fc","name":"Request URL","source":"1110d1f78b5715fc.uri","type":"text/uri-list","size":48},{"uid":"853dc5e7c67c9da3","name":"Response Headers (JSON)","source":"853dc5e7c67c9da3.json","type":"application/json","size":316},{"uid":"439cf9652dbe159","name":"Response Body (JSON)","source":"439cf9652dbe159.json","type":"application/json","size":39},{"uid":"3aad634c985663aa","name":"Status response code: 403 (Expected: 401)","source":"3aad634c985663aa.txt","type":"text/plain","size":3}],"parameters":[{"name":"request_id","value":"'any-id'"},{"name":"expected_status","value":"401"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":5,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"79435321e6e0962d","name":"log","source":"79435321e6e0962d.txt","type":"text/plain","size":3073},{"uid":"c64b6a766836c0b","name":"stderr","source":"c64b6a766836c0b.txt","type":"text/plain","size":3647}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":7,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"api_request_context::0","time":{"start":1746525760064,"stop":1746525760077,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright_instance::0","time":{"start":1746525760079,"stop":1746525760087,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Избранное пользователя (DELETE /api/user/favourites/{id})"},{"name":"epic","value":"Управление пользователем"},{"name":"story","value":"Удаление из избранного"},{"name":"severity","value":"critical"},{"name":"tag","value":"negative"},{"name":"tag","value":"user"},{"name":"parentSuite","value":"tests.user"},{"name":"suite","value":"test_user_api"},{"name":"subSuite","value":"TestUserAPI"},{"name":"host","value":"fv-az1432-705"},{"name":"thread","value":"12-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.user.test_user_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[{"uid":"68e4862d2a257acb","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 500. URL: http://localhost:4040/api/user/favourites/any-id\nBody of the answer:\nPlanned Server Error","time":{"start":1746525758971,"stop":1746525759055,"duration":84}},{"uid":"a2694658cf36962","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user/favourites/any-id\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746525758874,"stop":1746525758932,"duration":58}},{"uid":"4f0d872f427d78d1","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user/favourites/any-id\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746525758780,"stop":1746525758837,"duration":57}},{"uid":"d08ef235354745a4","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user/favourites/any-id\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746525758689,"stop":1746525758747,"duration":58}},{"uid":"126c8b30d774b913","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 500. URL: http://localhost:4040/api/user/favourites/any-id\nBody of the answer:\nPlanned Server Error","time":{"start":1746525758561,"stop":1746525758652,"duration":91}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":17,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":17},"items":[{"uid":"283921f6a32abbea","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/105//#testresult/283921f6a32abbea","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 500. URL: http://localhost:4040/api/user/favourites/any-id\nBody of the answer:\nPlanned Server Error","time":{"start":1746525195336,"stop":1746525195407,"duration":71}},{"uid":"ead6d41be186fab1","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/104//#testresult/ead6d41be186fab1","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user/favourites/any-id\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746488405473,"stop":1746488405527,"duration":54}},{"uid":"e0eaf24f6fcdd4ee","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/103//#testresult/e0eaf24f6fcdd4ee","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 500. URL: http://localhost:4040/api/user/favourites/any-id\nBody of the answer:\nPlanned Server Error","time":{"start":1746488159902,"stop":1746488160012,"duration":110}},{"uid":"bd12ad09e96863b8","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/102//#testresult/bd12ad09e96863b8","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user/favourites/any-id\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746487131417,"stop":1746487131468,"duration":51}},{"uid":"ddff10151e1025ad","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/101//#testresult/ddff10151e1025ad","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user/favourites/any-id\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746486678567,"stop":1746486678619,"duration":52}},{"uid":"844b501a3f120b1a","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/100//#testresult/844b501a3f120b1a","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user/favourites/any-id\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746483620203,"stop":1746483620262,"duration":59}},{"uid":"1a9a06b339c8fe1a","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/99//#testresult/1a9a06b339c8fe1a","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user/favourites/any-id\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746483424664,"stop":1746483424687,"duration":23}},{"uid":"f1e4c4b19688bc9f","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/98//#testresult/f1e4c4b19688bc9f","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user/favourites/any-id\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746482682070,"stop":1746482682094,"duration":24}},{"uid":"efbab2c080d6e9ac","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/97//#testresult/efbab2c080d6e9ac","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user/favourites/any-id\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746481275301,"stop":1746481275355,"duration":54}},{"uid":"21e1c15516c5b14e","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/96//#testresult/21e1c15516c5b14e","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user/favourites/any-id\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746479138452,"stop":1746479138503,"duration":51}},{"uid":"7cab16c175b17272","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/95//#testresult/7cab16c175b17272","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user/favourites/any-id\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746478918555,"stop":1746478918578,"duration":23}},{"uid":"9117c415c75ef888","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/94//#testresult/9117c415c75ef888","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user/favourites/any-id\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746398527765,"stop":1746398527818,"duration":53}},{"uid":"2d2a24f2aa0ce1a1","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/93//#testresult/2d2a24f2aa0ce1a1","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user/favourites/any-id\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746398346889,"stop":1746398346966,"duration":77}},{"uid":"ba3be7a8f03e4a45","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/92//#testresult/ba3be7a8f03e4a45","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user/favourites/any-id\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746398074195,"stop":1746398074219,"duration":24}},{"uid":"4cc2350ed69f6484","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/91//#testresult/4cc2350ed69f6484","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 403. URL: http://localhost:4040/api/user/favourites/any-id\nBody of the answer:\n{\"message\":\"No token provided.\"}","time":{"start":1746395043626,"stop":1746395043677,"duration":51}},{"uid":"b4e53dde74e951e4","reportUrl":"https://ZhikharevAl.github.io/fake_it_till_you_make_it/90//#testresult/b4e53dde74e951e4","status":"failed","statusDetails":"AssertionError: The status was pending 401, but received 500. URL: http://localhost:4040/api/user/favourites/any-id\nBody of the answer:\nPlanned Server Error","time":{"start":1746394513569,"stop":1746394513638,"duration":69}}]},"tags":["negative","user"]},"source":"d4d9468711e2fb22.json","parameterValues":[]}